initSidebarItems({"fn":[["would_block","Returns a std `WouldBlock` error without allocating"]],"mod":[["channel","Thread safe communication channel implementing `Evented`"],["deprecated","EventLoop and other deprecated types"],["tcp","Primitives for working with TCP"],["timer","Timer optimized for I/O related operations"],["udp","Primitives for working with UDP"],["unix","Unix only extensions"]],"struct":[["Event","An readiness event returned by `Poll`."],["Events","A buffer for I/O events to get placed into, passed to `Poll::poll`."],["EventsIter","Iterate an Events structure"],["Poll","Polls for readiness events on all registered values."],["PollOpt","Configures readiness polling behavior for a given `Evented` value."],["Ready","A set of readiness events returned by `Poll`."],["Registration","Handle to a Poll registration. Used for registering custom types for event notifications."],["SetReadiness","Used to update readiness for an associated `Registration`. `SetReadiness` is `Sync` which allows it to be updated across threads."],["Token","Used to identify which `Evented` value is associated with an `Event` notification returned by `Poll`."]],"trait":[["Evented","A value that may be registered with an `EventLoop`"]]});