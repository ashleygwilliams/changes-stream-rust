var searchIndex = {};
searchIndex["changes_stream"] = {"doc":"This is documentation for the `changes-stream` crate.","items":[[3,"ChangesStream","changes_stream","A structure to generate a readable stream on which you can register handlers.",null,null],[11,"new","","Constructs a new `ChangesStream` struct",0,{"inputs":[{"name":"string"}],"output":{"name":"changesstream"}}],[11,"on","","Registers a handler. A handler is simply a function\nyou&#39;d like to call on a chunk from the stream at the\ntime the chunk is read.",0,null],[11,"run","","Runs the `ChangesStream` struct&#39;s event loop, `lp`.",0,null]],"paths":[[3,"ChangesStream"]]};
searchIndex["hyper"] = {"doc":"# Hyper","items":[[3,"Url","hyper","A parsed URL record.",null,null],[3,"Body","","A `Stream` for `Chunk`s used in requests and responses.",null,null],[3,"Chunk","","A piece of a message body.",null,null],[4,"Method","","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",0,null],[13,"Get","","GET",0,null],[13,"Post","","POST",0,null],[13,"Put","","PUT",0,null],[13,"Delete","","DELETE",0,null],[13,"Head","","HEAD",0,null],[13,"Trace","","TRACE",0,null],[13,"Connect","","CONNECT",0,null],[13,"Patch","","PATCH",0,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(&quot;FOO&quot;.to_string())`.",0,null],[4,"RequestUri","","The Request-URI of a Request&#39;s StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",1,null],[12,"path","hyper::RequestUri","The path part of the request uri.",1,null],[12,"query","","The query part of the request uri.",1,null],[13,"AbsoluteUri","hyper","An absolute URI. Used in conjunction with proxies.",1,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",1,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",1,null],[4,"HttpVersion","","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",2,null],[13,"Http10","","`HTTP/1.0`",2,null],[13,"Http11","","`HTTP/1.1`",2,null],[13,"H2","","`HTTP/2.0` over TLS",2,null],[13,"H2c","","`HTTP/2.0` over cleartext",2,null],[0,"client","","HTTP Client",null,null],[8,"Service","hyper::client","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",3,null],[16,"Response","","Responses given by the service.",3,null],[16,"Error","","Errors produced by the service.",3,null],[16,"Future","","The future response value.",3,null],[10,"call","","Process the request and return the response asynchronously.",3,null],[3,"HttpConnector","","A connector for the `http` scheme.",null,null],[3,"Request","","A client request to a remote server.",null,null],[3,"Response","","A response for a client request to a remote server.",null,null],[3,"Client","","A Client to make outgoing HTTP requests.",null,null],[3,"FutureResponse","","A `Future` that will resolve to an HTTP Response.",null,null],[3,"Config","","Configuration for a Client",null,null],[11,"clone","","",4,null],[11,"new","","Construct a new HttpConnector.",4,{"inputs":[{"name":"handle"},{"name":"usize"}],"output":{"name":"httpconnector"}}],[11,"fmt","","",4,null],[11,"call","","",4,null],[11,"fmt","","",5,null],[11,"new","","Construct a new Request.",5,{"inputs":[{"name":"method"},{"name":"url"}],"output":{"name":"request"}}],[11,"uri","","Read the Request Url.",5,null],[11,"version","","Readthe Request Version.",5,null],[11,"headers","","Read the Request headers.",5,null],[11,"method","","Read the Request method.",5,null],[11,"set_method","","Set the Method of this request.",5,null],[11,"headers_mut","","Get a mutable reference to the Request headers.",5,null],[11,"set_uri","","Set the `RequestUri` of this request.",5,null],[11,"set_version","","Set the `HttpVersion` of this request.",5,null],[11,"set_body","","Set the body of the request.",5,null],[11,"headers","","Get the headers from the server.",6,null],[11,"status","","Get the status from the server.",6,null],[11,"status_raw","","Get the raw status code and reason.",6,null],[11,"version","","Get the HTTP version of this response from the server.",6,null],[11,"body","","Take the `Body` of this response.",6,null],[11,"fmt","","",6,null],[6,"DefaultConnector","","The default connector used by the Client.",null,null],[8,"Connect","","A connector creates an Io to a remote address..",null,null],[16,"Output","","The connected Io Stream.",7,null],[16,"Future","","A Future that will resolve to the connected Stream.",7,null],[10,"connect","","Connect to a remote address.",7,null],[11,"clone","","",8,null],[11,"configure","","Configure a Client.",8,{"inputs":[],"output":{"name":"config"}}],[11,"new","","Create a new Client with the default config.",8,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"get","","Send a GET Request using this Client.",8,null],[11,"request","","Send a constructed Request using this Client.",8,null],[11,"fmt","","",9,null],[11,"poll","","",9,null],[11,"call","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"connector","","Set the `Connect` type to be used.",10,null],[11,"keep_alive","","Enable or disable keep-alive mechanics.",10,null],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",10,null],[11,"max_sockets","","Set the max table size allocated for holding on to live sockets.",10,null],[11,"connect_timeout","","Set the timeout for connecting to a URL.",10,null],[11,"dns_workers","","Set number of Dns workers to use for this client",10,null],[11,"build","","Construct the Client with this configuration.",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"config"}}],[0,"error","hyper","Error and Result module.",null,null],[4,"ParseError","hyper::error","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",11,null],[13,"IdnaError","","",11,null],[13,"InvalidPort","","",11,null],[13,"InvalidIpv4Address","","",11,null],[13,"InvalidIpv6Address","","",11,null],[13,"InvalidDomainCharacter","","",11,null],[13,"RelativeUrlWithoutBase","","",11,null],[13,"RelativeUrlWithCannotBeABaseBase","","",11,null],[13,"SetHostOnCannotBeABaseUrl","","",11,null],[13,"Overflow","","",11,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",12,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",12,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",12,null],[13,"Header","","An invalid `Header`.",12,null],[13,"TooLarge","","A message head is too large to be reasonable.",12,null],[13,"Incomplete","","A message reached EOF, but is not complete.",12,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",12,null],[13,"Timeout","","A timeout occurred waiting for an IO event.",12,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",12,null],[13,"Tls","","An error from a SSL library.",12,null],[13,"Utf8","","Parsing a field as string failed",12,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",12,null],[11,"fmt","","",12,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"from","","",12,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"tlserror"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","hyper","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"as_ref","","",0,null],[11,"safe","","Whether a method is considered &quot;safe&quot;, meaning the request is\nessentially read-only.",0,null],[11,"idempotent","","Whether a method is considered &quot;idempotent&quot;, meaning the request has\nthe same result if executed multiple times.",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"method"}}],[0,"header","","Headers container, and common header fields.",null,null],[3,"CookiePair","hyper::header","",null,null],[12,"name","","",13,null],[12,"value","","",13,null],[12,"expires","","",13,null],[12,"max_age","","",13,null],[12,"domain","","",13,null],[12,"path","","",13,null],[12,"secure","","",13,null],[12,"httponly","","",13,null],[12,"custom","","",13,null],[3,"CookieJar","","A jar of cookies for managing a session",null,null],[3,"LanguageTag","","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",14,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",14,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",14,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",14,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",14,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",14,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",14,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",15,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",16,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",17,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",18,null],[12,"quality","","The quality (client or server preference) for the value.",18,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[12,"0","","",19,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[12,"0","","",20,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[12,"0","","",21,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header)",null,null],[12,"0","","",22,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[12,"0","","",23,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[12,"0","","",24,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[12,"0","","",25,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[12,"0","","",26,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[12,"0","","",27,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[12,"0","","",28,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[12,"0","","",29,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[12,"0","","",30,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[12,"0","","",31,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",32,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",32,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",33,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[12,"0","","",34,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[12,"0","","",35,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in [RFC6266](https://tools.ietf.org/html/rfc6266)",null,null],[12,"disposition","","The disposition",36,null],[12,"parameters","","Disposition parameters",36,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[12,"0","","",37,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[12,"0","","",38,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[12,"0","","",39,null],[3,"ContentLocation","","`Content-Location` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.4.2)",null,null],[12,"0","","",40,null],[3,"ContentRange","","`Content-Range` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[12,"0","","",41,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[12,"0","","",42,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[12,"0","","",43,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[12,"0","","",44,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"0","","",45,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[12,"0","","",46,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[12,"0","","",47,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",48,null],[12,"port","","An optional port number.",48,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[12,"0","","",49,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[12,"0","","",50,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[12,"0","","",51,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[12,"0","","",52,null],[3,"Origin","","The `Origin` header.",null,null],[12,"scheme","","The scheme, such as http or https",53,null],[12,"host","","The host, such as Host{hostname: &quot;hyper.rs&quot;.to_owned(), port: None}",53,null],[3,"Prefer","","`Prefer` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",54,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",55,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[12,"0","","",56,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[12,"0","","",57,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[12,"0","","",58,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in [RFC6797](https://tools.ietf.org/html/rfc6797)",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as\nany subdomains of the host&#39;s domain name.",59,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header\nfield, during which the UA regards the host (from whom the message was\nreceived) as a Known HSTS Host.",59,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[12,"0","","",60,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[12,"0","","",61,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",62,null],[12,"version","","The optional version of the protocol, often in the format &quot;DIGIT.DIGIT&quot; (e.g.. &quot;1.2&quot;)",62,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[12,"0","","",63,null],[3,"Warning","","`Warning` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.5)",null,null],[12,"code","","The 3 digit warn code.",64,null],[12,"agent","","The name or pseudonym of the server adding this header.",64,null],[12,"text","","The warning message describing the error.",64,null],[12,"date","","An optional warning date.",64,null],[3,"Raw","","A raw header value.",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls `fmt_header`.",null,null],[12,"0","","",65,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",66,null],[13,"Iso_8859_1","","ISO-8859-1",66,null],[13,"Iso_8859_2","","ISO-8859-2",66,null],[13,"Iso_8859_3","","ISO-8859-3",66,null],[13,"Iso_8859_4","","ISO-8859-4",66,null],[13,"Iso_8859_5","","ISO-8859-5",66,null],[13,"Iso_8859_6","","ISO-8859-6",66,null],[13,"Iso_8859_7","","ISO-8859-7",66,null],[13,"Iso_8859_8","","ISO-8859-8",66,null],[13,"Iso_8859_9","","ISO-8859-9",66,null],[13,"Iso_8859_10","","ISO-8859-10",66,null],[13,"Shift_Jis","","Shift_JIS",66,null],[13,"Euc_Jp","","EUC-JP",66,null],[13,"Iso_2022_Kr","","ISO-2022-KR",66,null],[13,"Euc_Kr","","EUC-KR",66,null],[13,"Iso_2022_Jp","","ISO-2022-JP",66,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",66,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",66,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",66,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",66,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",66,null],[13,"Gb2312","","GB2312",66,null],[13,"Big5","","Big5",66,null],[13,"Koi8_R","","KOI8-R",66,null],[13,"Ext","","An arbitrary charset specified as a string",66,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",67,null],[13,"Gzip","","The `gzip` encoding.",67,null],[13,"Deflate","","The `deflate` encoding.",67,null],[13,"Compress","","The `compress` encoding.",67,null],[13,"Identity","","The `identity` encoding.",67,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",67,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",68,null],[13,"Null","","A hidden origin",68,null],[13,"Value","","Allow one particular origin",68,null],[4,"RangeUnit","","Range Units, described in [RFC7233](http://tools.ietf.org/html/rfc7233#section-2)",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",69,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",69,null],[13,"Unregistered","","The given range unit is not registered at IANA.",69,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","&quot;no-cache&quot;",70,null],[13,"NoStore","","&quot;no-store&quot;",70,null],[13,"NoTransform","","&quot;no-transform&quot;",70,null],[13,"OnlyIfCached","","&quot;only-if-cached&quot;",70,null],[13,"MaxAge","","&quot;max-age=delta&quot;",70,null],[13,"MaxStale","","&quot;max-stale=delta&quot;",70,null],[13,"MinFresh","","&quot;min-fresh=delta&quot;",70,null],[13,"MustRevalidate","","&quot;must-revalidate&quot;",70,null],[13,"Public","","&quot;public&quot;",70,null],[13,"Private","","&quot;private&quot;",70,null],[13,"ProxyRevalidate","","&quot;proxy-revalidate&quot;",70,null],[13,"SMaxAge","","&quot;s-maxage=delta&quot;",70,null],[13,"Extension","","Extension directives. Optionally include an argument.",70,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",71,null],[13,"Close","","The `close` connection value.",71,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",71,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",72,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally,\nrather than process it normally (as per its media type).",72,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",72,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of\nbytes representing the filename",73,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized\nparameters.",73,null],[4,"ContentRangeSpec","","Content-Range, described in [RFC7233](https://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[13,"Bytes","","Byte range",74,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be\nsatisfied",74,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",74,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",74,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",74,null],[12,"resp","","other-range-resp",74,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",75,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",76,null],[13,"Items","","Only the listed items are a match",76,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",77,null],[13,"Items","","Only the listed items are a match",77,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",78,null],[13,"Date","","The date when the client retrieved the resource",78,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",79,null],[13,"Ext","","Every value other than `no-cache`.",79,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","&quot;respond-async&quot;",80,null],[13,"ReturnRepresentation","","&quot;return=representation&quot;",80,null],[13,"ReturnMinimal","","&quot;return=minimal&quot;",80,null],[13,"HandlingStrict","","&quot;handling=strict&quot;",80,null],[13,"HandlingLeniant","","&quot;handling=leniant&quot;",80,null],[13,"Wait","","&quot;wait=delta&quot;",80,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is\njust &quot;&quot;. A preference can also have a list of parameters.",80,null],[4,"Range","","`Range` header, defined in [RFC7233](https://tools.ietf.org/html/rfc7233#section-3.1)",null,null],[13,"Bytes","","Byte range",81,null],[13,"Unregistered","","Custom range, with unit not registered at IANA\n(`other-range-unit`: String , `other-range-set`: String)",81,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`.\nEach `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (&quot;x-y&quot;)",82,null],[13,"AllFrom","","Get all bytes starting from x (&quot;x-&quot;)",82,null],[13,"Last","","Get last x bytes (&quot;-x&quot;)",82,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of\n[Referrer Policy](https://www.w3.org/TR/referrer-policy/#referrer-policy-header)",null,null],[13,"NoReferrer","","`no-referrer`",83,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",83,null],[13,"SameOrigin","","`same-origin`",83,null],[13,"Origin","","`origin`",83,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",83,null],[13,"UnsafeUrl","","`unsafe-url`",83,null],[13,"StrictOrigin","","`strict-origin`",83,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",83,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",84,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",84,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",84,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",84,null],[13,"Unregistered","","Any other protocol name not known to hyper",84,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",85,null],[13,"Items","","Only the listed items are a match",85,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"deref","","",19,null],[11,"deref_mut","","",19,null],[11,"header_name","","",19,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",19,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",19,null],[11,"fmt","","",19,null],[11,"star","","A constructor to easily create `Accept: */*`.",19,{"inputs":[],"output":{"name":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",19,{"inputs":[],"output":{"name":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",19,{"inputs":[],"output":{"name":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",19,{"inputs":[],"output":{"name":"accept"}}],[11,"clone","","",86,null],[11,"eq","","",86,null],[11,"fmt","","",86,null],[11,"header_name","","",86,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",86,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",86,null],[11,"fmt","","",86,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"deref","","",20,null],[11,"deref_mut","","",20,null],[11,"header_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",20,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"deref","","",21,null],[11,"deref_mut","","",21,null],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"header_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",68,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",68,null],[11,"fmt","","",68,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"deref","","",22,null],[11,"deref_mut","","",22,null],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"deref","","",27,null],[11,"deref_mut","","",27,null],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"deref","","",29,null],[11,"deref_mut","","",29,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"from_str","","",69,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",69,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"deref","","",30,null],[11,"deref_mut","","",30,null],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",31,null],[11,"clone","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"scheme","","",32,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",32,null],[11,"from_str","","",32,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"fmt","","",33,null],[11,"scheme","","",33,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",33,null],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"deref","","",34,null],[11,"deref_mut","","",34,null],[11,"header_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",34,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",34,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",70,null],[11,"fmt","","",70,null],[11,"from_str","","",70,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",43,null],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",43,null],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",43,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",43,{"inputs":[{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"clone","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"fmt","","",71,null],[11,"from_str","","",71,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",71,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"header_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",35,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",35,null],[11,"fmt","","",35,null],[11,"close","","A constructor to easily create a `Connection: close` header.",35,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",35,{"inputs":[],"output":{"name":"connection"}}],[11,"clone","","",72,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",36,null],[11,"fmt","","",36,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"deref","","",38,null],[11,"deref_mut","","",38,null],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",37,null],[11,"fmt","","",37,null],[11,"deref","","",37,null],[11,"deref_mut","","",37,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"from_str","","",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",74,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",42,null],[11,"fmt","","",42,null],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"deref","","",44,null],[11,"deref_mut","","",44,null],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",44,null],[11,"fmt","","",44,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",45,null],[11,"fmt","","",45,null],[11,"clone","","",75,null],[11,"eq","","",75,null],[11,"fmt","","",75,null],[11,"header_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",75,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",75,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",47,null],[11,"fmt","","",47,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",48,null],[11,"fmt","","",48,null],[11,"from_str","","",48,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"header_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",76,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",76,null],[11,"fmt","","",76,null],[11,"clone","","",49,null],[11,"fmt","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"deref","","",49,null],[11,"deref_mut","","",49,null],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",49,null],[11,"fmt","","",49,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"header_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",77,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",77,null],[11,"fmt","","",77,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"header_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",78,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",78,null],[11,"fmt","","",78,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",50,null],[11,"fmt","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",51,null],[11,"fmt","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",52,null],[11,"fmt","","",52,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"new","","Creates a new `Origin` header.",53,{"inputs":[{"name":"s"},{"name":"h"},{"name":"option"}],"output":{"name":"origin"}}],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",53,null],[11,"from_str","","",53,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",53,null],[11,"clone","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"fmt","","",79,null],[11,"header_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",79,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",79,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"deref","","",54,null],[11,"deref_mut","","",54,null],[11,"header_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",54,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",54,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"fmt","","",80,null],[11,"from_str","","",80,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",55,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"bytes","","Get the most common byte range header (&quot;bytes=from-to&quot;)",81,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(&quot;bytes=from1-to1,from2-to2,fromX-toX&quot;)",81,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",82,null],[11,"fmt","","",81,null],[11,"from_str","","",81,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",82,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",81,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",81,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"deref","","",56,null],[11,"deref_mut","","",56,null],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",56,null],[11,"fmt","","",56,null],[11,"clone","","",83,null],[11,"eq","","",83,null],[11,"fmt","","",83,null],[11,"header_name","","",83,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",83,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",83,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",57,null],[11,"fmt","","",57,null],[11,"clone","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"fmt","","",58,null],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"header_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",58,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",58,null],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",58,{"inputs":[{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",58,null],[11,"clone","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"including_subdomains","","Create an STS header that includes subdomains",59,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",59,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",59,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",59,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"deref","","",60,null],[11,"deref_mut","","",60,null],[11,"header_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",60,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",60,null],[11,"fmt","","",60,null],[11,"chunked","","Constructor for the most common Transfer-Encoding, `chunked`.",60,{"inputs":[],"output":{"name":"transferencoding"}}],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"deref","","",61,null],[11,"deref_mut","","",61,null],[11,"header_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",61,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",84,null],[11,"fmt","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"from_str","","",84,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",84,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"new","","Creates a new Protocol with the given name and version",62,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",62,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"deref","","",63,null],[11,"deref_mut","","",63,null],[11,"header_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",63,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",63,null],[11,"fmt","","",63,null],[11,"clone","","",85,null],[11,"fmt","","",85,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"header_name","","",85,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",85,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",85,null],[11,"fmt","","",85,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"header_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",64,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",64,null],[11,"from_str","","",64,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",87,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"len","","Returns the amount of lines.",87,null],[11,"one","","Returns the line if there is only 1.",87,null],[11,"iter","","Iterate the lines of raw bytes.",87,null],[11,"push","","Append a line to this `Raw` header value.",87,null],[11,"eq","","",87,null],[11,"eq","","",87,null],[11,"eq","","",87,null],[11,"from","","",87,{"inputs":[{"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",87,{"inputs":[{"name":"string"}],"output":{"name":"raw"}}],[11,"from","","",87,{"inputs":[{"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",87,{"inputs":[{"name":"str"}],"output":{"name":"raw"}}],[11,"from","","",87,null],[11,"fmt","","",87,null],[11,"index","","",87,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"fmt","","",66,null],[11,"from_str","","",66,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"fmt","","",67,null],[11,"from_str","","",67,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",15,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",15,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",15,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",15,null],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",15,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",15,null],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as &quot;weak&quot;.",15,null],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",15,null],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",15,null],[11,"fmt","","",15,null],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"cmp","","",16,null],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"cmp","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"fmt","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"quality"}}],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",18,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally,\na language), as defined in [RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",88,null],[12,"language_tag","","The human language details of the `value`, if available.",88,null],[12,"value","","The parameter value, as expressed in octets.",88,null],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at\nhttps://tools.ietf.org/html/rfc5987#section-3.2",null,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in\n[RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",88,null],[11,"fmt","","",88,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",89,null],[11,"contains","","",89,null],[11,"fmt","","",89,null],[11,"fmt","","",88,null],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",90,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",90,null],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",91,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",91,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[10,"fmt_header","","Format a header to be output into a TcpStream.",91,null],[11,"clone","","",92,null],[11,"default","","",92,{"inputs":[],"output":{"name":"headers"}}],[11,"new","","Creates a new, empty headers map.",92,{"inputs":[],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",92,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",92,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",92,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",92,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns the header, if one has been removed and could be parsed.",92,null],[11,"iter","","Returns an iterator over the header fields.",92,null],[11,"len","","Returns the number of headers in the map.",92,null],[11,"clear","","Remove all headers from the map.",92,null],[11,"get_raw","","Access the raw value of a header.",92,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",92,null],[11,"remove_raw","","Remove a header by name.",92,null],[11,"eq","","",92,null],[11,"fmt","","",92,null],[11,"fmt","","",92,null],[11,"next","","",93,null],[11,"is","","Check if a HeaderView is a certain Header.",94,null],[11,"name","","Get the Header name as a slice.",94,null],[11,"value","","Cast the value to a certain Header type.",94,null],[11,"value_string","","Get just the header value as a String.",94,null],[11,"fmt","","",94,null],[11,"fmt","","",94,null],[11,"extend","","",92,null],[11,"from_iter","","",92,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",65,null],[11,"fmt","","",65,null],[11,"fmt","hyper","",95,null],[11,"empty","","Return an empty body stream",95,{"inputs":[],"output":{"name":"body"}}],[11,"pair","","Return a body stream with an associated sender half",95,null],[11,"poll","","",95,null],[11,"from","","",95,{"inputs":[{"name":"body"}],"output":{"name":"body"}}],[11,"from","","",95,{"inputs":[{"name":"receiver"}],"output":{"name":"body"}}],[11,"from","","",95,{"inputs":[{"name":"vec"}],"output":{"name":"body"}}],[11,"from","","",95,null],[11,"from","","",95,{"inputs":[{"name":"string"}],"output":{"name":"body"}}],[11,"from","","",95,{"inputs":[{"name":"str"}],"output":{"name":"body"}}],[11,"from","","",96,{"inputs":[{"name":"vec"}],"output":{"name":"chunk"}}],[11,"from","","",96,null],[11,"deref","","",96,null],[11,"as_ref","","",96,null],[11,"fmt","","",96,null],[0,"server","","HTTP Server",null,null],[8,"NewService","hyper::server","Creates new `Service` values.",null,null],[16,"Request","","Requests handled by the service",97,null],[16,"Response","","Responses given by the service",97,null],[16,"Error","","Errors produced by the service",97,null],[16,"Instance","","The `Service` value created by this factory",97,null],[10,"new_service","","Create and return a new service value.",97,null],[8,"Service","","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",3,null],[16,"Response","","Responses given by the service.",3,null],[16,"Error","","Errors produced by the service.",3,null],[16,"Future","","The future response value.",3,null],[10,"call","","Process the request and return the response asynchronously.",3,null],[3,"Request","","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[3,"Response","","The Response sent to a client after receiving a Request in a Service.",null,null],[3,"Server","","A Server that can accept incoming network requests.",null,null],[3,"ServerLoop","","A configured `Server` ready to run.",null,null],[3,"Listening","","A handle of the running server.",null,null],[11,"method","","The `Method`, such as `Get`, `Post`, etc.",98,null],[11,"headers","","The headers of the incoming request.",98,null],[11,"uri","","The target request-uri for this request.",98,null],[11,"version","","The version of HTTP for this request.",98,null],[11,"remote_addr","","The remote socket address of this request",98,null],[11,"path","","The target path of this Request.",98,null],[11,"query","","The query string of this Request.",98,null],[11,"body","","Take the `Body` of this `Request`.",98,null],[11,"deconstruct","","Deconstruct this Request into its pieces.",98,null],[11,"fmt","","",98,null],[11,"default","","",99,{"inputs":[],"output":{"name":"response"}}],[11,"new","","Create a new Response.",99,{"inputs":[],"output":{"name":"response"}}],[11,"headers","","The headers of this response.",99,null],[11,"status","","The status of this response.",99,null],[11,"version","","The HTTP version of this response.",99,null],[11,"headers_mut","","Get a mutable reference to the Headers.",99,null],[11,"set_status","","Set the `StatusCode` for this response.",99,null],[11,"set_body","","Set the body.",99,null],[11,"with_status","","Set the status and move the Response.",99,null],[11,"with_header","","Set a header and move the Response.",99,null],[11,"with_headers","","Set the headers and move the Response.",99,null],[11,"with_body","","Set the body and move the Response.",99,null],[11,"fmt","","",99,null],[8,"Accept","","An Acceptor is an incoming Stream of Io.",null,null],[11,"fmt","","",100,null],[11,"new","","Creates a new Server from a Stream of Ios.",100,{"inputs":[{"name":"a"},{"name":"socketaddr"}],"output":{"name":"server"}}],[11,"keep_alive","","Enables or disables HTTP keep-alive.",100,null],[11,"http","","Creates a new HTTP server config listening on the provided address.",100,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",100,null],[11,"standalone","","Create a server that owns its event loop.",100,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"fmt","","",101,null],[11,"run","","Runs the server forever in this loop.",101,null],[11,"drop","","",101,null],[11,"fmt","","",102,null],[11,"fmt","","",102,null],[11,"addr","","The addresses this server is listening on.",102,null],[11,"close","","Stop the server from listening to its socket address.",102,null],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",103,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",103,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",103,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",103,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",103,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",103,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",103,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",103,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",103,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",103,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",103,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",103,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",103,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",103,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",103,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",103,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",103,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",103,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",103,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",103,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",103,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",103,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",103,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",103,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",103,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",103,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",103,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",103,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",103,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",103,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",103,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",103,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",103,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",103,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",103,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",103,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",103,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",103,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",103,null],[13,"ImATeapot","","418 I&#39;m a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",103,null],[13,"MisdirectedRequest","","421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)",103,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",103,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",103,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",103,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",103,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",103,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",103,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",103,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]",103,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",103,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",103,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",103,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",103,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",103,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",103,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",103,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",103,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",103,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",103,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",103,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",103,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",104,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",104,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",104,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",104,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",104,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",104,null],[11,"fmt","","",103,null],[11,"hash","","",103,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",103,null],[11,"class","","Determine the class of a status code, based on its first digit.",103,null],[11,"is_informational","","Check if class is Informational.",103,null],[11,"is_success","","Check if class is Success.",103,null],[11,"is_redirection","","Check if class is Redirection.",103,null],[11,"is_client_error","","Check if class is ClientError.",103,null],[11,"is_server_error","","Check if class is ServerError.",103,null],[11,"is_strange_status","","Check if class is NoClass",103,null],[11,"fmt","","",103,null],[11,"eq","","",103,null],[11,"clone","","",103,null],[11,"partial_cmp","","",103,null],[11,"cmp","","",103,null],[11,"default","","",103,{"inputs":[],"output":{"name":"statuscode"}}],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"eq","","",104,null],[11,"partial_cmp","","",104,null],[11,"cmp","","",104,null],[11,"default_code","","Get the default status code for the class.",104,null],[11,"fmt","hyper","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"requesturi"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"clone","","",2,null],[11,"cmp","","",2,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"httpversion"}}],[14,"header","","",null,null],[11,"parse","","Parse an absolute URL from a string.",105,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",105,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",105,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",105,null],[11,"into_string","","Return the serialization of this URL.",105,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",105,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",105,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",105,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",105,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",105,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",105,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",105,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",105,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",105,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",105,null],[11,"port","","Return the port number for this URL, if any.",105,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",105,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",105,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",105,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",105,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",105,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",105,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",105,null],[11,"set_fragment","","Change this URL’s fragment identifier.",105,null],[11,"set_query","","Change this URL’s query string.",105,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",105,null],[11,"set_path","","Change this URL’s path.",105,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",105,null],[11,"set_port","","Change this URL’s port number.",105,null],[11,"set_host","","Change this URL’s host.",105,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",105,null],[11,"set_password","","Change this URL’s password.",105,null],[11,"set_username","","Change this URL’s username.",105,null],[11,"set_scheme","","Change this URL’s scheme.",105,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",105,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",105,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",105,null],[11,"partial_cmp","","",105,null],[11,"description","hyper::error","",11,null],[11,"from_str","hyper","",105,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"index","","",105,null],[11,"index","","",105,null],[11,"index","","",105,null],[11,"index","","",105,null],[11,"eq","","",105,null],[11,"eq","hyper::error","",11,null],[11,"fmt","hyper","",105,null],[11,"fmt","hyper::error","",11,null],[11,"to_socket_addrs","hyper","",105,null],[11,"fmt","hyper::error","",11,null],[11,"fmt","hyper","",105,null],[11,"as_ref","","",105,null],[11,"from","hyper::error","",11,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"cmp","hyper","",105,null],[11,"clone","hyper::error","",11,null],[11,"clone","hyper","",105,null],[11,"hash","","",105,null],[11,"from_str","hyper::header","",14,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"languagetag"}}],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"fmt","","",106,null],[11,"fmt","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"new","","",13,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",13,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",106,null],[11,"add_original","","Adds an original cookie from a request.",106,null],[11,"add","","Adds a new cookie to this cookie jar.",106,null],[11,"remove","","Removes a cookie from this cookie jar.",106,null],[11,"clear","","Clears all cookies from this cookie jar.",106,null],[11,"find","","Finds a cookie inside of this cookie jar.",106,null],[11,"permanent","","Creates a child jar for permanent cookie storage.",106,null],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",106,null],[11,"iter","","Return an iterator over the cookies in this jar.",106,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",14,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",14,null],[11,"canonicalize","","Returns the canonical version of the language tag.",14,null]],"paths":[[4,"Method"],[4,"RequestUri"],[4,"HttpVersion"],[8,"Service"],[3,"HttpConnector"],[3,"Request"],[3,"Response"],[8,"Connect"],[3,"Client"],[3,"FutureResponse"],[3,"Config"],[4,"ParseError"],[4,"Error"],[3,"CookiePair"],[3,"LanguageTag"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLocation"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"Warning"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"ProtocolName"],[4,"Vary"],[3,"AccessControlAllowCredentials"],[3,"Raw"],[3,"ExtendedValue"],[3,"HTTP_VALUE"],[8,"Scheme"],[8,"Header"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"Body"],[3,"Chunk"],[8,"NewService"],[3,"Request"],[3,"Response"],[3,"Server"],[3,"ServerLoop"],[3,"Listening"],[4,"StatusCode"],[4,"StatusClass"],[3,"Url"],[3,"CookieJar"]]};
searchIndex["tokio_proto"] = {"doc":"This library provides a toolkit for rapid protocol development and usage,\nworking with the rest of the Tokio stack.","items":[[3,"TcpClient","tokio_proto","Builds client connections to external services.",null,null],[3,"Connect","","A future for establishing a client connection.",null,null],[3,"TcpServer","","A builder for TCP servers.",null,null],[0,"pipeline","","Pipelined RPC protocols.",null,null],[3,"ClientService","tokio_proto::pipeline","Client `Service` for simple pipeline protocols",null,null],[3,"Pipeline","","A marker used to flag protocols as being pipelined RPC.",null,null],[11,"clone","","",0,null],[11,"call","","",0,null],[8,"ClientProto","","A pipelined client protocol.",null,null],[16,"Request","","Request messages.",1,null],[16,"Response","","Response messages.",1,null],[16,"Error","","Errors produced by the service.",1,null],[16,"Transport","","The message transport, which works with I/O objects of type `T`.",1,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",1,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",1,null],[8,"ServerProto","","A pipelined server protocol.",null,null],[16,"Request","","Request messages.",2,null],[16,"Response","","Response messages.",2,null],[16,"Error","","Errors produced by the service.",2,null],[16,"Transport","","The message transport, which works with I/O objects of type `T`.",2,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",2,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",2,null],[0,"multiplex","tokio_proto","Multiplexed RPC protocols.",null,null],[3,"ClientService","tokio_proto::multiplex","Client `Service` for simple multiplex protocols",null,null],[3,"Multiplex","","A marker used to flag protocols as being multiplexed RPC.",null,null],[11,"call","","",3,null],[11,"clone","","",3,null],[6,"RequestId","","Identifies a request / response thread",null,null],[8,"ClientProto","","An multiplexed client protocol.",null,null],[16,"Request","","Request messages.",4,null],[16,"Response","","Response messages.",4,null],[16,"Error","","Errors produced by the service.",4,null],[16,"Transport","","The message transport, which usually take `T` as a parameter.",4,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",4,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",4,null],[8,"ServerProto","","An multiplexed server protocol.",null,null],[16,"Request","","Request messages.",5,null],[16,"Response","","Response messages.",5,null],[16,"Error","","Errors produced by the service.",5,null],[16,"Transport","","The message transport, which usually take `T` as a parameter.",5,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",5,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",5,null],[0,"streaming","tokio_proto","Streaming protocols.",null,null],[3,"Body","tokio_proto::streaming","Body stream",null,null],[4,"Message","","Message sent and received from a multiplexed service",null,null],[13,"WithoutBody","","Has no associated streaming body",6,null],[13,"WithBody","","Has associated streaming body",6,null],[0,"pipeline","","Pipelined, streaming protocols.",null,null],[3,"StreamingPipeline","tokio_proto::streaming::pipeline","A marker used to flag protocols as being streaming and pipelined.",null,null],[4,"Frame","","A pipelined protocol frame",null,null],[13,"Message","","Either a request or a response",7,null],[12,"message","tokio_proto::streaming::pipeline::Frame","The message value",7,null],[12,"body","","Set to true when body frames will follow",7,null],[13,"Body","tokio_proto::streaming::pipeline","Body frame. None indicates that the body is done streaming.",7,null],[12,"chunk","tokio_proto::streaming::pipeline::Frame","Body chunk. Setting to `None` indicates that the body is done\nstreaming and there will be no further body frames sent with the\ngiven request ID.",7,null],[13,"Error","tokio_proto::streaming::pipeline","Error",7,null],[12,"error","tokio_proto::streaming::pipeline::Frame","Error value",7,null],[11,"fmt","tokio_proto::streaming::pipeline","",7,null],[11,"clone","","",7,null],[11,"unwrap_msg","","Unwraps a frame, yielding the content of the `Message`.",7,null],[11,"unwrap_body","","Unwraps a frame, yielding the content of the `Body`.",7,null],[11,"unwrap_err","","Unwraps a frame, yielding the content of the `Error`.",7,null],[0,"advanced","","Provides the substrate for implementing pipelined, streaming protocols.",null,null],[3,"Pipeline","tokio_proto::streaming::pipeline::advanced","Provides protocol pipelining functionality in a generic way over clients\nand servers. Used internally by `pipeline::Client` and `pipeline::Server`.",null,null],[6,"PipelineMessage","","Message used to communicate through the multiplex dispatch",null,null],[8,"Dispatch","","Dispatch messages from the transport to the service",null,null],[16,"Io","","Type of underlying I/O object",8,null],[16,"In","","Message written to transport",8,null],[16,"BodyIn","","Body written to transport",8,null],[16,"Out","","Messages read from the transport",8,null],[16,"BodyOut","","Outbound body frame",8,null],[16,"Error","","Transport error",8,null],[16,"Stream","","Body stream written to transport",8,null],[16,"Transport","","Transport type",8,null],[10,"transport","","Mutable reference to the transport",8,null],[10,"dispatch","","Process an out message",8,null],[10,"poll","","Poll the next completed message",8,null],[10,"has_in_flight","","RPC currently in flight\nTODO: Get rid of",8,null],[11,"new","","Create a new pipeline `Pipeline` dispatcher with the given service and\ntransport",9,{"inputs":[{"name":"t"}],"output":{"name":"pipeline"}}],[11,"poll","","",9,null],[8,"ClientProto","tokio_proto::streaming::pipeline","A streaming, pipelined client protocol.",null,null],[16,"Request","","The type of request headers.",10,null],[16,"RequestBody","","The type of request body chunks.",10,null],[16,"Response","","The type of response headers.",10,null],[16,"ResponseBody","","The type of response body chunks.",10,null],[16,"Error","","The type of error frames.",10,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",10,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",10,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",10,null],[8,"ServerProto","","A streaming, pipelined server protocol.",null,null],[16,"Request","","Request headers.",11,null],[16,"RequestBody","","Request body chunks.",11,null],[16,"Response","","Response headers.",11,null],[16,"ResponseBody","","Response body chunks.",11,null],[16,"Error","","Errors, which are used both for error frames and for the service itself.",11,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",11,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",11,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",11,null],[8,"Transport","","Additional transport details relevant to streaming, pipelined protocols.",null,null],[11,"tick","","Allow the transport to do miscellaneous work (e.g., sending ping-pong\nmessages) that is not directly connected to sending or receiving frames.",12,null],[11,"cancel","","Cancel interest in the current stream",12,null],[0,"multiplex","tokio_proto::streaming","Pipelined, multiplexed protocols.",null,null],[3,"StreamingMultiplex","tokio_proto::streaming::multiplex","A marker used to flag protocols as being streaming and multiplexed.",null,null],[4,"Frame","","A multiplexed protocol frame",null,null],[13,"Message","","Either a request or a response.",13,null],[12,"id","tokio_proto::streaming::multiplex::Frame","Message exchange identifier",13,null],[12,"message","","The message value",13,null],[12,"body","","Set to true when body frames will follow with the same request ID.",13,null],[12,"solo","","Set to `true` when this message does not have a pair in the other\ndirection",13,null],[13,"Body","tokio_proto::streaming::multiplex","Body frame.",13,null],[12,"id","tokio_proto::streaming::multiplex::Frame","Message exchange identifier",13,null],[12,"chunk","","Body chunk. Setting to `None` indicates that the body is done\nstreaming and there will be no further body frames sent with the\ngiven request ID.",13,null],[13,"Error","tokio_proto::streaming::multiplex","Error",13,null],[12,"id","tokio_proto::streaming::multiplex::Frame","Message exchange identifier",13,null],[12,"error","","Error value",13,null],[11,"fmt","tokio_proto::streaming::multiplex","",13,null],[11,"clone","","",13,null],[11,"request_id","","Return the request ID associated with the frame.",13,null],[11,"unwrap_msg","","Unwraps a frame, yielding the content of the `Message`.",13,null],[11,"unwrap_body","","Unwraps a frame, yielding the content of the `Body`.",13,null],[11,"unwrap_err","","Unwraps a frame, yielding the content of the `Error`.",13,null],[0,"advanced","","Provides the substrate for implementing multiplexed, streaming protocols.",null,null],[3,"Multiplex","tokio_proto::streaming::multiplex::advanced","Task that drives multiplexed protocols",null,null],[3,"MultiplexMessage","","Message used to communicate through the multiplex dispatch",null,null],[12,"id","","Request ID",14,null],[12,"message","","Message",14,null],[12,"solo","","True if message has no pair (request / response)",14,null],[8,"Dispatch","","Dispatch messages from the transport to the service",null,null],[16,"Io","","Type of underlying I/O object",15,null],[16,"In","","Messages written to the transport",15,null],[16,"BodyIn","","Inbound body frame",15,null],[16,"Out","","Messages read from the transport",15,null],[16,"BodyOut","","Outbound body frame",15,null],[16,"Error","","Transport error",15,null],[16,"Stream","","Inbound body stream type",15,null],[16,"Transport","","Transport type",15,null],[10,"transport","","Mutable reference to the transport",15,null],[10,"poll","","Poll the next available message",15,null],[10,"poll_ready","","The `Dispatch` is ready to accept another message",15,null],[10,"dispatch","","Process an out message",15,null],[10,"cancel","","Cancel interest in the exchange identified by RequestId",15,null],[11,"new","","Create a new pipeline `Multiplex` dispatcher with the given service and\ntransport",16,{"inputs":[{"name":"t"}],"output":{"name":"multiplex"}}],[11,"poll","","",16,null],[11,"drop","","",16,null],[11,"new","","Create a new MultiplexMessage",14,{"inputs":[{"name":"requestid"},{"name":"message"}],"output":{"name":"multiplexmessage"}}],[11,"error","","Create a new errored MultiplexMessage",14,{"inputs":[{"name":"requestid"},{"name":"e"}],"output":{"name":"multiplexmessage"}}],[6,"RequestId","tokio_proto::streaming::multiplex","Identifies a request / response thread",null,null],[8,"ClientProto","","A streaming, multiplexed client protocol.",null,null],[16,"Request","","Request headers.",17,null],[16,"RequestBody","","Request body chunks.",17,null],[16,"Response","","Response headers.",17,null],[16,"ResponseBody","","Response body chunks.",17,null],[16,"Error","","Errors, which are used both for error frames and for the service itself.",17,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",17,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",17,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",17,null],[8,"ServerProto","","A streaming, multiplexed server protocol.",null,null],[16,"Request","","Request headers.",18,null],[16,"RequestBody","","Request body chunks.",18,null],[16,"Response","","Response headers.",18,null],[16,"ResponseBody","","Response body chunks.",18,null],[16,"Error","","Errors, which are used both for error frames and for the service itself.",18,null],[16,"Transport","","The frame transport, which usually take `T` as a parameter.",18,null],[16,"BindTransport","","A future for initializing a transport from an I/O object.",18,null],[10,"bind_transport","","Build a transport from the given I/O object, using `self` for any\nconfiguration.",18,null],[8,"Transport","","Additional transport details relevant to streaming, multiplexed protocols.",null,null],[11,"tick","","Allow the transport to do miscellaneous work (e.g., sending ping-pong\nmessages) that is not directly connected to sending or receiving frames.",19,null],[11,"cancel","","Cancel interest in the exchange identified by RequestId",19,null],[11,"poll_write_body","","Tests to see if this I/O object may accept a body frame for the given\nrequest ID",19,null],[11,"dispatching_body","","Invoked before the multiplexer dispatches the body chunk to the body\nstream.",19,null],[11,"empty","tokio_proto::streaming","Return an empty body stream",20,{"inputs":[],"output":{"name":"body"}}],[11,"pair","","Return a body stream with an associated sender half",20,null],[11,"poll","","",20,null],[11,"from","","",20,{"inputs":[{"name":"receiver"}],"output":{"name":"body"}}],[11,"from","","",20,{"inputs":[{"name":"t"}],"output":{"name":"body"}}],[11,"fmt","","",20,null],[11,"get_ref","","Returns a reference to the inner value",6,null],[11,"get_mut","","Returns a mutable reference to the inner value",6,null],[11,"into_inner","","Consumes the value and returns the inner value",6,null],[11,"take_body","","If the `Message` value has an associated body stream, return it. The\noriginal `Message` value will then become a `WithoutBody` variant.",6,null],[11,"eq","","",6,null],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[11,"fmt","","",6,null],[0,"util","tokio_proto","Utilities for building protocols",null,null],[0,"client_proxy","tokio_proto::util","Utilities for building protocol clients",null,null],[3,"ClientProxy","tokio_proto::util::client_proxy","Client `Service` for pipeline or multiplex protocols",null,null],[3,"Response","","Response future returned from a client",null,null],[5,"pair","","Return a client handle and a handle used to receive requests on",null,{"inputs":[],"output":{"name":"pair"}}],[6,"Pair","","A client / receiver pair",null,null],[6,"Receiver","","Receive requests submitted to the client",null,null],[11,"clone","","",21,null],[11,"call","","",21,null],[11,"poll","","",22,null],[11,"poll","tokio_proto","",23,null],[11,"new","","Create a builder for the given client protocol.",24,{"inputs":[{"name":"p"}],"output":{"name":"tcpclient"}}],[11,"connect","","Establish a connection to the given address.",24,null],[11,"new","","Starts building a server for the given protocol and address, with\ndefault configuration.",25,{"inputs":[{"name":"p"},{"name":"socketaddr"}],"output":{"name":"tcpserver"}}],[11,"addr","","Set the address for the server.",25,null],[11,"threads","","Set the number of threads running simultaneous event loops (Unix only).",25,null],[11,"serve","","Start up the server, providing the given service on it.",25,null],[11,"with_handle","","Start up the server, providing the given service on it, and providing\naccess to the event loop handle.",25,null],[8,"BindServer","","Binds a service to an I/O object.",null,null],[16,"ServiceRequest","","The request type for the service.",26,null],[16,"ServiceResponse","","The response type for the service.",26,null],[16,"ServiceError","","The error type for the service.",26,null],[10,"bind_server","","Bind the service.",26,null],[8,"BindClient","","Binds an I/O object as a client of a service.",null,null],[16,"ServiceRequest","","The request type for the service.",27,null],[16,"ServiceResponse","","The response type for the service.",27,null],[16,"ServiceError","","The error type for the service.",27,null],[16,"BindClient","","The bound service.",27,null],[10,"bind_client","","Bind an I/O object as a service.",27,null],[11,"clone","tokio_proto::pipeline","",0,null],[11,"call","","",0,null],[11,"call","tokio_proto::multiplex","",3,null],[11,"clone","","",3,null]],"paths":[[3,"ClientService"],[8,"ClientProto"],[8,"ServerProto"],[3,"ClientService"],[8,"ClientProto"],[8,"ServerProto"],[4,"Message"],[4,"Frame"],[8,"Dispatch"],[3,"Pipeline"],[8,"ClientProto"],[8,"ServerProto"],[8,"Transport"],[4,"Frame"],[3,"MultiplexMessage"],[8,"Dispatch"],[3,"Multiplex"],[8,"ClientProto"],[8,"ServerProto"],[8,"Transport"],[3,"Body"],[3,"ClientProxy"],[3,"Response"],[3,"Connect"],[3,"TcpClient"],[3,"TcpServer"],[8,"BindServer"],[8,"BindClient"]]};
searchIndex["tokio_tls"] = {"doc":"Async TLS streams","items":[[3,"TlsStream","tokio_tls","A wrapper around an underlying raw stream which implements the TLS or SSL\nprotocol.",null,null],[3,"ConnectAsync","","Future returned from `TlsConnectorExt::connect_async` which will resolve\nonce the connection handshake has finished.",null,null],[3,"AcceptAsync","","Future returned from `TlsAcceptorExt::accept_async` which will resolve\nonce the accept handshake has finished.",null,null],[8,"TlsConnectorExt","","Extension trait for the `TlsConnector` type in the `native_tls` crate.",null,null],[10,"connect_async","","Connects the provided stream with this connector, assuming the provided\ndomain.",0,null],[8,"TlsAcceptorExt","","Extension trait for the `TlsAcceptor` type in the `native_tls` crate.",null,null],[10,"accept_async","","Accepts a new client connection with the provided stream.",1,null],[11,"fmt","","",2,null],[11,"get_ref","","Get access to the internal `native_tls::TlsStream` stream which also\ntransitively allows access to `S`.",2,null],[11,"get_mut","","Get mutable access to the internal `native_tls::TlsStream` stream which\nalso transitively allows mutable access to `S`.",2,null],[11,"read","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,null],[11,"poll","","",3,null],[11,"poll","","",4,null]],"paths":[[8,"TlsConnectorExt"],[8,"TlsAcceptorExt"],[3,"TlsStream"],[3,"ConnectAsync"],[3,"AcceptAsync"]]};
searchIndex["tokio_core"] = {"doc":"`Future`-powered I/O at the core of Tokio","items":[[0,"io","tokio_core","I/O conveniences when working with primitives in `tokio-core`",null,null],[3,"Copy","tokio_core::io","A future which will copy all data from a reader into a writer.",null,null],[3,"EasyBuf","","A reference counted buffer of bytes.",null,null],[3,"EasyBufMut","","An RAII object returned from `get_mut` which provides mutable access to the\nunderlying `Vec&lt;u8&gt;`.",null,null],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying `Io` object, using\nthe `Encode` and `Decode` traits to encode and decode frames.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill\na buffer.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream\ninto a vector.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill\na buffer.",null,null],[3,"ReadUntil","","A future which can be used to easily read the contents of a stream into a\nvector until the delimiter is reached.",null,null],[3,"ReadHalf","","The readable half of an object returned from `Io::split`.",null,null],[3,"WriteHalf","","The writable half of an object returned from `Io::split`.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[5,"copy","","Creates a future which represents copying all the bytes from one object to\nanother.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"copy"}}],[5,"flush","","Creates a future which will entirely flush an I/O object and then yield the\nobject itself.",null,{"inputs":[{"name":"a"}],"output":{"name":"flush"}}],[5,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`,\nreturning an error if EOF is hit sooner.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"readexact"}}],[5,"read_to_end","","Creates a future which will read all the bytes associated with the I/O\nobject `A` into the buffer provided.",null,{"inputs":[{"name":"a"},{"name":"vec"}],"output":{"name":"readtoend"}}],[5,"read","","Tries to read some bytes directly into the given `buf` in asynchronous\nmanner, returning a future type.",null,{"inputs":[{"name":"r"},{"name":"t"}],"output":{"name":"read"}}],[5,"read_until","","Creates a future which will read all the bytes associated with the I/O\nobject `A` into the buffer provided until the delimiter `byte` is reached.\nThis method is the async equivalent to [`BufRead::read_until`].",null,{"inputs":[{"name":"a"},{"name":"u8"},{"name":"vec"}],"output":{"name":"readuntil"}}],[5,"write_all","","Creates a future that will write the entire contents of the buffer `buf` to\nthe stream `a` provided.",null,{"inputs":[{"name":"a"},{"name":"t"}],"output":{"name":"writeall"}}],[11,"poll","","",0,null],[11,"clone","","",1,null],[11,"new","","Creates a new EasyBuf with no data and the default capacity.",1,{"inputs":[],"output":{"name":"easybuf"}}],[11,"with_capacity","","Creates a new EasyBuf with `cap` capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"easybuf"}}],[11,"len","","Returns the number of bytes contained in this `EasyBuf`.",1,null],[11,"as_slice","","Returns the inner contents of this `EasyBuf` as a slice.",1,null],[11,"split_off","","Splits the buffer into two at the given index.",1,null],[11,"drain_to","","Splits the buffer into two at the given index.",1,null],[11,"get_mut","","Returns a mutable reference to the underlying growable buffer of bytes.",1,null],[11,"as_ref","","",1,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"from","","",1,{"inputs":[{"name":"vec"}],"output":{"name":"easybuf"}}],[11,"drop","","",2,null],[11,"poll","","",3,null],[11,"start_send","","",3,null],[11,"poll_complete","","",3,null],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",3,null],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by\n`Framed`.",3,null],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",3,null],[11,"poll","","",4,null],[11,"poll","","",5,null],[11,"poll","","",6,null],[11,"poll","","",7,null],[11,"poll","","",8,null],[11,"poll_read","","Calls the underlying `poll_read` function on this handling, testing to\nsee if it&#39;s ready to be read from.",9,null],[11,"poll_write","","Calls the underlying `poll_write` function on this handling, testing to\nsee if it&#39;s ready to be written to.",10,null],[11,"read","","",9,null],[11,"write","","",10,null],[11,"flush","","",10,null],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire\nslice.",11,{"inputs":[{"name":"t"}],"output":{"name":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this\n`Window`.",11,null],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this\n`Window`.",11,null],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",11,null],[11,"start","","Returns the starting index of this window into the underlying buffer\n`T`.",11,null],[11,"end","","Returns the end index of this window into the underlying buffer\n`T`.",11,null],[11,"set_start","","Changes the starting index of this window to the index specified.",11,null],[11,"set_end","","Changes the end index of this window to the index specified.",11,null],[11,"as_ref","","",11,null],[11,"as_mut","","",11,null],[11,"poll","","",12,null],[6,"IoFuture","","A convenience typedef around a `Future` whose error component is `io::Error`",null,null],[6,"IoStream","","A convenience typedef around a `Stream` whose error component is `io::Error`",null,null],[8,"Codec","","Encoding and decoding of frames via buffers.",null,null],[16,"In","","The type of decoded frames.",13,null],[16,"Out","","The type of frames to be encoded.",13,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",13,null],[11,"decode_eof","","A default method available to be called when there are no more bytes\navailable to be read from the underlying I/O.",13,null],[10,"encode","","Encodes a frame into the buffer provided.",13,null],[8,"Io","","A trait for read/write I/O objects",null,null],[11,"poll_read","","Tests to see if this I/O object may be readable.",14,null],[11,"poll_write","","Tests to see if this I/O object may be writable.",14,null],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this\n`Io` object, using `Decode` and `Encode` to read and write the raw data.",14,null],[11,"split","","Helper method for splitting this read/write object into two halves.",14,null],[0,"channel","tokio_core","In-memory evented channels.",null,null],[3,"Sender","tokio_core::channel","The transmission half of a channel used for sending messages to a receiver.",null,null],[3,"Receiver","","The receiving half of a channel used for processing messages sent by a\n`Sender`.",null,null],[5,"channel","","Creates a new in-memory channel used for sending data across `Send +\n&#39;static` boundaries, frequently threads.",null,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"send","","Sends a message to the corresponding receiver of this sender.",15,null],[11,"start_send","","",15,null],[11,"poll_complete","","",15,null],[11,"clone","","",15,null],[11,"poll","","",16,null],[0,"net","tokio_core","TCP/UDP bindings for `tokio-core`",null,null],[3,"TcpStream","tokio_core::net","An I/O object representing a TCP stream connected to a remote endpoint.",null,null],[3,"TcpStreamNew","","Future returned by `TcpStream::connect` which will resolve to a `TcpStream`\nwhen the stream is connected.",null,null],[3,"TcpListener","","An I/O object representing a TCP socket listening for incoming connections.",null,null],[3,"Incoming","","Stream returned by the `TcpListener::incoming` function representing the\nstream of sockets received from a listener.",null,null],[3,"UdpSocket","","An I/O object representing a UDP socket.",null,null],[3,"UdpFramed","","A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using\nthe `UdpCodec` trait to encode and decode frames.",null,null],[3,"SendDgram","","A future used to write the entire contents of some data to a UDP socket.",null,null],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",null,null],[11,"as_raw_fd","","",17,null],[11,"as_raw_fd","","",18,null],[11,"bind","","Create a new TCP listener associated with this event loop.",18,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"accept","","Attempt to accept a connection and create a new connected `TcpStream` if\nsuccessful.",18,null],[11,"from_listener","","Create a new TCP listener from the standard library&#39;s TCP listener.",18,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",18,null],[11,"local_addr","","Returns the local address that this listener is bound to.",18,null],[11,"incoming","","Consumes this listener, returning a stream of the sockets this listener\naccepts.",18,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",18,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",18,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",18,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",18,null],[11,"fmt","","",18,null],[11,"poll","","",19,null],[11,"connect","","Create a new TCP stream connected to the specified address.",17,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"tcpstreamnew"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given\n`std::net::TcpStream`, connecting it to the address specified.",17,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"iofuture"}}],[11,"poll_read","","Test whether this socket is ready to be read or not.",17,null],[11,"poll_write","","Test whether this socket is ready to be written to or not.",17,null],[11,"local_addr","","Returns the local address that this stream is bound to.",17,null],[11,"peer_addr","","Returns the remote address that this stream is connected to.",17,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",17,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",17,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",17,null],[11,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",17,null],[11,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so\nthe amount of milliseconds between them.",17,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",17,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",17,null],[11,"read","","",17,null],[11,"write","","",17,null],[11,"flush","","",17,null],[11,"poll_read","","",17,null],[11,"poll_write","","",17,null],[11,"fmt","","",17,null],[11,"poll","","",20,null],[11,"poll","","",21,null],[11,"start_send","","",21,null],[11,"poll_complete","","",21,null],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped by `Framed`.",21,null],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream wrapped by\n`Framed`.",21,null],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",21,null],[11,"as_raw_fd","","",22,null],[11,"bind","","Create a new UDP socket bound to the specified address.",22,{"inputs":[{"name":"socketaddr"},{"name":"handle"}],"output":{"name":"result"}}],[11,"from_socket","","Creates a new `UdpSocket` from the previously bound socket provided.",22,{"inputs":[{"name":"udpsocket"},{"name":"handle"}],"output":{"name":"result"}}],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and writing to this\n`UdpSocket` object, using the provided `UdpCodec` to read and write the\nraw data.",22,null],[11,"local_addr","","Returns the local address that this stream is bound to.",22,null],[11,"poll_read","","Test whether this socket is ready to be read or not.",22,null],[11,"poll_write","","Test whether this socket is ready to be written to or not.",22,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",22,null],[11,"send_dgram","","Creates a future that will write the entire contents of the buffer\n`buf` provided as a datagram to this socket.",22,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",22,null],[11,"recv_dgram","","Creates a future that receive a datagram to be written to the buffer\nprovided.",22,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",22,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",22,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",22,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",22,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",22,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",22,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",22,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",22,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",22,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",22,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",22,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",22,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",22,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",22,null],[11,"fmt","","",22,null],[11,"poll","","",23,null],[11,"poll","","",24,null],[8,"UdpCodec","","Encoding of frames via buffers.",null,null],[16,"In","","The type of decoded frames.",25,null],[16,"Out","","The type of frames to be encoded.",25,null],[10,"decode","","Attempts to decode a frame from the provided buffer of bytes.",25,null],[10,"encode","","Encodes a frame into the buffer provided.",25,null],[0,"reactor","tokio_core","The core reactor driving all I/O",null,null],[3,"PollEvented","tokio_core::reactor","A concrete implementation of a stream of readiness notifications for I/O\nobjects that originates from an event loop.",null,null],[3,"Timeout","","A future representing the notification that a timeout has occurred.",null,null],[3,"Interval","","A stream representing notifications at fixed interval",null,null],[3,"Core","","An event loop.",null,null],[3,"Remote","","Handle to an event loop, used to construct I/O objects, send messages, and\notherwise interact indirectly with the event loop itself.",null,null],[3,"Handle","","A non-sendable handle to an event loop, useful for manufacturing instances\nof `LoopData`.",null,null],[11,"new","","Creates a new readiness stream associated with the provided\n`loop_handle` and for the given `source`.",26,{"inputs":[{"name":"e"},{"name":"handle"}],"output":{"name":"result"}}],[11,"deregister","","Deregisters this source of events from the reactor core specified.",26,null],[11,"poll_read","","Tests to see if this source is ready to be read from or not.",26,null],[11,"poll_write","","Tests to see if this source is ready to be written to or not.",26,null],[11,"need_read","","Indicates to this source of events that the corresponding I/O object is\nno longer readable, but it needs to be.",26,null],[11,"need_write","","Indicates to this source of events that the corresponding I/O object is\nno longer writable, but it needs to be.",26,null],[11,"remote","","Returns a reference to the event loop handle that this readiness stream\nis associated with.",26,null],[11,"get_ref","","Returns a shared reference to the underlying I/O object this readiness\nstream is wrapping.",26,null],[11,"get_mut","","Returns a mutable reference to the underlying I/O object this readiness\nstream is wrapping.",26,null],[11,"read","","",26,null],[11,"write","","",26,null],[11,"flush","","",26,null],[11,"poll_read","","",26,null],[11,"poll_write","","",26,null],[11,"drop","","",26,null],[11,"new","","Creates a new timeout which will fire at `dur` time into the future.",27,{"inputs":[{"name":"duration"},{"name":"handle"}],"output":{"name":"result"}}],[11,"new_at","","Creates a new timeout which will fire at the time specified by `at`.",27,{"inputs":[{"name":"instant"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll","","",27,null],[11,"drop","","",27,null],[11,"new","","Creates a new interval which will fire at `dur` time into the future,\nand will repeat every `dur` interval after",28,{"inputs":[{"name":"duration"},{"name":"handle"}],"output":{"name":"result"}}],[11,"new_at","","Creates a new interval which will fire at the time specified by `at`,\nand then will repeat every `dur` interval after",28,{"inputs":[{"name":"instant"},{"name":"duration"},{"name":"handle"}],"output":{"name":"result"}}],[11,"poll","","",28,null],[11,"drop","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"new","","Creates a new event loop, returning any error that happened during the\ncreation.",31,{"inputs":[],"output":{"name":"result"}}],[11,"handle","","Returns a handle to this event loop which cannot be sent across threads\nbut can be used as a proxy to the event loop itself.",31,null],[11,"remote","","Generates a remote handle to this event loop which can be used to spawn\ntasks from other threads into this event loop.",31,null],[11,"run","","Runs a future until completion, driving the event loop while we&#39;re\notherwise waiting for the future to complete.",31,null],[11,"turn","","Performs one iteration of the event loop, blocking on waiting for events\nfor at most `max_wait` (forever if `None`).",31,null],[11,"spawn","","Spawns a new future into the event loop this remote is associated with.",29,null],[11,"remote","","Returns a reference to the underlying remote handle to the event loop.",30,null],[11,"spawn","","Spawns a new future on the event loop this handle is associated with.",30,null],[11,"spawn_fn","","Spawns a closure on this event loop.",30,null],[14,"try_nb","tokio_core","A convenience macro for working with `io::Result&lt;T&gt;` from the `Read` and\n`Write` traits.",null,null],[11,"decode_eof","tokio_core::io","A default method available to be called when there are no more bytes\navailable to be read from the underlying I/O.",13,null]],"paths":[[3,"Copy"],[3,"EasyBuf"],[3,"EasyBufMut"],[3,"Framed"],[3,"Flush"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"Read"],[3,"ReadUntil"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[3,"WriteAll"],[8,"Codec"],[8,"Io"],[3,"Sender"],[3,"Receiver"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"TcpStreamNew"],[3,"UdpFramed"],[3,"UdpSocket"],[3,"SendDgram"],[3,"RecvDgram"],[8,"UdpCodec"],[3,"PollEvented"],[3,"Timeout"],[3,"Interval"],[3,"Remote"],[3,"Handle"],[3,"Core"]]};
searchIndex["mio"] = {"doc":"A fast, low-level IO library for Rust focusing on non-blocking APIs, event\nnotification, and other useful utilities for building high performance IO\napps.","items":[[3,"PollOpt","mio","Configures readiness polling behavior for a given `Evented` value.",null,null],[3,"Ready","","A set of readiness events returned by `Poll`.",null,null],[3,"Event","","An readiness event returned by `Poll`.",null,null],[3,"Poll","","Polls for readiness events on all registered values.",null,null],[3,"Events","","A buffer for I/O events to get placed into, passed to `Poll::poll`.",null,null],[3,"EventsIter","","Iterate an Events structure",null,null],[3,"Registration","","Handle to a Poll registration. Used for registering custom types for event\nnotifications.",null,null],[3,"SetReadiness","","Used to update readiness for an associated `Registration`. `SetReadiness`\nis `Sync` which allows it to be updated across threads.",null,null],[3,"Token","","Used to identify which `Evented` value is associated with an `Event`\nnotification returned by `Poll`.",null,null],[12,"0","","",0,null],[5,"would_block","","Returns a std `WouldBlock` error without allocating",null,{"inputs":[],"output":{"name":"error"}}],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"cmp","","",1,null],[11,"edge","","",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"empty","","",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"level","","",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"oneshot","","",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"urgent","","",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"all","","",1,{"inputs":[],"output":{"name":"pollopt"}}],[11,"is_edge","","",1,null],[11,"is_level","","",1,null],[11,"is_oneshot","","",1,null],[11,"is_urgent","","",1,null],[11,"bits","","",1,null],[11,"contains","","",1,null],[11,"insert","","",1,null],[11,"remove","","",1,null],[11,"bitor","","",1,null],[11,"bitxor","","",1,null],[11,"bitand","","",1,null],[11,"sub","","",1,null],[11,"not","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"cmp","","",2,null],[11,"none","","",2,{"inputs":[],"output":{"name":"ready"}}],[11,"readable","","",2,{"inputs":[],"output":{"name":"ready"}}],[11,"writable","","",2,{"inputs":[],"output":{"name":"ready"}}],[11,"error","","",2,{"inputs":[],"output":{"name":"ready"}}],[11,"hup","","",2,{"inputs":[],"output":{"name":"ready"}}],[11,"all","","",2,{"inputs":[],"output":{"name":"ready"}}],[11,"is_none","","",2,null],[11,"is_readable","","",2,null],[11,"is_writable","","",2,null],[11,"is_error","","",2,null],[11,"is_hup","","",2,null],[11,"insert","","",2,null],[11,"remove","","",2,null],[11,"bits","","",2,null],[11,"contains","","",2,null],[11,"bitor","","",2,null],[11,"bitxor","","",2,null],[11,"bitand","","",2,null],[11,"sub","","",2,null],[11,"not","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"new","","Create a new Event.",3,{"inputs":[{"name":"ready"},{"name":"token"}],"output":{"name":"event"}}],[11,"kind","","",3,null],[11,"token","","",3,null],[11,"clone","","",4,null],[11,"new","","Return a new `Poll` handle using a default configuration.",5,{"inputs":[],"output":{"name":"result"}}],[11,"register","","Register an `Evented` handle with the `Poll` instance.",5,null],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",5,null],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",5,null],[11,"poll","","Block the current thread and wait until any `Evented` values registered\nwith the `Poll` instance are ready or the given timeout has elapsed.",5,null],[11,"fmt","","",5,null],[11,"with_capacity","","Create a net blank set of events capable of holding up to `capacity`\nevents.",6,{"inputs":[{"name":"usize"}],"output":{"name":"events"}}],[11,"get","","Returns the `idx`-th event.",6,null],[11,"len","","Returns how many events this buffer contains.",6,null],[11,"is_empty","","Returns whether this buffer contains 0 events.",6,null],[11,"iter","","",6,null],[11,"next","","",7,null],[11,"new","","Create a new `Registration` associated with the given `Poll` instance.\nThe returned `Registration` will be associated with this `Poll` for its\nentire lifetime.",8,null],[11,"update","","",8,null],[11,"deregister","","",8,null],[11,"drop","","",8,null],[11,"fmt","","",8,null],[11,"readiness","","",4,null],[11,"set_readiness","","",4,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"token"}}],[0,"channel","","Thread safe communication channel implementing `Evented`",null,null],[3,"SenderCtl","mio::channel","Tracks messages sent on a channel in order to update readiness.",null,null],[3,"ReceiverCtl","","Tracks messages received on a channel in order to track readiness.",null,null],[3,"Sender","","",null,null],[3,"SyncSender","","",null,null],[3,"Receiver","","",null,null],[4,"SendError","","",null,null],[13,"Io","","",9,null],[13,"Disconnected","","",9,null],[4,"TrySendError","","",null,null],[13,"Io","","",10,null],[13,"Full","","",10,null],[13,"Disconnected","","",10,null],[5,"channel","","Creates a new asynchronous channel, where the `Receiver` can be registered\nwith `Poll`.",null,null],[5,"sync_channel","","Creates a new synchronous, bounded channel where the `Receiver` can be\nregistered with `Poll`.",null,null],[5,"ctl_pair","","",null,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"send","","",11,null],[11,"clone","","",11,null],[11,"send","","",12,null],[11,"try_send","","",12,null],[11,"clone","","",12,null],[11,"try_recv","","",13,null],[11,"register","","",13,null],[11,"reregister","","",13,null],[11,"deregister","","",13,null],[11,"inc","","Call to track that a message has been sent",14,null],[11,"clone","","",14,null],[11,"drop","","",14,null],[11,"dec","","",15,null],[11,"register","","",15,null],[11,"reregister","","",15,null],[11,"deregister","","",15,null],[11,"from","","",9,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"from","","",9,{"inputs":[{"name":"error"}],"output":{"name":"senderror"}}],[11,"from","","",10,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"from","","",10,{"inputs":[{"name":"senderror"}],"output":{"name":"trysenderror"}}],[11,"from","","",10,{"inputs":[{"name":"error"}],"output":{"name":"trysenderror"}}],[0,"timer","mio","Timer optimized for I/O related operations",null,null],[3,"Timer","mio::timer","",null,null],[3,"Builder","","",null,null],[3,"Timeout","","",null,null],[3,"TimerError","","",null,null],[4,"TimerErrorKind","","",null,null],[13,"TimerOverflow","","",16,null],[6,"Result","","",null,null],[6,"TimerResult","","",null,null],[6,"OldTimerResult","","",null,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",18,null],[11,"fmt","","",16,null],[11,"tick_duration","","",19,null],[11,"num_slots","","",19,null],[11,"capacity","","",19,null],[11,"build","","",19,null],[11,"default","","",19,{"inputs":[],"output":{"name":"builder"}}],[11,"set_timeout","","",20,null],[11,"cancel_timeout","","",20,null],[11,"poll","","",20,null],[11,"default","","",20,{"inputs":[],"output":{"name":"timer"}}],[11,"register","","",20,null],[11,"reregister","","",20,null],[11,"deregister","","",20,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"fmt","","",16,null],[0,"deprecated","mio","EventLoop and other deprecated types",null,null],[4,"Shutdown","mio::deprecated","",null,null],[13,"Read","","Further receptions will be disallowed.",21,null],[13,"Write","","Further  transmissions will be disallowed.",21,null],[13,"Both","","Further receptions and transmissions will be disallowed.",21,null],[3,"EventLoop","","Single threaded IO event loop.",null,null],[3,"EventLoopBuilder","","",null,null],[3,"Sender","","Sends messages to the EventLoop from other threads.",null,null],[4,"NotifyError","","",null,null],[13,"Io","","",22,null],[13,"Full","","",22,null],[13,"Closed","","",22,null],[11,"fmt","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"eventloopbuilder"}}],[11,"clone","","",23,null],[11,"new","","Construct a new `EventLoopBuilder` with the default configuration\nvalues.",23,{"inputs":[],"output":{"name":"eventloopbuilder"}}],[11,"notify_capacity","","Sets the maximum number of messages that can be buffered on the event\nloop&#39;s notification channel before a send will fail.",23,null],[11,"messages_per_tick","","Sets the maximum number of messages that can be processed on any tick of\nthe event loop.",23,null],[11,"timer_tick","","",23,null],[11,"timer_wheel_size","","",23,null],[11,"timer_capacity","","",23,null],[11,"build","","Constructs a new `EventLoop` using the configured values. The\n`EventLoop` will not be running.",23,null],[11,"new","","Constructs a new `EventLoop` using the default configuration values.\nThe `EventLoop` will not be running.",24,{"inputs":[],"output":{"name":"result"}}],[11,"channel","","Returns a sender that allows sending messages to the event loop in a\nthread-safe way, waking up the event loop if needed.",24,null],[11,"timeout","","Schedules a timeout after the requested time interval. When the\nduration has been reached,\n[Handler::timeout](trait.Handler.html#method.timeout) will be invoked\npassing in the supplied token.",24,null],[11,"clear_timeout","","If the supplied timeout has not been triggered, cancel it such that it\nwill not be triggered in the future.",24,null],[11,"shutdown","","Tells the event loop to exit after it is done handling all events in the\ncurrent iteration.",24,null],[11,"is_running","","Indicates whether the event loop is currently running. If it&#39;s not it has either\nstopped or is scheduled to stop on the next tick.",24,null],[11,"register","","Registers an IO handle with the event loop.",24,null],[11,"reregister","","Re-Registers an IO handle with the event loop.",24,null],[11,"run","","Keep spinning the event loop indefinitely, and notify the handler whenever\nany of the registered handles are ready.",24,null],[11,"deregister","","Deregisters an IO handle with the event loop.",24,null],[11,"run_once","","Spin the event loop once, with a given timeout (forever if `None`),\nand notify the handler if any of the registered handles become ready\nduring that time.",24,null],[11,"fmt","","",24,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"send","","",25,null],[11,"fmt","","",22,null],[11,"fmt","","",22,null],[11,"description","","",22,null],[11,"cause","","",22,null],[11,"from","","",22,{"inputs":[{"name":"trysenderror"}],"output":{"name":"notifyerror"}}],[0,"unix","","",null,null],[4,"Shutdown","mio::deprecated::unix","",null,null],[13,"Read","","Further receptions will be disallowed.",21,null],[13,"Write","","Further  transmissions will be disallowed.",21,null],[13,"Both","","Further receptions and transmissions will be disallowed.",21,null],[3,"Io","","",null,null],[3,"UnixSocket","","",null,null],[3,"UnixStream","","",null,null],[3,"UnixListener","","",null,null],[3,"PipeReader","","",null,null],[3,"PipeWriter","","",null,null],[5,"pipe","","",null,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","","",26,null],[11,"stream","","Returns a new, unbound, non-blocking Unix domain socket",26,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connect the socket to the specified address",26,null],[11,"bind","","Bind the socket to the specified address",26,null],[11,"listen","","Listen for incoming requests",26,null],[11,"try_clone","","",26,null],[11,"register","","",26,null],[11,"reregister","","",26,null],[11,"deregister","","",26,null],[11,"from","","",26,{"inputs":[{"name":"unixsocket"}],"output":{"name":"unixsocket"}}],[11,"fmt","","",27,null],[11,"connect","","",27,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"try_clone","","",27,null],[11,"shutdown","","",27,null],[11,"read_recv_fd","","",27,null],[11,"try_read_recv_fd","","",27,null],[11,"write_send_fd","","",27,null],[11,"try_write_send_fd","","",27,null],[11,"read","","",27,null],[11,"write","","",27,null],[11,"flush","","",27,null],[11,"register","","",27,null],[11,"reregister","","",27,null],[11,"deregister","","",27,null],[11,"from","","",27,{"inputs":[{"name":"unixsocket"}],"output":{"name":"unixstream"}}],[11,"fmt","","",28,null],[11,"bind","","",28,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","",28,null],[11,"try_clone","","",28,null],[11,"register","","",28,null],[11,"reregister","","",28,null],[11,"deregister","","",28,null],[11,"accept","","",28,null],[11,"from","","",28,{"inputs":[{"name":"unixsocket"}],"output":{"name":"unixlistener"}}],[11,"fmt","","",29,null],[11,"from_stdout","","",29,{"inputs":[{"name":"childstdout"}],"output":{"name":"result"}}],[11,"from_stderr","","",29,{"inputs":[{"name":"childstderr"}],"output":{"name":"result"}}],[11,"read","","",29,null],[11,"register","","",29,null],[11,"reregister","","",29,null],[11,"deregister","","",29,null],[11,"from","","",29,{"inputs":[{"name":"io"}],"output":{"name":"pipereader"}}],[11,"fmt","","",30,null],[11,"from_stdin","","",30,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"write","","",30,null],[11,"flush","","",30,null],[11,"register","","",30,null],[11,"reregister","","",30,null],[11,"deregister","","",30,null],[11,"from","","",30,{"inputs":[{"name":"io"}],"output":{"name":"pipewriter"}}],[11,"into_raw_fd","","",26,null],[11,"as_raw_fd","","",26,null],[11,"from_raw_fd","","",26,{"inputs":[{"name":"rawfd"}],"output":{"name":"unixsocket"}}],[11,"into_raw_fd","","",27,null],[11,"as_raw_fd","","",27,null],[11,"from_raw_fd","","",27,{"inputs":[{"name":"rawfd"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",28,null],[11,"as_raw_fd","","",28,null],[11,"from_raw_fd","","",28,{"inputs":[{"name":"rawfd"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",29,null],[11,"as_raw_fd","","",29,null],[11,"from_raw_fd","","",29,{"inputs":[{"name":"rawfd"}],"output":{"name":"pipereader"}}],[11,"into_raw_fd","","",30,null],[11,"as_raw_fd","","",30,null],[11,"from_raw_fd","","",30,{"inputs":[{"name":"rawfd"}],"output":{"name":"pipewriter"}}],[8,"TryAccept","mio::deprecated","",null,null],[16,"Output","","",31,null],[10,"accept","","",31,null],[8,"TryRead","","",null,null],[10,"try_read","","",32,null],[8,"TryWrite","","",null,null],[10,"try_write","","",33,null],[8,"Handler","","",null,null],[16,"Timeout","","",34,null],[16,"Message","","",34,null],[11,"ready","","Invoked when the socket represented by `token` is ready to be operated\non. `events` indicates the specific operations that are\nready to be performed.",34,null],[11,"notify","","Invoked when a message has been received via the event loop&#39;s channel.",34,null],[11,"timeout","","Invoked when a timeout has completed.",34,null],[11,"interrupted","","Invoked when `EventLoop` has been interrupted by a signal interrupt.",34,null],[11,"tick","","Invoked at the end of an event loop tick.",34,null],[0,"tcp","mio","Primitives for working with TCP",null,null],[4,"Shutdown","mio::tcp","Possible values which can be passed to the [`shutdown`] method of\n[`TcpStream`].",null,null],[13,"Read","","Indicates that the reading portion of this stream/socket should be shut\ndown. All currently blocked and future reads will return `Ok(0)`.",35,null],[13,"Write","","Indicates that the writing portion of this stream/socket should be shut\ndown. All currently blocked and future writes will return an error.",35,null],[13,"Both","","Shut down both the reading and writing portions of this stream.",35,null],[3,"TcpStream","","",null,null],[3,"TcpListener","","",null,null],[11,"fmt","","",36,null],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the\nspecified address.",36,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given\n`std::net::TcpBuilder`, connecting it to the address specified.",36,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",36,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",36,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",36,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",36,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",36,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",36,null],[11,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",36,null],[11,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so\nthe amount of milliseconds between them.",36,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",36,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",36,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",36,null],[11,"read","","",36,null],[11,"write","","",36,null],[11,"flush","","",36,null],[11,"register","","",36,null],[11,"reregister","","",36,null],[11,"deregister","","",36,null],[11,"fmt","","",37,null],[11,"bind","","Convenience method to bind a new TCP listener to the specified address\nto receive new connections.",37,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_listener","","Creates a new `TcpListener` from an instance of a\n`std::net::TcpListener` type.",37,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new `TcpStream`.",37,null],[11,"local_addr","","Returns the local socket address of this listener.",37,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",37,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",37,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",37,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",37,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",37,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",37,null],[11,"register","","",37,null],[11,"reregister","","",37,null],[11,"deregister","","",37,null],[11,"into_raw_fd","","",36,null],[11,"as_raw_fd","","",36,null],[11,"from_raw_fd","","",36,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcpstream"}}],[11,"into_raw_fd","","",37,null],[11,"as_raw_fd","","",37,null],[11,"from_raw_fd","","",37,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcplistener"}}],[0,"udp","mio","Primitives for working with UDP",null,null],[3,"UdpSocket","mio::udp","",null,null],[11,"fmt","","",38,null],[11,"bind","","Creates a UDP socket from the given address.",38,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std\nsocket.",38,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address that this socket was created from.",38,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",38,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",38,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",38,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",38,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",38,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",38,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",38,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",38,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",38,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",38,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",38,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",38,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",38,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",38,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",38,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",38,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",38,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",38,null],[11,"register","","",38,null],[11,"reregister","","",38,null],[11,"deregister","","",38,null],[11,"into_raw_fd","","",38,null],[11,"as_raw_fd","","",38,null],[11,"from_raw_fd","","",38,{"inputs":[{"name":"rawfd"}],"output":{"name":"udpsocket"}}],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","",null,null],[12,"0","","",39,null],[8,"Evented","mio","A value that may be registered with an `EventLoop`",null,null],[10,"register","","",40,null],[10,"reregister","","",40,null],[10,"deregister","","",40,null],[11,"clone","mio::tcp","",35,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"clone","mio::deprecated::unix","",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"fmt","mio::tcp","",36,null],[11,"connect","","Create a new TCP stream and issue a non-blocking connect to the\nspecified address.",36,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside the given\n`std::net::TcpBuilder`, connecting it to the address specified.",36,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",36,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",36,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",36,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",36,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",36,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",36,null],[11,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",36,null],[11,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so\nthe amount of milliseconds between them.",36,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",36,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",36,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",36,null],[11,"read","","",36,null],[11,"write","","",36,null],[11,"flush","","",36,null],[11,"register","","",36,null],[11,"reregister","","",36,null],[11,"deregister","","",36,null],[11,"fmt","","",37,null],[11,"bind","","Convenience method to bind a new TCP listener to the specified address\nto receive new connections.",37,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_listener","","Creates a new `TcpListener` from an instance of a\n`std::net::TcpListener` type.",37,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new `TcpStream`.",37,null],[11,"local_addr","","Returns the local socket address of this listener.",37,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",37,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",37,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",37,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",37,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",37,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",37,null],[11,"register","","",37,null],[11,"reregister","","",37,null],[11,"deregister","","",37,null],[11,"into_raw_fd","","",36,null],[11,"as_raw_fd","","",36,null],[11,"from_raw_fd","","",36,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcpstream"}}],[11,"into_raw_fd","","",37,null],[11,"as_raw_fd","","",37,null],[11,"from_raw_fd","","",37,{"inputs":[{"name":"rawfd"}],"output":{"name":"tcplistener"}}],[11,"fmt","mio::udp","",38,null],[11,"bind","","Creates a UDP socket from the given address.",38,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and bound std\nsocket.",38,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address that this socket was created from.",38,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",38,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",38,null],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",38,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",38,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",38,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",38,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",38,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",38,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",38,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",38,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",38,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",38,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",38,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",38,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",38,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",38,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",38,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",38,null],[11,"register","","",38,null],[11,"reregister","","",38,null],[11,"deregister","","",38,null],[11,"into_raw_fd","","",38,null],[11,"as_raw_fd","","",38,null],[11,"from_raw_fd","","",38,{"inputs":[{"name":"rawfd"}],"output":{"name":"udpsocket"}}],[11,"fmt","mio::unix","",39,null],[11,"register","","",39,null],[11,"reregister","","",39,null],[11,"deregister","","",39,null],[11,"fmt","mio::deprecated::unix","",41,null],[11,"from_raw_fd","","",41,{"inputs":[{"name":"rawfd"}],"output":{"name":"io"}}],[11,"into_raw_fd","","",41,null],[11,"as_raw_fd","","",41,null],[11,"register","","",41,null],[11,"reregister","","",41,null],[11,"deregister","","",41,null],[11,"read","","",41,null],[11,"write","","",41,null],[11,"flush","","",41,null],[11,"drop","","",41,null],[11,"ready","mio::deprecated","Invoked when the socket represented by `token` is ready to be operated\non. `events` indicates the specific operations that are\nready to be performed.",34,null],[11,"notify","","Invoked when a message has been received via the event loop&#39;s channel.",34,null],[11,"timeout","","Invoked when a timeout has completed.",34,null],[11,"interrupted","","Invoked when `EventLoop` has been interrupted by a signal interrupt.",34,null],[11,"tick","","Invoked at the end of an event loop tick.",34,null]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Event"],[3,"SetReadiness"],[3,"Poll"],[3,"Events"],[3,"EventsIter"],[3,"Registration"],[4,"SendError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"SenderCtl"],[3,"ReceiverCtl"],[4,"TimerErrorKind"],[3,"Timeout"],[3,"TimerError"],[3,"Builder"],[3,"Timer"],[4,"Shutdown"],[4,"NotifyError"],[3,"EventLoopBuilder"],[3,"EventLoop"],[3,"Sender"],[3,"UnixSocket"],[3,"UnixStream"],[3,"UnixListener"],[3,"PipeReader"],[3,"PipeWriter"],[8,"TryAccept"],[8,"TryRead"],[8,"TryWrite"],[8,"Handler"],[4,"Shutdown"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"EventedFd"],[8,"Evented"],[3,"Io"]]};
searchIndex["native_tls"] = {"doc":"An abstraction over platform-specific TLS implementations.","items":[[3,"Error","native_tls","An error returned from the TLS implementation.",null,null],[3,"Pkcs12","","A PKCS #12 archive.",null,null],[3,"MidHandshakeTlsStream","","A TLS stream which has been interrupted midway through the handshake process.",null,null],[3,"TlsConnectorBuilder","","A builder for `TlsConnector`s.",null,null],[3,"TlsConnector","","A builder for client-side TLS connections.",null,null],[3,"TlsAcceptorBuilder","","A builder for `TlsAcceptor`s.",null,null],[3,"TlsAcceptor","","A builder for server-side TLS connections.",null,null],[3,"TlsStream","","A stream managing a TLS session.",null,null],[4,"HandshakeError","","An error returned from `ClientBuilder::handshake`.",null,null],[13,"Failure","","A fatal error.",0,null],[13,"Interrupted","","A stream interrupted midway through the handshake process due to a\n`WouldBlock` error.",0,null],[0,"backend","","TLS backend-specific functionality.",null,null],[0,"openssl","native_tls::backend","OpenSSL-specific functionality.",null,null],[8,"TlsConnectorBuilderExt","native_tls::backend::openssl","OpenSSL-specific extensions to `TlsConnectorBuilder`.",null,null],[10,"builder","","Returns a shared reference to the inner `SslConnectorBuilder`.",1,null],[10,"builder_mut","","Returns a mutable reference to the inner `SslConnectorBuilder`.",1,null],[8,"TlsAcceptorBuilderExt","","OpenSSL-specific extensions to `TlsAcceptorBuilder`.",null,null],[10,"builder","","Returns a shared reference to the inner `SslAcceptorBuilder`.",2,null],[10,"builder_mut","","Returns a mutable reference to the inner `SslAcceptorBuilder`.",2,null],[8,"TlsStreamExt","","OpenSSL-specific extensions to `TlsStream`.",null,null],[10,"raw_stream","","Returns a shared reference to the OpenSSL `SslStream`.",3,null],[10,"raw_stream_mut","","Returns a mutable reference to the OpenSSL `SslStream`.",3,null],[11,"builder","native_tls","",4,null],[11,"builder_mut","","",4,null],[11,"builder","","",5,null],[11,"builder_mut","","",5,null],[11,"raw_stream","","",6,null],[11,"raw_stream_mut","","",6,null],[6,"Result","","A typedef of the result type returned by many methods.",null,null],[11,"description","","",7,null],[11,"cause","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from","","",7,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_der","","Parses a DER-formatted PKCS #12 archive, using the specified password to decrypt the key.",8,null],[11,"fmt","","",9,null],[11,"get_ref","","Returns a shared reference to the inner stream.",9,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",9,null],[11,"handshake","","Restarts the handshake process.",9,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"handshakeerror"}],"output":{"name":"handshakeerror"}}],[11,"identity","","Sets the identity to be used for client certificate authentication.",4,null],[11,"build","","Consumes the builder, returning a `TlsConnector`.",4,null],[11,"builder","","Returns a new builder for a `TlsConnector`.",10,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Initiates a TLS handshake.",10,null],[11,"build","","Consumes the builder, returning a `TlsAcceptor`.",5,null],[11,"builder","","Returns a new builder for a `TlsAcceptor`.",11,{"inputs":[{"name":"pkcs12"}],"output":{"name":"result"}}],[11,"accept","","Initiates a TLS handshake.",11,null],[11,"fmt","","",6,null],[11,"get_ref","","Returns a shared reference to the inner stream.",6,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",6,null],[11,"buffered_read_size","","Returns the number of bytes that can be read without resulting in any\nnetwork calls.",6,null],[11,"read","","",6,null],[11,"write","","",6,null],[11,"flush","","",6,null]],"paths":[[4,"HandshakeError"],[8,"TlsConnectorBuilderExt"],[8,"TlsAcceptorBuilderExt"],[8,"TlsStreamExt"],[3,"TlsConnectorBuilder"],[3,"TlsAcceptorBuilder"],[3,"TlsStream"],[3,"Error"],[3,"Pkcs12"],[3,"MidHandshakeTlsStream"],[3,"TlsConnector"],[3,"TlsAcceptor"]]};
searchIndex["nix"] = {"doc":"Rust friendly bindings to the various *nix system functions.","items":[[6,"c_int","nix","",null,null],[4,"c_void","","",null,null],[4,"Errno","","",null,null],[13,"UnknownErrno","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ECHRNG","","",0,null],[13,"EL2NSYNC","","",0,null],[13,"EL3HLT","","",0,null],[13,"EL3RST","","",0,null],[13,"ELNRNG","","",0,null],[13,"EUNATCH","","",0,null],[13,"ENOCSI","","",0,null],[13,"EL2HLT","","",0,null],[13,"EBADE","","",0,null],[13,"EBADR","","",0,null],[13,"EXFULL","","",0,null],[13,"ENOANO","","",0,null],[13,"EBADRQC","","",0,null],[13,"EBADSLT","","",0,null],[13,"EBFONT","","",0,null],[13,"ENOSTR","","",0,null],[13,"ENODATA","","",0,null],[13,"ETIME","","",0,null],[13,"ENOSR","","",0,null],[13,"ENONET","","",0,null],[13,"ENOPKG","","",0,null],[13,"EREMOTE","","",0,null],[13,"ENOLINK","","",0,null],[13,"EADV","","",0,null],[13,"ESRMNT","","",0,null],[13,"ECOMM","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EDOTDOT","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"ENOTUNIQ","","",0,null],[13,"EBADFD","","",0,null],[13,"EREMCHG","","",0,null],[13,"ELIBACC","","",0,null],[13,"ELIBBAD","","",0,null],[13,"ELIBSCN","","",0,null],[13,"ELIBMAX","","",0,null],[13,"ELIBEXEC","","",0,null],[13,"EILSEQ","","",0,null],[13,"ERESTART","","",0,null],[13,"ESTRPIPE","","",0,null],[13,"EUSERS","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"ESOCKTNOSUPPORT","","",0,null],[13,"EOPNOTSUPP","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ESHUTDOWN","","",0,null],[13,"ETOOMANYREFS","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTDOWN","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EUCLEAN","","",0,null],[13,"ENOTNAM","","",0,null],[13,"ENAVAIL","","",0,null],[13,"EISNAM","","",0,null],[13,"EREMOTEIO","","",0,null],[13,"EDQUOT","","",0,null],[13,"ENOMEDIUM","","",0,null],[13,"EMEDIUMTYPE","","",0,null],[13,"ECANCELED","","",0,null],[13,"ENOKEY","","",0,null],[13,"EKEYEXPIRED","","",0,null],[13,"EKEYREVOKED","","",0,null],[13,"EKEYREJECTED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[13,"ERFKILL","","",0,null],[13,"EHWPOISON","","",0,null],[4,"Error","","",null,null],[13,"Sys","","",1,null],[13,"InvalidPath","","",1,null],[0,"libc","","",null,null],[0,"errno","","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ECHRNG","","",0,null],[13,"EL2NSYNC","","",0,null],[13,"EL3HLT","","",0,null],[13,"EL3RST","","",0,null],[13,"ELNRNG","","",0,null],[13,"EUNATCH","","",0,null],[13,"ENOCSI","","",0,null],[13,"EL2HLT","","",0,null],[13,"EBADE","","",0,null],[13,"EBADR","","",0,null],[13,"EXFULL","","",0,null],[13,"ENOANO","","",0,null],[13,"EBADRQC","","",0,null],[13,"EBADSLT","","",0,null],[13,"EBFONT","","",0,null],[13,"ENOSTR","","",0,null],[13,"ENODATA","","",0,null],[13,"ETIME","","",0,null],[13,"ENOSR","","",0,null],[13,"ENONET","","",0,null],[13,"ENOPKG","","",0,null],[13,"EREMOTE","","",0,null],[13,"ENOLINK","","",0,null],[13,"EADV","","",0,null],[13,"ESRMNT","","",0,null],[13,"ECOMM","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EDOTDOT","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"ENOTUNIQ","","",0,null],[13,"EBADFD","","",0,null],[13,"EREMCHG","","",0,null],[13,"ELIBACC","","",0,null],[13,"ELIBBAD","","",0,null],[13,"ELIBSCN","","",0,null],[13,"ELIBMAX","","",0,null],[13,"ELIBEXEC","","",0,null],[13,"EILSEQ","","",0,null],[13,"ERESTART","","",0,null],[13,"ESTRPIPE","","",0,null],[13,"EUSERS","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"ESOCKTNOSUPPORT","","",0,null],[13,"EOPNOTSUPP","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ESHUTDOWN","","",0,null],[13,"ETOOMANYREFS","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTDOWN","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EUCLEAN","","",0,null],[13,"ENOTNAM","","",0,null],[13,"ENAVAIL","","",0,null],[13,"EISNAM","","",0,null],[13,"EREMOTEIO","","",0,null],[13,"EDQUOT","","",0,null],[13,"ENOMEDIUM","","",0,null],[13,"EMEDIUMTYPE","","",0,null],[13,"ECANCELED","","",0,null],[13,"ENOKEY","","",0,null],[13,"EKEYEXPIRED","","",0,null],[13,"EKEYREVOKED","","",0,null],[13,"EKEYREJECTED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[13,"ERFKILL","","",0,null],[13,"EHWPOISON","","",0,null],[5,"from_i32","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"errno"}}],[5,"errno","","Returns the platform-specific value of errno",null,{"inputs":[],"output":{"name":"i32"}}],[11,"fmt","nix","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[17,"EWOULDBLOCK","nix::errno","",null,null],[17,"EDEADLOCK","","",null,null],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and more detailed\ninformation about the error can be found in `errno`",null,null],[10,"sentinel","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"last","nix","",0,{"inputs":[],"output":{"name":"self"}}],[11,"desc","","",0,null],[11,"from_i32","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"errno"}}],[11,"clear","","",0,null],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This\nshould not be used when `-1` is not the errno sentinel value.",0,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"description","","",0,null],[11,"fmt","","",0,null],[0,"features","","",null,null],[5,"socket_atomic_cloexec","nix::features","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"fcntl","nix","",null,null],[3,"SpliceFFlags","nix::fcntl","",null,null],[3,"OFlag","","",null,null],[3,"FdFlag","","",null,null],[3,"SealFlag","","",null,null],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",3,null],[13,"F_DUPFD_CLOEXEC","","",3,null],[13,"F_GETFD","","",3,null],[13,"F_SETFD","","",3,null],[13,"F_GETFL","","",3,null],[13,"F_SETFL","","",3,null],[13,"F_SETLK","","",3,null],[13,"F_SETLKW","","",3,null],[13,"F_GETLK","","",3,null],[13,"F_OFD_SETLK","","",3,null],[13,"F_OFD_SETLKW","","",3,null],[13,"F_OFD_GETLK","","",3,null],[13,"F_ADD_SEALS","","",3,null],[13,"F_GET_SEALS","","",3,null],[4,"FlockArg","","",null,null],[13,"LockShared","","",4,null],[13,"LockExclusive","","",4,null],[13,"Unlock","","",4,null],[13,"LockSharedNonblock","","",4,null],[13,"LockExclusiveNonblock","","",4,null],[13,"UnlockNonblock","","",4,null],[5,"open","","",null,{"inputs":[{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"name":"result"}}],[5,"fcntl","","",null,{"inputs":[{"name":"rawfd"},{"name":"fcntlarg"}],"output":{"name":"result"}}],[5,"flock","","",null,{"inputs":[{"name":"rawfd"},{"name":"flockarg"}],"output":{"name":"result"}}],[5,"splice","","",null,{"inputs":[{"name":"rawfd"},{"name":"option"},{"name":"rawfd"},{"name":"option"},{"name":"usize"},{"name":"splicefflags"}],"output":{"name":"result"}}],[5,"tee","","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"usize"},{"name":"splicefflags"}],"output":{"name":"result"}}],[5,"vmsplice","","",null,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"empty","","Returns an empty set of flags.",5,{"inputs":[],"output":{"name":"splicefflags"}}],[11,"all","","Returns the set containing all flags.",5,{"inputs":[],"output":{"name":"splicefflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",5,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",5,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",5,{"inputs":[{"name":"c_uint"}],"output":{"name":"splicefflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,null],[11,"is_all","","Returns `true` if all flags are currently set.",5,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,null],[11,"insert","","Inserts the specified flags in-place.",5,null],[11,"remove","","Removes the specified flags in-place.",5,null],[11,"toggle","","Toggles the specified flags in-place.",5,null],[11,"bitor","","Returns the union of the two sets of flags.",5,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,null],[11,"bitand","","Returns the intersection between the two sets of flags.",5,null],[11,"sub","","Returns the set difference of the two sets of flags.",5,null],[11,"not","","Returns the complement of this set of flags.",5,null],[11,"from_iter","","",5,{"inputs":[{"name":"t"}],"output":{"name":"splicefflags"}}],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"cmp","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"oflag"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"oflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",6,{"inputs":[{"name":"c_int"}],"output":{"name":"oflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,null],[11,"is_all","","Returns `true` if all flags are currently set.",6,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,null],[11,"insert","","Inserts the specified flags in-place.",6,null],[11,"remove","","Removes the specified flags in-place.",6,null],[11,"toggle","","Toggles the specified flags in-place.",6,null],[11,"bitor","","Returns the union of the two sets of flags.",6,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,null],[11,"bitand","","Returns the intersection between the two sets of flags.",6,null],[11,"sub","","Returns the set difference of the two sets of flags.",6,null],[11,"not","","Returns the complement of this set of flags.",6,null],[11,"from_iter","","",6,{"inputs":[{"name":"t"}],"output":{"name":"oflag"}}],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[11,"empty","","Returns an empty set of flags.",7,{"inputs":[],"output":{"name":"fdflag"}}],[11,"all","","Returns the set containing all flags.",7,{"inputs":[],"output":{"name":"fdflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",7,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",7,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",7,{"inputs":[{"name":"c_int"}],"output":{"name":"fdflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,null],[11,"is_all","","Returns `true` if all flags are currently set.",7,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,null],[11,"insert","","Inserts the specified flags in-place.",7,null],[11,"remove","","Removes the specified flags in-place.",7,null],[11,"toggle","","Toggles the specified flags in-place.",7,null],[11,"bitor","","Returns the union of the two sets of flags.",7,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,null],[11,"bitand","","Returns the intersection between the two sets of flags.",7,null],[11,"sub","","Returns the set difference of the two sets of flags.",7,null],[11,"not","","Returns the complement of this set of flags.",7,null],[11,"from_iter","","",7,{"inputs":[{"name":"t"}],"output":{"name":"fdflag"}}],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"cmp","","",8,null],[11,"hash","","",8,null],[11,"fmt","","",8,null],[11,"empty","","Returns an empty set of flags.",8,{"inputs":[],"output":{"name":"sealflag"}}],[11,"all","","Returns the set containing all flags.",8,{"inputs":[],"output":{"name":"sealflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",8,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",8,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",8,{"inputs":[{"name":"c_int"}],"output":{"name":"sealflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,null],[11,"is_all","","Returns `true` if all flags are currently set.",8,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,null],[11,"insert","","Inserts the specified flags in-place.",8,null],[11,"remove","","Removes the specified flags in-place.",8,null],[11,"toggle","","Toggles the specified flags in-place.",8,null],[11,"bitor","","Returns the union of the two sets of flags.",8,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,null],[11,"bitand","","Returns the intersection between the two sets of flags.",8,null],[11,"sub","","Returns the set difference of the two sets of flags.",8,null],[11,"not","","Returns the complement of this set of flags.",8,null],[11,"from_iter","","",8,{"inputs":[{"name":"t"}],"output":{"name":"sealflag"}}],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"O_NDELAY","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[3,"MntFlags","","",null,null],[5,"mount","","",null,{"inputs":[{"name":"option"},{"name":"p2"},{"name":"option"},{"name":"msflags"},{"name":"option"}],"output":{"name":"result"}}],[5,"umount","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"umount2","","",null,{"inputs":[{"name":"p"},{"name":"mntflags"}],"output":{"name":"result"}}],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_VERBOSE","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_NOSEC","","",null,null],[17,"MS_BORN","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"empty","","Returns an empty set of flags.",9,{"inputs":[],"output":{"name":"msflags"}}],[11,"all","","Returns the set containing all flags.",9,{"inputs":[],"output":{"name":"msflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",9,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",9,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",9,{"inputs":[{"name":"c_ulong"}],"output":{"name":"msflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,null],[11,"is_all","","Returns `true` if all flags are currently set.",9,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,null],[11,"insert","","Inserts the specified flags in-place.",9,null],[11,"remove","","Removes the specified flags in-place.",9,null],[11,"toggle","","Toggles the specified flags in-place.",9,null],[11,"bitor","","Returns the union of the two sets of flags.",9,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,null],[11,"bitand","","Returns the intersection between the two sets of flags.",9,null],[11,"sub","","Returns the set difference of the two sets of flags.",9,null],[11,"not","","Returns the complement of this set of flags.",9,null],[11,"from_iter","","",9,{"inputs":[{"name":"t"}],"output":{"name":"msflags"}}],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"cmp","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"empty","","Returns an empty set of flags.",10,{"inputs":[],"output":{"name":"mntflags"}}],[11,"all","","Returns the set containing all flags.",10,{"inputs":[],"output":{"name":"mntflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",10,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",10,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",10,{"inputs":[{"name":"c_int"}],"output":{"name":"mntflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,null],[11,"is_all","","Returns `true` if all flags are currently set.",10,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,null],[11,"insert","","Inserts the specified flags in-place.",10,null],[11,"remove","","Removes the specified flags in-place.",10,null],[11,"toggle","","Toggles the specified flags in-place.",10,null],[11,"bitor","","Returns the union of the two sets of flags.",10,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,null],[11,"bitand","","Returns the intersection between the two sets of flags.",10,null],[11,"sub","","Returns the set difference of the two sets of flags.",10,null],[11,"not","","Returns the complement of this set of flags.",10,null],[11,"from_iter","","",10,{"inputs":[{"name":"t"}],"output":{"name":"mntflags"}}],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[3,"FdFlag","","",null,null],[3,"MqAttr","","",null,null],[5,"mq_open","","",null,{"inputs":[{"name":"cstring"},{"name":"mq_oflag"},{"name":"mode"},{"name":"option"}],"output":{"name":"result"}}],[5,"mq_unlink","","",null,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[5,"mq_close","","",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored\nReturns the old attributes\nIt is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use",null,{"inputs":[{"name":"mqd_t"},{"name":"mqattr"}],"output":{"name":"result"}}],[5,"mq_set_nonblock","","Convenience function.\nSets the `O_NONBLOCK` attribute for a given message queue descriptor\nReturns the old attributes",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_remove_nonblock","","Convenience function.\nRemoves `O_NONBLOCK` attribute for a given message queue descriptor\nReturns the old attributes",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"FD_CLOEXEC","","",null,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"cmp","","",11,null],[11,"hash","","",11,null],[11,"fmt","","",11,null],[11,"empty","","Returns an empty set of flags.",11,{"inputs":[],"output":{"name":"mq_oflag"}}],[11,"all","","Returns the set containing all flags.",11,{"inputs":[],"output":{"name":"mq_oflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",11,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",11,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",11,{"inputs":[{"name":"c_int"}],"output":{"name":"mq_oflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,null],[11,"is_all","","Returns `true` if all flags are currently set.",11,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",11,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",11,null],[11,"insert","","Inserts the specified flags in-place.",11,null],[11,"remove","","Removes the specified flags in-place.",11,null],[11,"toggle","","Toggles the specified flags in-place.",11,null],[11,"bitor","","Returns the union of the two sets of flags.",11,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",11,null],[11,"bitand","","Returns the intersection between the two sets of flags.",11,null],[11,"sub","","Returns the set difference of the two sets of flags.",11,null],[11,"not","","Returns the complement of this set of flags.",11,null],[11,"from_iter","","",11,{"inputs":[{"name":"t"}],"output":{"name":"mq_oflag"}}],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"partial_cmp","","",12,null],[11,"lt","","",12,null],[11,"le","","",12,null],[11,"gt","","",12,null],[11,"ge","","",12,null],[11,"cmp","","",12,null],[11,"hash","","",12,null],[11,"fmt","","",12,null],[11,"empty","","Returns an empty set of flags.",12,{"inputs":[],"output":{"name":"fdflag"}}],[11,"all","","Returns the set containing all flags.",12,{"inputs":[],"output":{"name":"fdflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",12,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",12,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",12,{"inputs":[{"name":"c_int"}],"output":{"name":"fdflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,null],[11,"is_all","","Returns `true` if all flags are currently set.",12,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,null],[11,"insert","","Inserts the specified flags in-place.",12,null],[11,"remove","","Removes the specified flags in-place.",12,null],[11,"toggle","","Toggles the specified flags in-place.",12,null],[11,"bitor","","Returns the union of the two sets of flags.",12,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12,null],[11,"bitand","","Returns the intersection between the two sets of flags.",12,null],[11,"sub","","Returns the set difference of the two sets of flags.",12,null],[11,"not","","Returns the complement of this set of flags.",12,null],[11,"from_iter","","",12,{"inputs":[{"name":"t"}],"output":{"name":"fdflag"}}],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"new","","",13,{"inputs":[{"name":"c_long"},{"name":"c_long"},{"name":"c_long"},{"name":"c_long"}],"output":{"name":"mqattr"}}],[11,"flags","","",13,null],[0,"poll","nix","",null,null],[3,"PollFd","nix::poll","",null,null],[3,"EventFlags","","",null,null],[5,"poll","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[11,"clone","","",14,null],[11,"new","","",14,{"inputs":[{"name":"c_int"},{"name":"eventflags"},{"name":"eventflags"}],"output":{"name":"pollfd"}}],[11,"revents","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"partial_cmp","","",15,null],[11,"lt","","",15,null],[11,"le","","",15,null],[11,"gt","","",15,null],[11,"ge","","",15,null],[11,"cmp","","",15,null],[11,"hash","","",15,null],[11,"fmt","","",15,null],[11,"empty","","Returns an empty set of flags.",15,{"inputs":[],"output":{"name":"eventflags"}}],[11,"all","","Returns the set containing all flags.",15,{"inputs":[],"output":{"name":"eventflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",15,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",15,{"inputs":[{"name":"c_short"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",15,{"inputs":[{"name":"c_short"}],"output":{"name":"eventflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,null],[11,"is_all","","Returns `true` if all flags are currently set.",15,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",15,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",15,null],[11,"insert","","Inserts the specified flags in-place.",15,null],[11,"remove","","Removes the specified flags in-place.",15,null],[11,"toggle","","Toggles the specified flags in-place.",15,null],[11,"bitor","","Returns the union of the two sets of flags.",15,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",15,null],[11,"bitand","","Returns the intersection between the two sets of flags.",15,null],[11,"sub","","Returns the set difference of the two sets of flags.",15,null],[11,"not","","Returns the complement of this set of flags.",15,null],[11,"from_iter","","",15,{"inputs":[{"name":"t"}],"output":{"name":"eventflags"}}],[0,"net","nix","",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[5,"if_nametoindex","nix::net::if_","Resolve an interface into a interface number.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[3,"CpuSet","","",null,null],[5,"sched_setaffinity","","",null,{"inputs":[{"name":"isize"},{"name":"cpuset"}],"output":{"name":"result"}}],[5,"clone","","",null,null],[5,"unshare","","",null,{"inputs":[{"name":"cloneflags"}],"output":{"name":"result"}}],[5,"setns","","",null,{"inputs":[{"name":"rawfd"},{"name":"cloneflags"}],"output":{"name":"result"}}],[6,"CloneCb","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"cmp","","",16,null],[11,"hash","","",16,null],[11,"fmt","","",16,null],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"cloneflags"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"cloneflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"c_int"}],"output":{"name":"cloneflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,null],[11,"is_all","","Returns `true` if all flags are currently set.",16,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,null],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"bitor","","Returns the union of the two sets of flags.",16,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,null],[11,"bitand","","Returns the intersection between the two sets of flags.",16,null],[11,"sub","","Returns the set difference of the two sets of flags.",16,null],[11,"not","","Returns the complement of this set of flags.",16,null],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"cloneflags"}}],[11,"clone","","",17,null],[11,"new","","",17,{"inputs":[],"output":{"name":"cpuset"}}],[11,"is_set","","",17,null],[11,"set","","",17,null],[11,"unset","","",17,null],[0,"sys","nix","",null,null],[0,"epoll","nix::sys","",null,null],[3,"EpollEventKind","nix::sys::epoll","",null,null],[3,"EpollEvent","","",null,null],[12,"events","","",18,null],[12,"data","","",18,null],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",19,null],[13,"EpollCtlDel","","",19,null],[13,"EpollCtlMod","","",19,null],[5,"epoll_create","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"epoll_ctl","","",null,{"inputs":[{"name":"rawfd"},{"name":"epollop"},{"name":"rawfd"},{"name":"epollevent"}],"output":{"name":"result"}}],[5,"epoll_wait","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"EPOLLET","","",null,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"clone","","",20,null],[11,"partial_cmp","","",20,null],[11,"lt","","",20,null],[11,"le","","",20,null],[11,"gt","","",20,null],[11,"ge","","",20,null],[11,"cmp","","",20,null],[11,"hash","","",20,null],[11,"fmt","","",20,null],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"epolleventkind"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"epolleventkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u32"}],"output":{"name":"epolleventkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,null],[11,"is_all","","Returns `true` if all flags are currently set.",20,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,null],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,null],[11,"bitand","","Returns the intersection between the two sets of flags.",20,null],[11,"sub","","Returns the set difference of the two sets of flags.",20,null],[11,"not","","Returns the complement of this set of flags.",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"epolleventkind"}}],[11,"clone","","",19,null],[11,"clone","","",18,null],[0,"memfd","nix::sys","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[5,"memfd_create","","",null,{"inputs":[{"name":"cstr"},{"name":"memfdcreateflag"}],"output":{"name":"result"}}],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"clone","","",21,null],[11,"partial_cmp","","",21,null],[11,"lt","","",21,null],[11,"le","","",21,null],[11,"gt","","",21,null],[11,"ge","","",21,null],[11,"cmp","","",21,null],[11,"hash","","",21,null],[11,"fmt","","",21,null],[11,"empty","","Returns an empty set of flags.",21,{"inputs":[],"output":{"name":"memfdcreateflag"}}],[11,"all","","Returns the set containing all flags.",21,{"inputs":[],"output":{"name":"memfdcreateflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",21,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",21,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",21,{"inputs":[{"name":"c_uint"}],"output":{"name":"memfdcreateflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,null],[11,"is_all","","Returns `true` if all flags are currently set.",21,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",21,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",21,null],[11,"insert","","Inserts the specified flags in-place.",21,null],[11,"remove","","Removes the specified flags in-place.",21,null],[11,"toggle","","Toggles the specified flags in-place.",21,null],[11,"bitor","","Returns the union of the two sets of flags.",21,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",21,null],[11,"bitand","","Returns the intersection between the two sets of flags.",21,null],[11,"sub","","Returns the set difference of the two sets of flags.",21,null],[11,"not","","Returns the complement of this set of flags.",21,null],[11,"from_iter","","",21,{"inputs":[{"name":"t"}],"output":{"name":"memfdcreateflag"}}],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls",null,null],[5,"ioc_dir","nix::sys::ioctl","Extracts the &quot;direction&quot; (read/write/none) from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u8"}}],[5,"ioc_type","","Extracts the type from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"ioc_nr","","Extracts the ioctl number from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"ioc_size","","Extracts the size from an encoded ioctl command.",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[17,"NRBITS","","",null,null],[17,"TYPEBITS","","",null,null],[17,"NONE","","",null,null],[17,"READ","","",null,null],[17,"WRITE","","",null,null],[17,"SIZEBITS","","",null,null],[17,"DIRBITS","","",null,null],[17,"NRSHIFT","","",null,null],[17,"TYPESHIFT","","",null,null],[17,"SIZESHIFT","","",null,null],[17,"DIRSHIFT","","",null,null],[17,"NRMASK","","",null,null],[17,"TYPEMASK","","",null,null],[17,"SIZEMASK","","",null,null],[17,"DIRMASK","","",null,null],[17,"IN","","",null,null],[17,"OUT","","",null,null],[17,"INOUT","","",null,null],[17,"SIZE_MASK","","",null,null],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"option"},{"name":"usize"}],"output":{"name":"result"}}],[0,"signal","nix::sys","",null,null],[3,"SignalIterator","nix::sys::signal","",null,null],[3,"SaFlags","","",null,null],[3,"SigFlags","","",null,null],[3,"SigSet","","",null,null],[3,"SigAction","","",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",22,null],[13,"SIGINT","","",22,null],[13,"SIGQUIT","","",22,null],[13,"SIGILL","","",22,null],[13,"SIGTRAP","","",22,null],[13,"SIGABRT","","",22,null],[13,"SIGBUS","","",22,null],[13,"SIGFPE","","",22,null],[13,"SIGKILL","","",22,null],[13,"SIGUSR1","","",22,null],[13,"SIGSEGV","","",22,null],[13,"SIGUSR2","","",22,null],[13,"SIGPIPE","","",22,null],[13,"SIGALRM","","",22,null],[13,"SIGTERM","","",22,null],[13,"SIGSTKFLT","","",22,null],[13,"SIGCHLD","","",22,null],[13,"SIGCONT","","",22,null],[13,"SIGSTOP","","",22,null],[13,"SIGTSTP","","",22,null],[13,"SIGTTIN","","",22,null],[13,"SIGTTOU","","",22,null],[13,"SIGURG","","",22,null],[13,"SIGXCPU","","",22,null],[13,"SIGXFSZ","","",22,null],[13,"SIGVTALRM","","",22,null],[13,"SIGPROF","","",22,null],[13,"SIGWINCH","","",22,null],[13,"SIGIO","","",22,null],[13,"SIGPWR","","",22,null],[13,"SIGSYS","","",22,null],[4,"SigHandler","","",null,null],[13,"SigDfl","","",23,null],[13,"SigIgn","","",23,null],[13,"Handler","","",23,null],[13,"SigAction","","",23,null],[5,"sigaction","","",null,{"inputs":[{"name":"signal"},{"name":"sigaction"}],"output":{"name":"result"}}],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the calling thread.",null,{"inputs":[{"name":"sigflags"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[5,"kill","","",null,{"inputs":[{"name":"pid_t"},{"name":"signal"}],"output":{"name":"result"}}],[5,"raise","","",null,{"inputs":[{"name":"signal"}],"output":{"name":"result"}}],[17,"NSIG","","",null,null],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"SIG_SETMASK","","",null,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"next","","",24,null],[11,"iterator","","",22,{"inputs":[],"output":{"name":"signaliterator"}}],[11,"from_c_int","","",22,{"inputs":[{"name":"c_int"}],"output":{"name":"result"}}],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"clone","","",25,null],[11,"partial_cmp","","",25,null],[11,"lt","","",25,null],[11,"le","","",25,null],[11,"gt","","",25,null],[11,"ge","","",25,null],[11,"cmp","","",25,null],[11,"hash","","",25,null],[11,"fmt","","",25,null],[11,"empty","","Returns an empty set of flags.",25,{"inputs":[],"output":{"name":"saflags"}}],[11,"all","","Returns the set containing all flags.",25,{"inputs":[],"output":{"name":"saflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",25,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",25,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",25,{"inputs":[{"name":"c_int"}],"output":{"name":"saflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,null],[11,"is_all","","Returns `true` if all flags are currently set.",25,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25,null],[11,"insert","","Inserts the specified flags in-place.",25,null],[11,"remove","","Removes the specified flags in-place.",25,null],[11,"toggle","","Toggles the specified flags in-place.",25,null],[11,"bitor","","Returns the union of the two sets of flags.",25,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",25,null],[11,"bitand","","Returns the intersection between the two sets of flags.",25,null],[11,"sub","","Returns the set difference of the two sets of flags.",25,null],[11,"not","","Returns the complement of this set of flags.",25,null],[11,"from_iter","","",25,{"inputs":[{"name":"t"}],"output":{"name":"saflags"}}],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"cmp","","",26,null],[11,"hash","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"sigflags"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"sigflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"c_int"}],"output":{"name":"sigflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"sigflags"}}],[11,"clone","","",27,null],[11,"all","","",27,{"inputs":[],"output":{"name":"sigset"}}],[11,"empty","","",27,{"inputs":[],"output":{"name":"sigset"}}],[11,"add","","",27,null],[11,"clear","","",27,null],[11,"remove","","",27,null],[11,"contains","","",27,null],[11,"extend","","",27,null],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the calling thread.",27,{"inputs":[],"output":{"name":"result"}}],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling thread.",27,null],[11,"thread_block","","Adds the set of signals to the signal mask for the calling thread.",27,null],[11,"thread_unblock","","Removes the set of signals from the signal mask for the calling thread.",27,null],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns the old mask.",27,null],[11,"wait","","Suspends execution of the calling thread until one of the signals in the\nsignal mask becomes pending, and returns the accepted signal.",27,null],[11,"as_ref","","",27,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"new","","This function will set or unset the flag `SA_SIGINFO` depending on the\ntype of the `handler` argument.",28,{"inputs":[{"name":"sighandler"},{"name":"saflags"},{"name":"sigset"}],"output":{"name":"sigaction"}}],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"in_addr","nix::sys::socket","",null,null],[12,"s_addr","","",29,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",30,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",31,null],[12,"sa_data","","",31,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",32,null],[12,"sin_port","","",32,null],[12,"sin_addr","","",32,null],[12,"sin_zero","","",32,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",33,null],[12,"sin6_port","","",33,null],[12,"sin6_flowinfo","","",33,null],[12,"sin6_addr","","",33,null],[12,"sin6_scope_id","","",33,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",34,null],[12,"sun_path","","",34,null],[6,"sa_family_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",35,null],[3,"UnixAddr","","A wrapper around `sockaddr_un`. We track the length of `sun_path`,\nbecause it may not be null-terminated (unconnected and abstract\nsockets). Note that the actual sockaddr length is greater by\n`size_of::&lt;sa_family_t&gt;()`.",null,null],[12,"0","","",36,null],[12,"1","","",36,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",37,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",38,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",39,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",40,null],[12,"imr_interface","","",40,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",41,null],[12,"ipv6mr_interface","","",41,null],[3,"MsgFlags","","",null,null],[3,"SockFlag","","",null,null],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to recvmsg. The\nsize and alignment match that of a cmsghdr followed by a T, but the\nfields are not accessible, as the actual types will change on a call\nto recvmsg.",null,null],[3,"RecvMsg","","",null,null],[12,"bytes","","",42,null],[12,"address","","",42,null],[12,"flags","","",42,null],[3,"CmsgIterator","","",null,null],[3,"linger","","",null,null],[12,"l_onoff","","",43,null],[12,"l_linger","","",43,null],[3,"ucred","","",null,null],[4,"AddressFamily","","",null,null],[13,"Unix","","",44,null],[13,"Inet","","",44,null],[13,"Inet6","","",44,null],[13,"Netlink","","",44,null],[13,"Packet","","",44,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",45,null],[13,"Unix","","",45,null],[13,"Netlink","","",45,null],[4,"InetAddr","","",null,null],[13,"V4","","",46,null],[13,"V6","","",46,null],[4,"IpAddr","","",null,null],[13,"V4","","",47,null],[13,"V6","","",47,null],[4,"SockType","","",null,null],[13,"Stream","","",48,null],[13,"Datagram","","",48,null],[13,"SeqPacket","","",48,null],[13,"Raw","","",48,null],[13,"Rdm","","",48,null],[4,"ControlMessage","","A type-safe wrapper around a single control message. More types may\nbe added to this enum; do not exhaustively pattern-match it.\n[Further reading](http://man7.org/linux/man-pages/man3/cmsg.3.html)",null,null],[13,"ScmRights","","A message of type SCM_RIGHTS, containing an array of file\ndescriptors passed between processes. See the description in the\n&quot;Ancillary messages&quot; section of the\n[unix(7) man page](http://man7.org/linux/man-pages/man7/unix.7.html).",49,null],[4,"SockLevel","","The protocol level at which to get / set socket options. Used as an\nargument to `getsockopt` and `setsockopt`.",null,null],[13,"Socket","","",50,null],[13,"Tcp","","",50,null],[13,"Ip","","",50,null],[13,"Ipv6","","",50,null],[13,"Udp","","",50,null],[13,"Netlink","","",50,null],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",51,null],[13,"Write","","Further  transmissions will be disallowed.",51,null],[13,"Both","","Further receptions and transmissions will be disallowed.",51,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly accompanied\nby ancillary data. Optionally direct the message at the given address,\nas with sendto.",null,null],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, and\noptionally receive ancillary data into the provided buffer.\nIf no ancillary data is desired, use () as the type parameter.",null,null],[5,"socket","","Create an endpoint for communication",null,{"inputs":[{"name":"addressfamily"},{"name":"socktype"},{"name":"sockflag"},{"name":"c_int"}],"output":{"name":"result"}}],[5,"socketpair","","Create a pair of connected sockets",null,{"inputs":[{"name":"addressfamily"},{"name":"socktype"},{"name":"c_int"},{"name":"sockflag"}],"output":{"name":"result"}}],[5,"listen","","Listen for connections on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[5,"bind","","Bind a name to a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockaddr"}],"output":{"name":"result"}}],[5,"accept","","Accept a connection on a socket",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"accept4","","Accept a connection on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockflag"}],"output":{"name":"result"}}],[5,"connect","","Initiate a connection on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockaddr"}],"output":{"name":"result"}}],[5,"recv","","Receive data from a connection-oriented socket. Returns the number of\nbytes read",null,null],[5,"recvfrom","","Receive data from a connectionless or connection-oriented socket. Returns\nthe number of bytes read and the socket address of the sender.",null,null],[5,"sendto","","",null,null],[5,"send","","Send data to a connection-oriented socket. Returns the number of bytes read",null,null],[5,"getsockopt","","Get the current value for the requested socket option",null,{"inputs":[{"name":"rawfd"},{"name":"o"}],"output":{"name":"result"}}],[5,"setsockopt","","Sets the value for the requested socket option",null,{"inputs":[{"name":"rawfd"},{"name":"o"},{"name":"val"}],"output":{"name":"result"}}],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"sockaddr_storage_to_addr","","",null,{"inputs":[{"name":"sockaddr_storage"},{"name":"usize"}],"output":{"name":"result"}}],[5,"shutdown","","Shut down part of a full-duplex connection.",null,{"inputs":[{"name":"rawfd"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","","",39,null],[11,"eq","","",39,null],[11,"hash","","",39,null],[11,"new","","",39,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"netlinkaddr"}}],[11,"pid","","",39,null],[11,"groups","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",44,null],[11,"eq","","",44,null],[11,"fmt","","",44,null],[11,"hash","","",44,null],[11,"from_std","","",46,{"inputs":[{"name":"socketaddr"}],"output":{"name":"inetaddr"}}],[11,"new","","",46,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"inetaddr"}}],[11,"ip","","Gets the IP address associated with this socket address.",46,null],[11,"port","","Gets the port number associated with this socket address",46,null],[11,"to_std","","",46,null],[11,"to_str","","",46,null],[11,"eq","","",46,null],[11,"hash","","",46,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",47,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipaddr"}}],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",47,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",47,null],[11,"new","","",37,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"from_std","","",37,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"any","","",37,{"inputs":[],"output":{"name":"ipv4addr"}}],[11,"octets","","",37,null],[11,"to_std","","",37,null],[11,"eq","","",37,null],[11,"hash","","",37,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",38,null],[11,"new","","",38,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"from_std","","",38,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Return the eight 16-bit segments that make up this address",38,null],[11,"to_std","","",38,null],[11,"fmt","","",38,null],[11,"new","","Create a new sockaddr_un representing a filesystem path.",36,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_abstract","","Create a new sockaddr_un representing an address in the\n&quot;abstract namespace&quot;. This is a Linux-specific extension,\nprimarily used to allow chrooted processes to communicate with\nspecific daemons.",36,null],[11,"path","","If this address represents a filesystem path, return that path.",36,null],[11,"eq","","",36,null],[11,"hash","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"new_inet","","",45,{"inputs":[{"name":"inetaddr"}],"output":{"name":"sockaddr"}}],[11,"new_unix","","",45,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_netlink","","",45,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"sockaddr"}}],[11,"family","","",45,null],[11,"to_str","","",45,null],[11,"as_ffi_pair","","",45,null],[11,"eq","","",45,null],[11,"hash","","",45,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"clone","","",52,null],[11,"partial_cmp","","",52,null],[11,"lt","","",52,null],[11,"le","","",52,null],[11,"gt","","",52,null],[11,"ge","","",52,null],[11,"cmp","","",52,null],[11,"hash","","",52,null],[11,"fmt","","",52,null],[11,"empty","","Returns an empty set of flags.",52,{"inputs":[],"output":{"name":"msgflags"}}],[11,"all","","Returns the set containing all flags.",52,{"inputs":[],"output":{"name":"msgflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",52,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",52,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",52,{"inputs":[{"name":"c_int"}],"output":{"name":"msgflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",52,null],[11,"is_all","","Returns `true` if all flags are currently set.",52,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",52,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",52,null],[11,"insert","","Inserts the specified flags in-place.",52,null],[11,"remove","","Removes the specified flags in-place.",52,null],[11,"toggle","","Toggles the specified flags in-place.",52,null],[11,"bitor","","Returns the union of the two sets of flags.",52,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",52,null],[11,"bitand","","Returns the intersection between the two sets of flags.",52,null],[11,"sub","","Returns the set difference of the two sets of flags.",52,null],[11,"not","","Returns the complement of this set of flags.",52,null],[11,"from_iter","","",52,{"inputs":[{"name":"t"}],"output":{"name":"msgflags"}}],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"new","","",40,{"inputs":[{"name":"ipv4addr"},{"name":"option"}],"output":{"name":"ip_mreq"}}],[11,"new","","",41,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6_mreq"}}],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"OriginalDst","","",null,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"set","","",53,null],[11,"get","","",53,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"set","","",54,null],[11,"get","","",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"set","","",55,null],[11,"get","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"set","","",56,null],[11,"get","","",56,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"set","","",57,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"set","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"set","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"set","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"set","","",61,null],[11,"get","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"set","","",62,null],[11,"get","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"set","","",63,null],[11,"get","","",63,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"set","","",64,null],[11,"get","","",64,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"set","","",65,null],[11,"get","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"set","","",66,null],[11,"get","","",66,null],[11,"clone","","",67,null],[11,"fmt","","",67,null],[11,"get","","",67,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"set","","",68,null],[11,"get","","",68,null],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"get","","",69,null],[11,"clone","","",70,null],[11,"fmt","","",70,null],[11,"set","","",70,null],[11,"get","","",70,null],[11,"clone","","",71,null],[11,"fmt","","",71,null],[11,"set","","",71,null],[11,"get","","",71,null],[11,"clone","","",72,null],[11,"fmt","","",72,null],[11,"set","","",72,null],[11,"get","","",72,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"set","","",73,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"set","","",74,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"get","","",75,null],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"get","","",76,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"get","","",77,null],[6,"IpMulticastTtl","nix::sys::socket","",null,null],[6,"InAddrT","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_PACKET","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[8,"GetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument\nto `getsockopt`",null,null],[16,"Val","","",78,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument\nto `setsockopt`",null,null],[16,"Val","","",79,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"fmt","","",48,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"partial_cmp","","",80,null],[11,"lt","","",80,null],[11,"le","","",80,null],[11,"gt","","",80,null],[11,"ge","","",80,null],[11,"cmp","","",80,null],[11,"hash","","",80,null],[11,"fmt","","",80,null],[11,"empty","","Returns an empty set of flags.",80,{"inputs":[],"output":{"name":"sockflag"}}],[11,"all","","Returns the set containing all flags.",80,{"inputs":[],"output":{"name":"sockflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",80,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",80,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",80,{"inputs":[{"name":"c_int"}],"output":{"name":"sockflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",80,null],[11,"is_all","","Returns `true` if all flags are currently set.",80,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",80,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",80,null],[11,"insert","","Inserts the specified flags in-place.",80,null],[11,"remove","","Removes the specified flags in-place.",80,null],[11,"toggle","","Toggles the specified flags in-place.",80,null],[11,"bitor","","Returns the union of the two sets of flags.",80,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",80,null],[11,"bitand","","Returns the intersection between the two sets of flags.",80,null],[11,"sub","","Returns the set difference of the two sets of flags.",80,null],[11,"not","","Returns the complement of this set of flags.",80,null],[11,"from_iter","","",80,{"inputs":[{"name":"t"}],"output":{"name":"sockflag"}}],[11,"new","","Create a CmsgSpace&lt;T&gt;. The structure is used only for space, so\nthe fields are uninitialized.",81,{"inputs":[],"output":{"name":"self"}}],[11,"cmsgs","","Iterate over the valid control messages pointed to by this\nmsghdr.",42,null],[11,"next","","",82,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"clone","","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"fmt","","",83,null],[11,"clone","","",51,null],[11,"eq","","",51,null],[11,"fmt","","",51,null],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",84,null],[12,"st_ino","","",84,null],[12,"st_nlink","","",84,null],[12,"st_mode","","",84,null],[12,"st_uid","","",84,null],[12,"st_gid","","",84,null],[12,"st_rdev","","",84,null],[12,"st_size","","",84,null],[12,"st_blksize","","",84,null],[12,"st_blocks","","",84,null],[12,"st_atime","","",84,null],[12,"st_atime_nsec","","",84,null],[12,"st_mtime","","",84,null],[12,"st_mtime_nsec","","",84,null],[12,"st_ctime","","",84,null],[12,"st_ctime_nsec","","",84,null],[3,"SFlag","","",null,null],[3,"Mode","","",null,null],[5,"mknod","","",null,{"inputs":[{"name":"p"},{"name":"sflag"},{"name":"mode"},{"name":"dev_t"}],"output":{"name":"result"}}],[5,"mkdev","","",null,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"dev_t"}}],[5,"umask","","",null,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[5,"stat","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"lstat","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fstat","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IROTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"clone","","",85,null],[11,"partial_cmp","","",85,null],[11,"lt","","",85,null],[11,"le","","",85,null],[11,"gt","","",85,null],[11,"ge","","",85,null],[11,"cmp","","",85,null],[11,"hash","","",85,null],[11,"fmt","","",85,null],[11,"empty","","Returns an empty set of flags.",85,{"inputs":[],"output":{"name":"sflag"}}],[11,"all","","Returns the set containing all flags.",85,{"inputs":[],"output":{"name":"sflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",85,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",85,{"inputs":[{"name":"mode_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",85,{"inputs":[{"name":"mode_t"}],"output":{"name":"sflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,null],[11,"is_all","","Returns `true` if all flags are currently set.",85,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",85,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",85,null],[11,"insert","","Inserts the specified flags in-place.",85,null],[11,"remove","","Removes the specified flags in-place.",85,null],[11,"toggle","","Toggles the specified flags in-place.",85,null],[11,"bitor","","Returns the union of the two sets of flags.",85,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",85,null],[11,"bitand","","Returns the intersection between the two sets of flags.",85,null],[11,"sub","","Returns the set difference of the two sets of flags.",85,null],[11,"not","","Returns the complement of this set of flags.",85,null],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"sflag"}}],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"partial_cmp","","",86,null],[11,"lt","","",86,null],[11,"le","","",86,null],[11,"gt","","",86,null],[11,"ge","","",86,null],[11,"cmp","","",86,null],[11,"hash","","",86,null],[11,"fmt","","",86,null],[11,"empty","","Returns an empty set of flags.",86,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",86,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",86,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",86,{"inputs":[{"name":"mode_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",86,{"inputs":[{"name":"mode_t"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,null],[11,"is_all","","Returns `true` if all flags are currently set.",86,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",86,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",86,null],[11,"insert","","Inserts the specified flags in-place.",86,null],[11,"remove","","Removes the specified flags in-place.",86,null],[11,"toggle","","Toggles the specified flags in-place.",86,null],[11,"bitor","","Returns the union of the two sets of flags.",86,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",86,null],[11,"bitand","","Returns the intersection between the two sets of flags.",86,null],[11,"sub","","Returns the set difference of the two sets of flags.",86,null],[11,"not","","Returns the complement of this set of flags.",86,null],[11,"from_iter","","",86,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[0,"syscall","nix::sys","Indirect system call",null,null],[5,"syscall","nix::sys::syscall","",null,null],[6,"Syscall","","",null,null],[7,"SYSPIVOTROOT","","",null,null],[7,"MEMFD_CREATE","","",null,null],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",87,null],[13,"RB_KEXEC","","",87,null],[13,"RB_POWER_OFF","","",87,null],[13,"RB_AUTOBOOT","","",87,null],[13,"RB_SW_SUSPEND","","",87,null],[5,"reboot","","",null,{"inputs":[{"name":"rebootmode"}],"output":{"name":"result"}}],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,{"inputs":[{"name":"bool"}],"output":{"name":"result"}}],[11,"clone","","",87,null],[11,"fmt","","",87,null],[11,"eq","","",87,null],[0,"termios","nix::sys","",null,null],[3,"Termios","nix::sys::termios","",null,null],[12,"c_iflag","","",88,null],[12,"c_oflag","","",88,null],[12,"c_cflag","","",88,null],[12,"c_lflag","","",88,null],[12,"c_line","","",88,null],[12,"c_cc","","",88,null],[12,"c_ispeed","","",88,null],[12,"c_ospeed","","",88,null],[3,"InputFlags","","",null,null],[3,"OutputFlags","","",null,null],[3,"ControlFlags","","",null,null],[3,"LocalFlags","","",null,null],[4,"SetArg","","",null,null],[13,"TCSANOW","","",89,null],[13,"TCSADRAIN","","",89,null],[13,"TCSAFLUSH","","",89,null],[4,"FlushArg","","",null,null],[13,"TCIFLUSH","","",90,null],[13,"TCOFLUSH","","",90,null],[13,"TCIOFLUSH","","",90,null],[4,"FlowArg","","",null,null],[13,"TCOOFF","","",91,null],[13,"TCOON","","",91,null],[13,"TCIOFF","","",91,null],[13,"TCION","","",91,null],[5,"cfgetispeed","","",null,{"inputs":[{"name":"termios"}],"output":{"name":"speed_t"}}],[5,"cfgetospeed","","",null,{"inputs":[{"name":"termios"}],"output":{"name":"speed_t"}}],[5,"cfsetispeed","","",null,{"inputs":[{"name":"termios"},{"name":"speed_t"}],"output":{"name":"result"}}],[5,"cfsetospeed","","",null,{"inputs":[{"name":"termios"},{"name":"speed_t"}],"output":{"name":"result"}}],[5,"tcgetattr","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"tcsetattr","","",null,{"inputs":[{"name":"rawfd"},{"name":"setarg"},{"name":"termios"}],"output":{"name":"result"}}],[5,"tcdrain","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"tcflow","","",null,{"inputs":[{"name":"rawfd"},{"name":"flowarg"}],"output":{"name":"result"}}],[5,"tcflush","","",null,{"inputs":[{"name":"rawfd"},{"name":"flusharg"}],"output":{"name":"result"}}],[5,"tcsendbreak","","",null,{"inputs":[{"name":"rawfd"},{"name":"c_int"}],"output":{"name":"result"}}],[11,"clone","","",88,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"clone","","",92,null],[11,"partial_cmp","","",92,null],[11,"lt","","",92,null],[11,"le","","",92,null],[11,"gt","","",92,null],[11,"ge","","",92,null],[11,"cmp","","",92,null],[11,"hash","","",92,null],[11,"fmt","","",92,null],[11,"empty","","Returns an empty set of flags.",92,{"inputs":[],"output":{"name":"inputflags"}}],[11,"all","","Returns the set containing all flags.",92,{"inputs":[],"output":{"name":"inputflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",92,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",92,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"inputflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,null],[11,"is_all","","Returns `true` if all flags are currently set.",92,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,null],[11,"insert","","Inserts the specified flags in-place.",92,null],[11,"remove","","Removes the specified flags in-place.",92,null],[11,"toggle","","Toggles the specified flags in-place.",92,null],[11,"bitor","","Returns the union of the two sets of flags.",92,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,null],[11,"bitand","","Returns the intersection between the two sets of flags.",92,null],[11,"sub","","Returns the set difference of the two sets of flags.",92,null],[11,"not","","Returns the complement of this set of flags.",92,null],[11,"from_iter","","",92,{"inputs":[{"name":"t"}],"output":{"name":"inputflags"}}],[11,"eq","","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"partial_cmp","","",93,null],[11,"lt","","",93,null],[11,"le","","",93,null],[11,"gt","","",93,null],[11,"ge","","",93,null],[11,"cmp","","",93,null],[11,"hash","","",93,null],[11,"fmt","","",93,null],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[],"output":{"name":"outputflags"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[],"output":{"name":"outputflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",93,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"outputflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,null],[11,"is_all","","Returns `true` if all flags are currently set.",93,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,null],[11,"insert","","Inserts the specified flags in-place.",93,null],[11,"remove","","Removes the specified flags in-place.",93,null],[11,"toggle","","Toggles the specified flags in-place.",93,null],[11,"bitor","","Returns the union of the two sets of flags.",93,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,null],[11,"bitand","","Returns the intersection between the two sets of flags.",93,null],[11,"sub","","Returns the set difference of the two sets of flags.",93,null],[11,"not","","Returns the complement of this set of flags.",93,null],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"outputflags"}}],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"clone","","",94,null],[11,"partial_cmp","","",94,null],[11,"lt","","",94,null],[11,"le","","",94,null],[11,"gt","","",94,null],[11,"ge","","",94,null],[11,"cmp","","",94,null],[11,"hash","","",94,null],[11,"fmt","","",94,null],[11,"empty","","Returns an empty set of flags.",94,{"inputs":[],"output":{"name":"controlflags"}}],[11,"all","","Returns the set containing all flags.",94,{"inputs":[],"output":{"name":"controlflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",94,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",94,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",94,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"controlflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,null],[11,"is_all","","Returns `true` if all flags are currently set.",94,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,null],[11,"insert","","Inserts the specified flags in-place.",94,null],[11,"remove","","Removes the specified flags in-place.",94,null],[11,"toggle","","Toggles the specified flags in-place.",94,null],[11,"bitor","","Returns the union of the two sets of flags.",94,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94,null],[11,"bitand","","Returns the intersection between the two sets of flags.",94,null],[11,"sub","","Returns the set difference of the two sets of flags.",94,null],[11,"not","","Returns the complement of this set of flags.",94,null],[11,"from_iter","","",94,{"inputs":[{"name":"t"}],"output":{"name":"controlflags"}}],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"clone","","",95,null],[11,"partial_cmp","","",95,null],[11,"lt","","",95,null],[11,"le","","",95,null],[11,"gt","","",95,null],[11,"ge","","",95,null],[11,"cmp","","",95,null],[11,"hash","","",95,null],[11,"fmt","","",95,null],[11,"empty","","Returns an empty set of flags.",95,{"inputs":[],"output":{"name":"localflags"}}],[11,"all","","Returns the set containing all flags.",95,{"inputs":[],"output":{"name":"localflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",95,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",95,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",95,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"localflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,null],[11,"is_all","","Returns `true` if all flags are currently set.",95,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,null],[11,"insert","","Inserts the specified flags in-place.",95,null],[11,"remove","","Removes the specified flags in-place.",95,null],[11,"toggle","","Toggles the specified flags in-place.",95,null],[11,"bitor","","Returns the union of the two sets of flags.",95,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95,null],[11,"bitand","","Returns the intersection between the two sets of flags.",95,null],[11,"sub","","Returns the set difference of the two sets of flags.",95,null],[11,"not","","Returns the complement of this set of flags.",95,null],[11,"from_iter","","",95,{"inputs":[{"name":"t"}],"output":{"name":"localflags"}}],[11,"clone","","",89,null],[11,"clone","","",90,null],[11,"clone","","",91,null],[6,"tcflag_t","","",null,null],[6,"cc_t","","",null,null],[6,"speed_t","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"NCCS","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[5,"uname","","",null,{"inputs":[],"output":{"name":"utsname"}}],[11,"clone","","",96,null],[11,"sysname","","",96,null],[11,"nodename","","",96,null],[11,"release","","",96,null],[11,"version","","",96,null],[11,"machine","","",96,null],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[4,"WaitStatus","","",null,null],[13,"Exited","","",97,null],[13,"Signaled","","",97,null],[13,"Stopped","","",97,null],[13,"Continued","","",97,null],[13,"StillAlive","","",97,null],[5,"waitpid","","",null,{"inputs":[{"name":"pid_t"},{"name":"option"}],"output":{"name":"result"}}],[5,"wait","","",null,{"inputs":[],"output":{"name":"result"}}],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"clone","","",98,null],[11,"partial_cmp","","",98,null],[11,"lt","","",98,null],[11,"le","","",98,null],[11,"gt","","",98,null],[11,"ge","","",98,null],[11,"cmp","","",98,null],[11,"hash","","",98,null],[11,"fmt","","",98,null],[11,"empty","","Returns an empty set of flags.",98,{"inputs":[],"output":{"name":"waitpidflag"}}],[11,"all","","Returns the set containing all flags.",98,{"inputs":[],"output":{"name":"waitpidflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",98,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",98,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",98,{"inputs":[{"name":"c_int"}],"output":{"name":"waitpidflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,null],[11,"is_all","","Returns `true` if all flags are currently set.",98,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,null],[11,"insert","","Inserts the specified flags in-place.",98,null],[11,"remove","","Removes the specified flags in-place.",98,null],[11,"toggle","","Toggles the specified flags in-place.",98,null],[11,"bitor","","Returns the union of the two sets of flags.",98,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",98,null],[11,"bitand","","Returns the intersection between the two sets of flags.",98,null],[11,"sub","","Returns the set difference of the two sets of flags.",98,null],[11,"not","","Returns the complement of this set of flags.",98,null],[11,"from_iter","","",98,{"inputs":[{"name":"t"}],"output":{"name":"waitpidflag"}}],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",97,null],[0,"mman","nix::sys","",null,null],[3,"MapFlags","nix::sys::mman","",null,null],[3,"MsFlags","","",null,null],[3,"ProtFlags","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically\na higher-level abstraction will hide the unsafe interactions with the mmap&#39;d region.",null,null],[5,"munmap","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,{"inputs":[{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"name":"result"}}],[5,"shm_unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"clone","","",99,null],[11,"partial_cmp","","",99,null],[11,"lt","","",99,null],[11,"le","","",99,null],[11,"gt","","",99,null],[11,"ge","","",99,null],[11,"cmp","","",99,null],[11,"hash","","",99,null],[11,"fmt","","",99,null],[11,"empty","","Returns an empty set of flags.",99,{"inputs":[],"output":{"name":"mapflags"}}],[11,"all","","Returns the set containing all flags.",99,{"inputs":[],"output":{"name":"mapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",99,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",99,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",99,{"inputs":[{"name":"c_int"}],"output":{"name":"mapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,null],[11,"is_all","","Returns `true` if all flags are currently set.",99,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",99,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",99,null],[11,"insert","","Inserts the specified flags in-place.",99,null],[11,"remove","","Removes the specified flags in-place.",99,null],[11,"toggle","","Toggles the specified flags in-place.",99,null],[11,"bitor","","Returns the union of the two sets of flags.",99,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",99,null],[11,"bitand","","Returns the intersection between the two sets of flags.",99,null],[11,"sub","","Returns the set difference of the two sets of flags.",99,null],[11,"not","","Returns the complement of this set of flags.",99,null],[11,"from_iter","","",99,{"inputs":[{"name":"t"}],"output":{"name":"mapflags"}}],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"clone","","",100,null],[11,"partial_cmp","","",100,null],[11,"lt","","",100,null],[11,"le","","",100,null],[11,"gt","","",100,null],[11,"ge","","",100,null],[11,"cmp","","",100,null],[11,"hash","","",100,null],[11,"fmt","","",100,null],[11,"empty","","Returns an empty set of flags.",100,{"inputs":[],"output":{"name":"msflags"}}],[11,"all","","Returns the set containing all flags.",100,{"inputs":[],"output":{"name":"msflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",100,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",100,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",100,{"inputs":[{"name":"c_int"}],"output":{"name":"msflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,null],[11,"is_all","","Returns `true` if all flags are currently set.",100,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",100,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",100,null],[11,"insert","","Inserts the specified flags in-place.",100,null],[11,"remove","","Removes the specified flags in-place.",100,null],[11,"toggle","","Toggles the specified flags in-place.",100,null],[11,"bitor","","Returns the union of the two sets of flags.",100,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",100,null],[11,"bitand","","Returns the intersection between the two sets of flags.",100,null],[11,"sub","","Returns the set difference of the two sets of flags.",100,null],[11,"not","","Returns the complement of this set of flags.",100,null],[11,"from_iter","","",100,{"inputs":[{"name":"t"}],"output":{"name":"msflags"}}],[6,"MmapAdvise","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"clone","","",101,null],[11,"partial_cmp","","",101,null],[11,"lt","","",101,null],[11,"le","","",101,null],[11,"gt","","",101,null],[11,"ge","","",101,null],[11,"cmp","","",101,null],[11,"hash","","",101,null],[11,"fmt","","",101,null],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"protflags"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"protflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",101,{"inputs":[{"name":"c_int"}],"output":{"name":"protflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,null],[11,"is_all","","Returns `true` if all flags are currently set.",101,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,null],[11,"insert","","Inserts the specified flags in-place.",101,null],[11,"remove","","Removes the specified flags in-place.",101,null],[11,"toggle","","Toggles the specified flags in-place.",101,null],[11,"bitor","","Returns the union of the two sets of flags.",101,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,null],[11,"bitand","","Returns the intersection between the two sets of flags.",101,null],[11,"sub","","Returns the set difference of the two sets of flags.",101,null],[11,"not","","Returns the complement of this set of flags.",101,null],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"protflags"}}],[0,"uio","nix::sys","",null,null],[3,"IoVec","nix::sys::uio","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"pwrite","","",null,null],[5,"pread","","",null,null],[11,"as_slice","","",102,null],[11,"from_slice","","",102,null],[11,"from_mut_slice","","",102,null],[0,"time","nix::sys","",null,null],[3,"TimeVal","nix::sys::time","",null,null],[12,"tv_sec","","",103,null],[12,"tv_usec","","",103,null],[11,"clone","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"partial_cmp","","",103,null],[11,"lt","","",103,null],[11,"le","","",103,null],[11,"gt","","",103,null],[11,"ge","","",103,null],[11,"cmp","","",103,null],[11,"fmt","","",103,null],[11,"zero","","",103,{"inputs":[],"output":{"name":"timeval"}}],[11,"hours","","",103,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"minutes","","",103,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"seconds","","",103,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"milliseconds","","",103,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",103,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"num_hours","","",103,null],[11,"num_minutes","","",103,null],[11,"num_seconds","","",103,null],[11,"num_milliseconds","","",103,null],[11,"num_microseconds","","",103,null],[11,"neg","","",103,null],[11,"add","","",103,null],[11,"sub","","",103,null],[11,"mul","","",103,null],[11,"div","","",103,null],[11,"fmt","","",103,null],[0,"ptrace","nix::sys","",null,null],[5,"ptrace","nix::sys::ptrace","",null,null],[5,"ptrace_setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",null,{"inputs":[{"name":"pid_t"},{"name":"ptraceoptions"}],"output":{"name":"result"}}],[0,"ptrace","","",null,null],[6,"PtraceRequest","nix::sys::ptrace::ptrace","",null,null],[6,"PtraceEvent","","",null,null],[6,"PtraceOptions","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[0,"select","nix::sys","",null,null],[3,"FdSet","nix::sys::select","",null,null],[5,"select","","",null,{"inputs":[{"name":"c_int"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[17,"FD_SETSIZE","","",null,null],[11,"clone","","",104,null],[11,"new","","",104,{"inputs":[],"output":{"name":"fdset"}}],[11,"insert","","",104,null],[11,"remove","","",104,null],[11,"contains","","",104,null],[11,"clear","","",104,null],[0,"quota","nix::sys","",null,null],[5,"quotactl_on","nix::sys::quota","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"quotafmt"},{"name":"p"}],"output":{"name":"result"}}],[5,"quotactl_off","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"}],"output":{"name":"result"}}],[5,"quotactl_sync","","",null,{"inputs":[{"name":"quotatype"},{"name":"option"}],"output":{"name":"result"}}],[5,"quotactl_get","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"c_int"},{"name":"dqblk"}],"output":{"name":"result"}}],[5,"quotactl_set","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"c_int"},{"name":"dqblk"}],"output":{"name":"result"}}],[0,"quota","","",null,null],[3,"QuotaCmd","nix::sys::quota::quota","",null,null],[12,"0","","",105,null],[12,"1","","",105,null],[3,"QuotaValidFlags","","",null,null],[3,"Dqblk","","",null,null],[12,"bhardlimit","","",106,null],[12,"bsoftlimit","","",106,null],[12,"curspace","","",106,null],[12,"ihardlimit","","",106,null],[12,"isoftlimit","","",106,null],[12,"curinodes","","",106,null],[12,"btime","","",106,null],[12,"itime","","",106,null],[12,"valid","","",106,null],[6,"QuotaSubCmd","","",null,null],[6,"QuotaType","","",null,null],[6,"QuotaFmt","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[11,"as_int","","",105,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"partial_cmp","","",107,null],[11,"lt","","",107,null],[11,"le","","",107,null],[11,"gt","","",107,null],[11,"ge","","",107,null],[11,"cmp","","",107,null],[11,"hash","","",107,null],[11,"default","","",107,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"fmt","","",107,null],[11,"empty","","Returns an empty set of flags.",107,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"all","","Returns the set containing all flags.",107,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",107,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",107,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",107,{"inputs":[{"name":"u32"}],"output":{"name":"quotavalidflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,null],[11,"is_all","","Returns `true` if all flags are currently set.",107,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",107,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",107,null],[11,"insert","","Inserts the specified flags in-place.",107,null],[11,"remove","","Removes the specified flags in-place.",107,null],[11,"toggle","","Toggles the specified flags in-place.",107,null],[11,"bitor","","Returns the union of the two sets of flags.",107,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",107,null],[11,"bitand","","Returns the intersection between the two sets of flags.",107,null],[11,"sub","","Returns the set difference of the two sets of flags.",107,null],[11,"not","","Returns the complement of this set of flags.",107,null],[11,"from_iter","","",107,{"inputs":[{"name":"t"}],"output":{"name":"quotavalidflags"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"dqblk"}}],[11,"fmt","","",106,null],[11,"clone","","",106,null],[0,"statfs","nix::sys","",null,null],[5,"statfs","nix::sys::statfs","",null,{"inputs":[{"name":"p"},{"name":"statfs"}],"output":{"name":"result"}}],[5,"fstatfs","","",null,{"inputs":[{"name":"t"},{"name":"statfs"}],"output":{"name":"result"}}],[0,"vfs","","",null,null],[3,"Statfs","nix::sys::statfs::vfs","",null,null],[12,"f_type","","",108,null],[12,"f_bsize","","",108,null],[12,"f_blocks","","",108,null],[12,"f_bfree","","",108,null],[12,"f_bavail","","",108,null],[12,"f_files","","",108,null],[12,"f_ffree","","",108,null],[12,"f_fsid","","",108,null],[12,"f_namelen","","",108,null],[12,"f_frsize","","",108,null],[12,"f_spare","","",108,null],[0,"hwdep","","",null,null],[6,"FsType","nix::sys::statfs::vfs::hwdep","",null,null],[6,"BlockSize","","",null,null],[6,"NameLen","","",null,null],[6,"FragmentSize","","",null,null],[6,"SwordType","","",null,null],[17,"ADFS_SUPER_MAGIC","nix::sys::statfs::vfs","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"BEFS_SUPER_MAGIC","","",null,null],[17,"BFS_MAGIC","","",null,null],[17,"CIFS_MAGIC_NUMBER","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"COH_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEVFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT_SUPER_MAGIC","","",null,null],[17,"EXT2_OLD_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"JFS_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NTFS_SB_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"ROMFS_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSV2_SUPER_MAGIC","","",null,null],[17,"SYSV4_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"UFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VXFS_SUPER_MAGIC","","",null,null],[17,"XENIX_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"_XIAFS_SUPER_MAGIC","","",null,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[0,"statvfs","nix::sys","FFI for statvfs functions",null,null],[5,"statvfs","nix::sys::statvfs","Fill an existing `Statvfs` object with information about the `path`",null,{"inputs":[{"name":"p"},{"name":"statvfs"}],"output":{"name":"result"}}],[5,"fstatvfs","","Fill an existing `Statvfs` object with information about `fd`",null,{"inputs":[{"name":"t"},{"name":"statvfs"}],"output":{"name":"result"}}],[0,"vfs","","Structs related to the `statvfs` and `fstatvfs` functions",null,null],[3,"FsFlags","nix::sys::statvfs::vfs","Mount Flags",null,null],[3,"Statvfs","","The posix statvfs struct",null,null],[12,"f_bsize","","Filesystem block size. This is the value that will lead to\nmost efficient use of the filesystem",109,null],[12,"f_frsize","","Fragment Size -- actual minimum unit of allocation on this\nfilesystem",109,null],[12,"f_blocks","","Total number of blocks on the filesystem",109,null],[12,"f_bfree","","Number of unused blocks on the filesystem, including those\nreserved for root",109,null],[12,"f_bavail","","Number of blocks available to non-root users",109,null],[12,"f_files","","Total number of inodes available on the filesystem",109,null],[12,"f_ffree","","Number of inodes available on the filesystem",109,null],[12,"f_favail","","Number of inodes available to non-root users",109,null],[12,"f_fsid","","File System ID",109,null],[12,"f_flag","","Mount Flags",109,null],[12,"f_namemax","","Maximum filename length",109,null],[17,"RDONLY","","Read Only",null,null],[17,"NOSUID","","Do not allow the set-uid bits to have an effect",null,null],[17,"NODEV","","Do not interpret character or block-special devices",null,null],[17,"NOEXEC","","Do not allow execution of binaries on the filesystem",null,null],[17,"SYNCHRONOUS","","All IO should be done synchronously",null,null],[17,"MANDLOCK","","Allow mandatory locks on the filesystem",null,null],[17,"WRITE","","",null,null],[17,"APPEND","","",null,null],[17,"IMMUTABLE","","",null,null],[17,"NOATIME","","Do not update access times on files",null,null],[17,"NODIRATIME","","Do not update access times on files",null,null],[17,"RELATIME","","Update access time relative to modify/change time",null,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"partial_cmp","","",110,null],[11,"lt","","",110,null],[11,"le","","",110,null],[11,"gt","","",110,null],[11,"ge","","",110,null],[11,"cmp","","",110,null],[11,"hash","","",110,null],[11,"default","","",110,{"inputs":[],"output":{"name":"fsflags"}}],[11,"fmt","","",110,null],[11,"empty","","Returns an empty set of flags.",110,{"inputs":[],"output":{"name":"fsflags"}}],[11,"all","","Returns the set containing all flags.",110,{"inputs":[],"output":{"name":"fsflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",110,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",110,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",110,{"inputs":[{"name":"c_ulong"}],"output":{"name":"fsflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,null],[11,"is_all","","Returns `true` if all flags are currently set.",110,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",110,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",110,null],[11,"insert","","Inserts the specified flags in-place.",110,null],[11,"remove","","Removes the specified flags in-place.",110,null],[11,"toggle","","Toggles the specified flags in-place.",110,null],[11,"bitor","","Returns the union of the two sets of flags.",110,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",110,null],[11,"bitand","","Returns the intersection between the two sets of flags.",110,null],[11,"sub","","Returns the set difference of the two sets of flags.",110,null],[11,"not","","Returns the complement of this set of flags.",110,null],[11,"from_iter","","",110,{"inputs":[{"name":"t"}],"output":{"name":"fsflags"}}],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"for_path","","Create a new `Statvfs` object and fill it with information about\nthe mount that contains `path`",109,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"update_with_path","","Replace information in this struct with information about `path`",109,null],[11,"for_fd","","Create a new `Statvfs` object and fill it with information from fd",109,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"update_with_fd","","Replace information in this struct with information about `fd`",109,null],[11,"default","","Create a statvfs object initialized to all zeros",109,{"inputs":[],"output":{"name":"self"}}],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"clone","","",111,null],[11,"get","","",111,{"inputs":[],"output":{"name":"result"}}],[11,"set","","",111,null],[11,"sigmask_mut","","",111,null],[11,"sigmask","","",111,null],[0,"unistd","nix","Standard symbolic constants and types",null,null],[4,"ForkResult","nix::unistd","",null,null],[13,"Parent","","",112,null],[12,"child","nix::unistd::ForkResult","",112,null],[13,"Child","nix::unistd","",112,null],[4,"Whence","","",null,null],[13,"SeekSet","","",113,null],[13,"SeekCur","","",113,null],[13,"SeekEnd","","",113,null],[13,"SeekData","","",113,null],[13,"SeekHole","","",113,null],[5,"pivot_root","","",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":{"name":"result"}}],[5,"fork","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"getpid","","",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"getppid","","",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"setpgid","","",null,{"inputs":[{"name":"pid_t"},{"name":"pid_t"}],"output":{"name":"result"}}],[5,"gettid","","",null,{"inputs":[],"output":{"name":"pid_t"}}],[5,"dup","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"dup2","","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"}],"output":{"name":"result"}}],[5,"dup3","","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"oflag"}],"output":{"name":"result"}}],[5,"chdir","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"mkdir","","Creates new directory `path` with access rights `mode`.",null,{"inputs":[{"name":"p"},{"name":"mode"}],"output":{"name":"result"}}],[5,"getcwd","","Returns the current directory as a PathBuf",null,{"inputs":[],"output":{"name":"result"}}],[5,"chown","","",null,{"inputs":[{"name":"p"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"daemon","","",null,{"inputs":[{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[5,"sethostname","","",null,null],[5,"gethostname","","",null,null],[5,"close","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"read","","",null,null],[5,"write","","",null,null],[5,"lseek","","",null,{"inputs":[{"name":"rawfd"},{"name":"off_t"},{"name":"whence"}],"output":{"name":"result"}}],[5,"lseek64","","",null,{"inputs":[{"name":"rawfd"},{"name":"off64_t"},{"name":"whence"}],"output":{"name":"result"}}],[5,"pipe","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"pipe2","","",null,{"inputs":[{"name":"oflag"}],"output":{"name":"result"}}],[5,"ftruncate","","",null,{"inputs":[{"name":"rawfd"},{"name":"off_t"}],"output":{"name":"result"}}],[5,"isatty","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"chroot","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fsync","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"fdatasync","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"getuid","","",null,{"inputs":[],"output":{"name":"uid_t"}}],[5,"geteuid","","",null,{"inputs":[],"output":{"name":"uid_t"}}],[5,"getgid","","",null,{"inputs":[],"output":{"name":"gid_t"}}],[5,"getegid","","",null,{"inputs":[],"output":{"name":"gid_t"}}],[5,"setuid","","",null,{"inputs":[{"name":"uid_t"}],"output":{"name":"result"}}],[5,"setgid","","",null,{"inputs":[{"name":"gid_t"}],"output":{"name":"result"}}],[5,"pause","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"sleep","","",null,{"inputs":[{"name":"c_uint"}],"output":{"name":"c_uint"}}],[11,"clone","","",112,null],[11,"is_child","","",112,null],[11,"is_parent","","",112,null],[6,"Result","nix","",null,null],[8,"NixPath","","",null,null],[10,"len","","",114,null],[10,"with_nix_path","","",114,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"from_errno","","",1,{"inputs":[{"name":"errno"}],"output":{"name":"error"}}],[11,"last","","",1,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_argument","","",1,{"inputs":[],"output":{"name":"error"}}],[11,"errno","","",1,null],[11,"from","","",1,{"inputs":[{"name":"errno"}],"output":{"name":"error"}}],[11,"description","","",1,null],[11,"fmt","","",1,null],[14,"ioc","","Encode an ioctl command.",null,null],[14,"io","","Encode an ioctl command that has no associated data.",null,null],[14,"ior","","Encode an ioctl command that reads.",null,null],[14,"iow","","Encode an ioctl command that writes.",null,null],[14,"iorw","","Encode an ioctl command that both reads and writes.",null,null],[14,"convert_ioctl_res","","Convert raw ioctl return value to a Nix result",null,null],[14,"ioctl","","Declare a wrapper function around an ioctl.",null,null],[11,"clone","nix::sys::socket","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","nix::sys::stat","",84,null]],"paths":[[4,"Errno"],[4,"Error"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"OFlag"],[3,"FdFlag"],[3,"SealFlag"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"PollFd"],[3,"EventFlags"],[3,"CloneFlags"],[3,"CpuSet"],[3,"EpollEvent"],[4,"EpollOp"],[3,"EpollEventKind"],[3,"MemFdCreateFlag"],[4,"Signal"],[4,"SigHandler"],[3,"SignalIterator"],[3,"SaFlags"],[3,"SigFlags"],[3,"SigSet"],[3,"SigAction"],[3,"in_addr"],[3,"in6_addr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"NetlinkAddr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"RecvMsg"],[3,"linger"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[3,"MsgFlags"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"CmsgSpace"],[3,"CmsgIterator"],[3,"ucred"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"RebootMode"],[3,"Termios"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"MapFlags"],[3,"MsFlags"],[3,"ProtFlags"],[3,"IoVec"],[3,"TimeVal"],[3,"FdSet"],[3,"QuotaCmd"],[3,"Dqblk"],[3,"QuotaValidFlags"],[3,"Statfs"],[3,"Statvfs"],[3,"FsFlags"],[3,"UContext"],[4,"ForkResult"],[4,"Whence"],[8,"NixPath"]]};
searchIndex["openssl"] = {"doc":"","items":[[5,"init","openssl","",null,null],[0,"asn1","","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[3,"Asn1TimeRef","","",null,null],[3,"Asn1String","","",null,null],[3,"Asn1StringRef","","",null,null],[11,"from_ptr","","",0,null],[11,"drop","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"fmt","","",1,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"from_ptr","","",2,null],[11,"drop","","",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"as_utf8","","",3,null],[11,"as_slice","","",3,null],[11,"len","","",3,null],[0,"bn","openssl","",null,null],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly generated `BigNum`.",null,null],[3,"BigNumContext","","",null,null],[3,"BigNumContextRef","","",null,null],[3,"BigNum","","",null,null],[3,"BigNumRef","","",null,null],[17,"MSB_MAYBE_ZERO","","The most significant bit of the number may be 0.",null,null],[17,"MSB_ONE","","The most significant bit of the number must be 1.",null,null],[17,"TWO_MSB_ONE","","The most significant two bits of the number must be 1.",null,null],[11,"from_ptr","","",4,null],[11,"drop","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"new","","Returns a new `BigNumContext`.",4,{"inputs":[],"output":{"name":"result"}}],[11,"clear","","Erases the memory used by this `BigNum`, resetting its value to 0.",5,null],[11,"add_word","","Adds a `u32` to `self`.",5,null],[11,"sub_word","","Subtracts a `u32` from `self`.",5,null],[11,"mul_word","","Multiplies a `u32` by `self`.",5,null],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",5,null],[11,"mod_word","","Returns the result of `self` modulo `w`.",5,null],[11,"rand_range","","Places a cryptographically-secure pseudo-random number nonnegative\nnumber less than `self` in `rnd`.",5,null],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",5,null],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 &lt;&lt; n)`.",5,null],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &amp;= ~(1 &lt;&lt; n)`.",5,null],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",5,null],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",5,null],[11,"lshift1","","Places `a &lt;&lt; 1` in `self`.",5,null],[11,"rshift1","","Places `a &gt;&gt; 1` in `self`.",5,null],[11,"checked_add","","Places `a + b` in `self`.",5,null],[11,"checked_sub","","Places `a - b` in `self`.",5,null],[11,"lshift","","Places `a &lt;&lt; n` in `self`.",5,null],[11,"rshift","","Places `a &gt;&gt; n` in `self`.",5,null],[11,"to_owned","","",5,null],[11,"set_negative","","Sets the sign of `self`.",5,null],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",5,null],[11,"is_negative","","",5,null],[11,"num_bits","","Returns the number of significant bits in `self`.",5,null],[11,"num_bytes","","Returns the size of `self` in bytes.",5,null],[11,"rand","","Generates a cryptographically strong pseudo-random `BigNum`, placing it in `self`.",5,null],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`.",5,null],[11,"generate_prime","","Generates a prime number, placing it in `self`.",5,null],[11,"checked_mul","","Places the result of `a * b` in `self`.",5,null],[11,"checked_div","","Places the result of `a / b` in `self`.",5,null],[11,"checked_rem","","Places the result of `a % b` in `self`.",5,null],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",5,null],[11,"sqr","","Places the result of `a²` in `self`.",5,null],[11,"nnmod","","Places the result of `a mod m` in `self`.",5,null],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",5,null],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",5,null],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",5,null],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",5,null],[11,"exp","","Places the result of `a^p` in `self`.",5,null],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",5,null],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",5,null],[11,"gcd","","Places the greatest common denominator of `a` and `b` in `self`.",5,null],[11,"is_prime","","Checks whether `self` is prime.",5,null],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",5,null],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",5,null],[11,"to_dec_str","","Returns a decimal string representation of `self`.",5,null],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",5,null],[11,"from_ptr","","",6,null],[11,"drop","","",6,null],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[11,"new","","Creates a new `BigNum` with the value 0.",6,{"inputs":[],"output":{"name":"result"}}],[11,"from_u32","","Creates a new `BigNum` with the given value.",6,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"get_rfc2409_prime_768","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc2409_prime_1024","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_1536","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_2048","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_3072","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_4096","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_6144","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"get_rfc3526_prime_8192","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",6,null],[11,"as_ref","","",6,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"eq","","",5,null],[11,"eq","","",5,null],[11,"eq","","",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"cmp","","",6,null],[11,"neg","","",6,null],[0,"crypto","openssl","",null,null],[3,"CryptoString","openssl::crypto","",null,null],[11,"drop","","",7,null],[11,"deref","","",7,null],[11,"from_raw_parts","","",7,null],[11,"from_null_terminated","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[0,"dh","openssl","",null,null],[3,"Dh","openssl::dh","",null,null],[3,"DhRef","","",null,null],[11,"from_ptr","","",8,null],[11,"drop","","",8,null],[11,"deref","","",8,null],[11,"deref_mut","","",8,null],[11,"to_pem","","Serializes this value to PEM.",9,null],[11,"to_der","","Serializes this value to DER.",9,null],[11,"from_params","","",8,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_pem","","Deserializes a value from PEM-formatted data.",8,null],[11,"from_der","","Deserializes a value from DER-formatted data.",8,null],[0,"dsa","openssl","",null,null],[3,"Dsa","openssl::dsa","",null,null],[3,"DsaRef","","",null,null],[11,"from_ptr","","",10,null],[11,"drop","","",10,null],[11,"deref","","",10,null],[11,"deref_mut","","",10,null],[11,"private_key_to_pem","","Serializes the private key to PEM.",11,null],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and\npassphrase.",11,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",11,null],[11,"private_key_to_der","","Serializes the private key to DER.",11,null],[11,"public_key_to_der","","Serializes the public key to DER.",11,null],[11,"size","","",11,null],[11,"p","","",11,null],[11,"q","","",11,null],[11,"g","","",11,null],[11,"has_public_key","","",11,null],[11,"has_private_key","","",11,null],[11,"generate","","Generate a DSA key pair.",10,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",10,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is\nencrypted.",10,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the\nkey is encrypted.",10,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",10,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",10,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",10,null],[11,"private_key_from_pem_cb","","",10,null],[11,"fmt","","",10,null],[0,"ec","openssl","",null,null],[3,"PointConversionForm","openssl::ec","",null,null],[3,"EcGroup","","",null,null],[3,"EcGroupRef","","",null,null],[3,"EcPoint","","",null,null],[3,"EcPointRef","","",null,null],[3,"EcKey","","",null,null],[3,"EcKeyRef","","",null,null],[17,"POINT_CONVERSION_COMPRESSED","","",null,null],[17,"POINT_CONVERSION_UNCOMPRESSED","","",null,null],[17,"POINT_CONVERSION_HYBRID","","",null,null],[11,"clone","","",12,null],[11,"from_ptr","","",13,null],[11,"drop","","",13,null],[11,"deref","","",13,null],[11,"deref_mut","","",13,null],[11,"from_curve_name","","Returns the group of a standard named curve.",13,{"inputs":[{"name":"nid"}],"output":{"name":"result"}}],[11,"components_gfp","","Places the components of a curve over a prime field in the provided `BigNum`s.",14,null],[11,"components_gf2m","","Places the components of a curve over a binary field in the provided `BigNum`s.",14,null],[11,"degree","","Returns the degree of the curve.",14,null],[11,"order","","Places the order of the curve in the provided `BigNum`.",14,null],[11,"from_ptr","","",15,null],[11,"drop","","",15,null],[11,"deref","","",15,null],[11,"deref_mut","","",15,null],[11,"add","","Computes `a + b`, storing the result in `self`.",16,null],[11,"mul","","Computes `q * m`, storing the result in `self`.",16,null],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",16,null],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in `self`.",16,null],[11,"invert","","Inverts `self`.",16,null],[11,"to_bytes","","Serializes the point to a binary representation.",16,null],[11,"eq","","Determines if this point is equal to another.",16,null],[11,"new","","Creates a new point on the specified curve.",15,{"inputs":[{"name":"ecgroupref"}],"output":{"name":"result"}}],[11,"from_bytes","","",15,null],[11,"from_ptr","","",17,null],[11,"drop","","",17,null],[11,"deref","","",17,null],[11,"deref_mut","","",17,null],[11,"private_key_to_pem","","Serializes the private key to PEM.",18,null],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and\npassphrase.",18,null],[11,"private_key_to_der","","Serializes the private key to DER.",18,null],[11,"group","","",18,null],[11,"public_key","","",18,null],[11,"private_key","","",18,null],[11,"check_key","","Checks the key for validity.",18,null],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",17,{"inputs":[{"name":"nid"}],"output":{"name":"result"}}],[11,"generate","","Generates a new public/private key pair on the specified curve.",17,{"inputs":[{"name":"ecgroupref"}],"output":{"name":"result"}}],[11,"new_by_curve_name","","",17,{"inputs":[{"name":"nid"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",17,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is\nencrypted.",17,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the\nkey is encrypted.",17,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",17,null],[0,"ec_key","openssl","",null,null],[0,"error","","",null,null],[3,"ErrorStack","openssl::error","",null,null],[3,"Error","","An error reported from OpenSSL.",null,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"get","","Returns the contents of the OpenSSL error stack.",19,{"inputs":[],"output":{"name":"errorstack"}}],[11,"errors","","Returns the errors in the stack.",19,null],[11,"fmt","","",19,null],[11,"description","","",19,null],[11,"clone","","",20,null],[11,"get","","Returns the first error on the OpenSSL error stack.",20,{"inputs":[],"output":{"name":"option"}}],[11,"code","","Returns the raw OpenSSL error code for this error.",20,null],[11,"library","","Returns the name of the library reporting the error, if available.",20,null],[11,"function","","Returns the name of the function reporting the error.",20,null],[11,"reason","","Returns the reason for the error.",20,null],[11,"fmt","","",20,null],[11,"fmt","","",20,null],[11,"description","","",20,null],[0,"hash","openssl","",null,null],[3,"MessageDigest","openssl::hash","",null,null],[3,"Hasher","","Provides message digest (hash) computation.",null,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",21,null],[11,"md5","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha1","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha224","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha256","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha384","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"sha512","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"ripemd160","","",21,{"inputs":[],"output":{"name":"messagedigest"}}],[11,"as_ptr","","",21,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",22,{"inputs":[{"name":"messagedigest"}],"output":{"name":"result"}}],[11,"update","","Feeds data into the hasher.",22,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",22,null],[11,"write","","",22,null],[11,"flush","","",22,null],[11,"clone","","",22,null],[11,"drop","","",22,null],[0,"memcmp","openssl","",null,null],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"nid","openssl","",null,null],[3,"Nid","openssl::nid","",null,null],[17,"UNDEF","","",null,null],[17,"ITU_T","","",null,null],[17,"CCITT","","",null,null],[17,"ISO","","",null,null],[17,"JOINT_ISO_ITU_T","","",null,null],[17,"JOINT_ISO_CCITT","","",null,null],[17,"MEMBER_BODY","","",null,null],[17,"IDENTIFIED_ORGANIZATION","","",null,null],[17,"HMAC_MD5","","",null,null],[17,"HMAC_SHA1","","",null,null],[17,"CERTICOM_ARC","","",null,null],[17,"INTERNATIONAL_ORGANIZATIONS","","",null,null],[17,"WAP","","",null,null],[17,"WAP_WSG","","",null,null],[17,"SELECTED_ATTRIBUTE_TYPES","","",null,null],[17,"CLEARANCE","","",null,null],[17,"ISO_US","","",null,null],[17,"X9_57","","",null,null],[17,"X9CM","","",null,null],[17,"DSA","","",null,null],[17,"DSAWITHSHA1","","",null,null],[17,"ANSI_X9_62","","",null,null],[17,"X9_62_PRIME_FIELD","","",null,null],[17,"X9_62_CHARACTERISTIC_TWO_FIELD","","",null,null],[17,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",null,null],[17,"X9_62_ONBASIS","","",null,null],[17,"X9_62_TPBASIS","","",null,null],[17,"X9_62_PPBASIS","","",null,null],[17,"X9_62_ID_ECPUBLICKEY","","",null,null],[17,"X9_62_C2PNB163V1","","",null,null],[17,"X9_62_C2PNB163V2","","",null,null],[17,"X9_62_C2PNB163V3","","",null,null],[17,"X9_62_C2PNB176V1","","",null,null],[17,"X9_62_C2TNB191V1","","",null,null],[17,"X9_62_C2TNB191V2","","",null,null],[17,"X9_62_C2TNB191V3","","",null,null],[17,"X9_62_C2ONB191V4","","",null,null],[17,"X9_62_C2ONB191V5","","",null,null],[17,"X9_62_C2PNB208W1","","",null,null],[17,"X9_62_C2TNB239V1","","",null,null],[17,"X9_62_C2TNB239V2","","",null,null],[17,"X9_62_C2TNB239V3","","",null,null],[17,"X9_62_C2ONB239V4","","",null,null],[17,"X9_62_C2ONB239V5","","",null,null],[17,"X9_62_C2PNB272W1","","",null,null],[17,"X9_62_C2PNB304W1","","",null,null],[17,"X9_62_C2TNB359V1","","",null,null],[17,"X9_62_C2PNB368W1","","",null,null],[17,"X9_62_C2TNB431R1","","",null,null],[17,"X9_62_PRIME192V1","","",null,null],[17,"X9_62_PRIME192V2","","",null,null],[17,"X9_62_PRIME192V3","","",null,null],[17,"X9_62_PRIME239V1","","",null,null],[17,"X9_62_PRIME239V2","","",null,null],[17,"X9_62_PRIME239V3","","",null,null],[17,"X9_62_PRIME256V1","","",null,null],[17,"ECDSA_WITH_SHA1","","",null,null],[17,"ECDSA_WITH_RECOMMENDED","","",null,null],[17,"ECDSA_WITH_SPECIFIED","","",null,null],[17,"ECDSA_WITH_SHA224","","",null,null],[17,"ECDSA_WITH_SHA256","","",null,null],[17,"ECDSA_WITH_SHA384","","",null,null],[17,"ECDSA_WITH_SHA512","","",null,null],[17,"SECP112R1","","",null,null],[17,"SECP112R2","","",null,null],[17,"SECP128R1","","",null,null],[17,"SECP128R2","","",null,null],[17,"SECP160K1","","",null,null],[17,"SECP160R1","","",null,null],[17,"SECP160R2","","",null,null],[17,"SECP192K1","","",null,null],[17,"SECP224K1","","",null,null],[17,"SECP224R1","","",null,null],[17,"SECP256K1","","",null,null],[17,"SECP384R1","","",null,null],[17,"SECP521R1","","",null,null],[17,"SECT113R1","","",null,null],[17,"SECT113R2","","",null,null],[17,"SECT131R1","","",null,null],[17,"SECT131R2","","",null,null],[17,"SECT163K1","","",null,null],[17,"SECT163R1","","",null,null],[17,"SECT163R2","","",null,null],[17,"SECT193R1","","",null,null],[17,"SECT193R2","","",null,null],[17,"SECT233K1","","",null,null],[17,"SECT233R1","","",null,null],[17,"SECT239K1","","",null,null],[17,"SECT283K1","","",null,null],[17,"SECT283R1","","",null,null],[17,"SECT409K1","","",null,null],[17,"SECT409R1","","",null,null],[17,"SECT571K1","","",null,null],[17,"SECT571R1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS1","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS3","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS4","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS5","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS6","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS7","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS8","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS9","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS10","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS11","","",null,null],[17,"WAP_WSG_IDM_ECID_WTLS12","","",null,null],[17,"CAST5_CBC","","",null,null],[17,"CAST5_ECB","","",null,null],[17,"CAST5_CFB64","","",null,null],[17,"CAST5_OFB64","","",null,null],[17,"PBEWITHMD5ANDCAST5_CBC","","",null,null],[17,"ID_PASSWORDBASEDMAC","","",null,null],[17,"ID_DHBASEDMAC","","",null,null],[17,"RSADSI","","",null,null],[17,"PKCS","","",null,null],[17,"PKCS1","","",null,null],[17,"RSAENCRYPTION","","",null,null],[17,"MD2WITHRSAENCRYPTION","","",null,null],[17,"MD4WITHRSAENCRYPTION","","",null,null],[17,"MD5WITHRSAENCRYPTION","","",null,null],[17,"SHA1WITHRSAENCRYPTION","","",null,null],[17,"RSAESOAEP","","",null,null],[17,"MGF1","","",null,null],[17,"RSASSAPSS","","",null,null],[17,"SHA256WITHRSAENCRYPTION","","",null,null],[17,"SHA384WITHRSAENCRYPTION","","",null,null],[17,"SHA512WITHRSAENCRYPTION","","",null,null],[17,"SHA224WITHRSAENCRYPTION","","",null,null],[17,"PKCS3","","",null,null],[17,"DHKEYAGREEMENT","","",null,null],[17,"PKCS5","","",null,null],[17,"PBEWITHMD2ANDDES_CBC","","",null,null],[17,"PBEWITHMD5ANDDES_CBC","","",null,null],[17,"PBEWITHMD2ANDRC2_CBC","","",null,null],[17,"PBEWITHMD5ANDRC2_CBC","","",null,null],[17,"PBEWITHSHA1ANDDES_CBC","","",null,null],[17,"PBEWITHSHA1ANDRC2_CBC","","",null,null],[17,"ID_PBKDF2","","",null,null],[17,"PBES2","","",null,null],[17,"PBMAC1","","",null,null],[17,"PKCS7","","",null,null],[17,"PKCS7_DATA","","",null,null],[17,"PKCS7_SIGNED","","",null,null],[17,"PKCS7_ENVELOPED","","",null,null],[17,"PKCS7_SIGNEDANDENVELOPED","","",null,null],[17,"PKCS7_DIGEST","","",null,null],[17,"PKCS7_ENCRYPTED","","",null,null],[17,"PKCS9","","",null,null],[17,"PKCS9_EMAILADDRESS","","",null,null],[17,"PKCS9_UNSTRUCTUREDNAME","","",null,null],[17,"PKCS9_CONTENTTYPE","","",null,null],[17,"PKCS9_MESSAGEDIGEST","","",null,null],[17,"PKCS9_SIGNINGTIME","","",null,null],[17,"PKCS9_COUNTERSIGNATURE","","",null,null],[17,"PKCS9_CHALLENGEPASSWORD","","",null,null],[17,"PKCS9_UNSTRUCTUREDADDRESS","","",null,null],[17,"PKCS9_EXTCERTATTRIBUTES","","",null,null],[17,"EXT_REQ","","",null,null],[17,"SMIMECAPABILITIES","","",null,null],[17,"SMIME","","",null,null],[17,"ID_SMIME_MOD","","",null,null],[17,"ID_SMIME_CT","","",null,null],[17,"ID_SMIME_AA","","",null,null],[17,"ID_SMIME_ALG","","",null,null],[17,"ID_SMIME_CD","","",null,null],[17,"ID_SMIME_SPQ","","",null,null],[17,"ID_SMIME_CTI","","",null,null],[17,"ID_SMIME_MOD_CMS","","",null,null],[17,"ID_SMIME_MOD_ESS","","",null,null],[17,"ID_SMIME_MOD_OID","","",null,null],[17,"ID_SMIME_MOD_MSG_V3","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",null,null],[17,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",null,null],[17,"ID_SMIME_CT_RECEIPT","","",null,null],[17,"ID_SMIME_CT_AUTHDATA","","",null,null],[17,"ID_SMIME_CT_PUBLISHCERT","","",null,null],[17,"ID_SMIME_CT_TSTINFO","","",null,null],[17,"ID_SMIME_CT_TDTINFO","","",null,null],[17,"ID_SMIME_CT_CONTENTINFO","","",null,null],[17,"ID_SMIME_CT_DVCSREQUESTDATA","","",null,null],[17,"ID_SMIME_CT_DVCSRESPONSEDATA","","",null,null],[17,"ID_SMIME_CT_COMPRESSEDDATA","","",null,null],[17,"ID_CT_ASCIITEXTWITHCRLF","","",null,null],[17,"ID_SMIME_AA_RECEIPTREQUEST","","",null,null],[17,"ID_SMIME_AA_SECURITYLABEL","","",null,null],[17,"ID_SMIME_AA_MLEXPANDHISTORY","","",null,null],[17,"ID_SMIME_AA_CONTENTHINT","","",null,null],[17,"ID_SMIME_AA_MSGSIGDIGEST","","",null,null],[17,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",null,null],[17,"ID_SMIME_AA_CONTENTIDENTIFIER","","",null,null],[17,"ID_SMIME_AA_MACVALUE","","",null,null],[17,"ID_SMIME_AA_EQUIVALENTLABELS","","",null,null],[17,"ID_SMIME_AA_CONTENTREFERENCE","","",null,null],[17,"ID_SMIME_AA_ENCRYPKEYPREF","","",null,null],[17,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",null,null],[17,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",null,null],[17,"ID_SMIME_AA_TIMESTAMPTOKEN","","",null,null],[17,"ID_SMIME_AA_ETS_SIGPOLICYID","","",null,null],[17,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",null,null],[17,"ID_SMIME_AA_ETS_SIGNERATTR","","",null,null],[17,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",null,null],[17,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",null,null],[17,"ID_SMIME_AA_ETS_CERTVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",null,null],[17,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",null,null],[17,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",null,null],[17,"ID_SMIME_AA_SIGNATURETYPE","","",null,null],[17,"ID_SMIME_AA_DVCS_DVC","","",null,null],[17,"ID_SMIME_ALG_ESDHWITH3DES","","",null,null],[17,"ID_SMIME_ALG_ESDHWITHRC2","","",null,null],[17,"ID_SMIME_ALG_3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_RC2WRAP","","",null,null],[17,"ID_SMIME_ALG_ESDH","","",null,null],[17,"ID_SMIME_ALG_CMS3DESWRAP","","",null,null],[17,"ID_SMIME_ALG_CMSRC2WRAP","","",null,null],[17,"ID_ALG_PWRI_KEK","","",null,null],[17,"ID_SMIME_CD_LDAP","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_URI","","",null,null],[17,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",null,null],[17,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",null,null],[17,"FRIENDLYNAME","","",null,null],[17,"LOCALKEYID","","",null,null],[17,"MS_CSP_NAME","","",null,null],[17,"LOCALKEYSET","","",null,null],[17,"X509CERTIFICATE","","",null,null],[17,"SDSICERTIFICATE","","",null,null],[17,"X509CRL","","",null,null],[17,"PBE_WITHSHA1AND128BITRC4","","",null,null],[17,"PBE_WITHSHA1AND40BITRC4","","",null,null],[17,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",null,null],[17,"PBE_WITHSHA1AND128BITRC2_CBC","","",null,null],[17,"PBE_WITHSHA1AND40BITRC2_CBC","","",null,null],[17,"KEYBAG","","",null,null],[17,"PKCS8SHROUDEDKEYBAG","","",null,null],[17,"CERTBAG","","",null,null],[17,"CRLBAG","","",null,null],[17,"SECRETBAG","","",null,null],[17,"SAFECONTENTSBAG","","",null,null],[17,"MD2","","",null,null],[17,"MD4","","",null,null],[17,"MD5","","",null,null],[17,"MD5_SHA1","","",null,null],[17,"HMACWITHMD5","","",null,null],[17,"HMACWITHSHA1","","",null,null],[17,"HMACWITHSHA224","","",null,null],[17,"HMACWITHSHA256","","",null,null],[17,"HMACWITHSHA384","","",null,null],[17,"HMACWITHSHA512","","",null,null],[17,"RC2_CBC","","",null,null],[17,"RC2_ECB","","",null,null],[17,"RC2_CFB64","","",null,null],[17,"RC2_OFB64","","",null,null],[17,"RC2_40_CBC","","",null,null],[17,"RC2_64_CBC","","",null,null],[17,"RC4","","",null,null],[17,"RC4_40","","",null,null],[17,"DES_EDE3_CBC","","",null,null],[17,"RC5_CBC","","",null,null],[17,"RC5_ECB","","",null,null],[17,"RC5_CFB64","","",null,null],[17,"RC5_OFB64","","",null,null],[17,"MS_EXT_REQ","","",null,null],[17,"MS_CODE_IND","","",null,null],[17,"MS_CODE_COM","","",null,null],[17,"MS_CTL_SIGN","","",null,null],[17,"MS_SGC","","",null,null],[17,"MS_EFS","","",null,null],[17,"MS_SMARTCARD_LOGIN","","",null,null],[17,"MS_UPN","","",null,null],[17,"IDEA_CBC","","",null,null],[17,"IDEA_ECB","","",null,null],[17,"IDEA_CFB64","","",null,null],[17,"IDEA_OFB64","","",null,null],[17,"BF_CBC","","",null,null],[17,"BF_ECB","","",null,null],[17,"BF_CFB64","","",null,null],[17,"BF_OFB64","","",null,null],[17,"ID_PKIX","","",null,null],[17,"ID_PKIX_MOD","","",null,null],[17,"ID_PE","","",null,null],[17,"ID_QT","","",null,null],[17,"ID_KP","","",null,null],[17,"ID_IT","","",null,null],[17,"ID_PKIP","","",null,null],[17,"ID_ALG","","",null,null],[17,"ID_CMC","","",null,null],[17,"ID_ON","","",null,null],[17,"ID_PDA","","",null,null],[17,"ID_ACA","","",null,null],[17,"ID_QCS","","",null,null],[17,"ID_CCT","","",null,null],[17,"ID_PPL","","",null,null],[17,"ID_AD","","",null,null],[17,"ID_PKIX1_EXPLICIT_88","","",null,null],[17,"ID_PKIX1_IMPLICIT_88","","",null,null],[17,"ID_PKIX1_EXPLICIT_93","","",null,null],[17,"ID_PKIX1_IMPLICIT_93","","",null,null],[17,"ID_MOD_CRMF","","",null,null],[17,"ID_MOD_CMC","","",null,null],[17,"ID_MOD_KEA_PROFILE_88","","",null,null],[17,"ID_MOD_KEA_PROFILE_93","","",null,null],[17,"ID_MOD_CMP","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_88","","",null,null],[17,"ID_MOD_QUALIFIED_CERT_93","","",null,null],[17,"ID_MOD_ATTRIBUTE_CERT","","",null,null],[17,"ID_MOD_TIMESTAMP_PROTOCOL","","",null,null],[17,"ID_MOD_OCSP","","",null,null],[17,"ID_MOD_DVCS","","",null,null],[17,"ID_MOD_CMP2000","","",null,null],[17,"INFO_ACCESS","","",null,null],[17,"BIOMETRICINFO","","",null,null],[17,"QCSTATEMENTS","","",null,null],[17,"AC_AUDITENTITY","","",null,null],[17,"AC_TARGETING","","",null,null],[17,"AACONTROLS","","",null,null],[17,"SBGP_IPADDRBLOCK","","",null,null],[17,"SBGP_AUTONOMOUSSYSNUM","","",null,null],[17,"SBGP_ROUTERIDENTIFIER","","",null,null],[17,"AC_PROXYING","","",null,null],[17,"SINFO_ACCESS","","",null,null],[17,"PROXYCERTINFO","","",null,null],[17,"ID_QT_CPS","","",null,null],[17,"ID_QT_UNOTICE","","",null,null],[17,"TEXTNOTICE","","",null,null],[17,"SERVER_AUTH","","",null,null],[17,"CLIENT_AUTH","","",null,null],[17,"CODE_SIGN","","",null,null],[17,"EMAIL_PROTECT","","",null,null],[17,"IPSECENDSYSTEM","","",null,null],[17,"IPSECTUNNEL","","",null,null],[17,"IPSECUSER","","",null,null],[17,"TIME_STAMP","","",null,null],[17,"OCSP_SIGN","","",null,null],[17,"DVCS","","",null,null],[17,"ID_IT_CAPROTENCCERT","","",null,null],[17,"ID_IT_SIGNKEYPAIRTYPES","","",null,null],[17,"ID_IT_ENCKEYPAIRTYPES","","",null,null],[17,"ID_IT_PREFERREDSYMMALG","","",null,null],[17,"ID_IT_CAKEYUPDATEINFO","","",null,null],[17,"ID_IT_CURRENTCRL","","",null,null],[17,"ID_IT_UNSUPPORTEDOIDS","","",null,null],[17,"ID_IT_SUBSCRIPTIONREQUEST","","",null,null],[17,"ID_IT_SUBSCRIPTIONRESPONSE","","",null,null],[17,"ID_IT_KEYPAIRPARAMREQ","","",null,null],[17,"ID_IT_KEYPAIRPARAMREP","","",null,null],[17,"ID_IT_REVPASSPHRASE","","",null,null],[17,"ID_IT_IMPLICITCONFIRM","","",null,null],[17,"ID_IT_CONFIRMWAITTIME","","",null,null],[17,"ID_IT_ORIGPKIMESSAGE","","",null,null],[17,"ID_IT_SUPPLANGTAGS","","",null,null],[17,"ID_REGCTRL","","",null,null],[17,"ID_REGINFO","","",null,null],[17,"ID_REGCTRL_REGTOKEN","","",null,null],[17,"ID_REGCTRL_AUTHENTICATOR","","",null,null],[17,"ID_REGCTRL_PKIPUBLICATIONINFO","","",null,null],[17,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",null,null],[17,"ID_REGCTRL_OLDCERTID","","",null,null],[17,"ID_REGCTRL_PROTOCOLENCRKEY","","",null,null],[17,"ID_REGINFO_UTF8PAIRS","","",null,null],[17,"ID_REGINFO_CERTREQ","","",null,null],[17,"ID_ALG_DES40","","",null,null],[17,"ID_ALG_NOSIGNATURE","","",null,null],[17,"ID_ALG_DH_SIG_HMAC_SHA1","","",null,null],[17,"ID_ALG_DH_POP","","",null,null],[17,"ID_CMC_STATUSINFO","","",null,null],[17,"ID_CMC_IDENTIFICATION","","",null,null],[17,"ID_CMC_IDENTITYPROOF","","",null,null],[17,"ID_CMC_DATARETURN","","",null,null],[17,"ID_CMC_TRANSACTIONID","","",null,null],[17,"ID_CMC_SENDERNONCE","","",null,null],[17,"ID_CMC_RECIPIENTNONCE","","",null,null],[17,"ID_CMC_ADDEXTENSIONS","","",null,null],[17,"ID_CMC_ENCRYPTEDPOP","","",null,null],[17,"ID_CMC_DECRYPTEDPOP","","",null,null],[17,"ID_CMC_LRAPOPWITNESS","","",null,null],[17,"ID_CMC_GETCERT","","",null,null],[17,"ID_CMC_GETCRL","","",null,null],[17,"ID_CMC_REVOKEREQUEST","","",null,null],[17,"ID_CMC_REGINFO","","",null,null],[17,"ID_CMC_RESPONSEINFO","","",null,null],[17,"ID_CMC_QUERYPENDING","","",null,null],[17,"ID_CMC_POPLINKRANDOM","","",null,null],[17,"ID_CMC_POPLINKWITNESS","","",null,null],[17,"ID_CMC_CONFIRMCERTACCEPTANCE","","",null,null],[17,"ID_ON_PERSONALDATA","","",null,null],[17,"ID_ON_PERMANENTIDENTIFIER","","",null,null],[17,"ID_PDA_DATEOFBIRTH","","",null,null],[17,"ID_PDA_PLACEOFBIRTH","","",null,null],[17,"ID_PDA_GENDER","","",null,null],[17,"ID_PDA_COUNTRYOFCITIZENSHIP","","",null,null],[17,"ID_PDA_COUNTRYOFRESIDENCE","","",null,null],[17,"ID_ACA_AUTHENTICATIONINFO","","",null,null],[17,"ID_ACA_ACCESSIDENTITY","","",null,null],[17,"ID_ACA_CHARGINGIDENTITY","","",null,null],[17,"ID_ACA_GROUP","","",null,null],[17,"ID_ACA_ROLE","","",null,null],[17,"ID_ACA_ENCATTRS","","",null,null],[17,"ID_QCS_PKIXQCSYNTAX_V1","","",null,null],[17,"ID_CCT_CRS","","",null,null],[17,"ID_CCT_PKIDATA","","",null,null],[17,"ID_CCT_PKIRESPONSE","","",null,null],[17,"ID_PPL_ANYLANGUAGE","","",null,null],[17,"ID_PPL_INHERITALL","","",null,null],[17,"INDEPENDENT","","",null,null],[17,"AD_OCSP","","",null,null],[17,"AD_CA_ISSUERS","","",null,null],[17,"AD_TIMESTAMPING","","",null,null],[17,"AD_DVCS","","",null,null],[17,"CAREPOSITORY","","",null,null],[17,"ID_PKIX_OCSP_BASIC","","",null,null],[17,"ID_PKIX_OCSP_NONCE","","",null,null],[17,"ID_PKIX_OCSP_CRLID","","",null,null],[17,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",null,null],[17,"ID_PKIX_OCSP_NOCHECK","","",null,null],[17,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",null,null],[17,"ID_PKIX_OCSP_SERVICELOCATOR","","",null,null],[17,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",null,null],[17,"ID_PKIX_OCSP_VALID","","",null,null],[17,"ID_PKIX_OCSP_PATH","","",null,null],[17,"ID_PKIX_OCSP_TRUSTROOT","","",null,null],[17,"ALGORITHM","","",null,null],[17,"MD5WITHRSA","","",null,null],[17,"DES_ECB","","",null,null],[17,"DES_CBC","","",null,null],[17,"DES_OFB64","","",null,null],[17,"DES_CFB64","","",null,null],[17,"RSASIGNATURE","","",null,null],[17,"DSA_2","","",null,null],[17,"DSAWITHSHA","","",null,null],[17,"SHAWITHRSAENCRYPTION","","",null,null],[17,"DES_EDE_ECB","","",null,null],[17,"DES_EDE3_ECB","","",null,null],[17,"DES_EDE_CBC","","",null,null],[17,"DES_EDE_CFB64","","",null,null],[17,"DES_EDE3_CFB64","","",null,null],[17,"DES_EDE_OFB64","","",null,null],[17,"DES_EDE3_OFB64","","",null,null],[17,"DESX_CBC","","",null,null],[17,"SHA","","",null,null],[17,"SHA1","","",null,null],[17,"DSAWITHSHA1_2","","",null,null],[17,"SHA1WITHRSA","","",null,null],[17,"RIPEMD160","","",null,null],[17,"RIPEMD160WITHRSA","","",null,null],[17,"SXNET","","",null,null],[17,"X500","","",null,null],[17,"X509","","",null,null],[17,"COMMONNAME","","",null,null],[17,"SURNAME","","",null,null],[17,"SERIALNUMBER","","",null,null],[17,"COUNTRYNAME","","",null,null],[17,"LOCALITYNAME","","",null,null],[17,"STATEORPROVINCENAME","","",null,null],[17,"STREETADDRESS","","",null,null],[17,"ORGANIZATIONNAME","","",null,null],[17,"ORGANIZATIONALUNITNAME","","",null,null],[17,"TITLE","","",null,null],[17,"DESCRIPTION","","",null,null],[17,"SEARCHGUIDE","","",null,null],[17,"BUSINESSCATEGORY","","",null,null],[17,"POSTALADDRESS","","",null,null],[17,"POSTALCODE","","",null,null],[17,"POSTOFFICEBOX","","",null,null],[17,"PHYSICALDELIVERYOFFICENAME","","",null,null],[17,"TELEPHONENUMBER","","",null,null],[17,"TELEXNUMBER","","",null,null],[17,"TELETEXTERMINALIDENTIFIER","","",null,null],[17,"FACSIMILETELEPHONENUMBER","","",null,null],[17,"X121ADDRESS","","",null,null],[17,"INTERNATIONALISDNNUMBER","","",null,null],[17,"REGISTEREDADDRESS","","",null,null],[17,"DESTINATIONINDICATOR","","",null,null],[17,"PREFERREDDELIVERYMETHOD","","",null,null],[17,"PRESENTATIONADDRESS","","",null,null],[17,"SUPPORTEDAPPLICATIONCONTEXT","","",null,null],[17,"MEMBER","","",null,null],[17,"OWNER","","",null,null],[17,"ROLEOCCUPANT","","",null,null],[17,"SEEALSO","","",null,null],[17,"USERPASSWORD","","",null,null],[17,"USERCERTIFICATE","","",null,null],[17,"CACERTIFICATE","","",null,null],[17,"AUTHORITYREVOCATIONLIST","","",null,null],[17,"CERTIFICATEREVOCATIONLIST","","",null,null],[17,"CROSSCERTIFICATEPAIR","","",null,null],[17,"NAME","","",null,null],[17,"GIVENNAME","","",null,null],[17,"INITIALS","","",null,null],[17,"GENERATIONQUALIFIER","","",null,null],[17,"X500UNIQUEIDENTIFIER","","",null,null],[17,"DNQUALIFIER","","",null,null],[17,"ENHANCEDSEARCHGUIDE","","",null,null],[17,"PROTOCOLINFORMATION","","",null,null],[17,"DISTINGUISHEDNAME","","",null,null],[17,"UNIQUEMEMBER","","",null,null],[17,"HOUSEIDENTIFIER","","",null,null],[17,"SUPPORTEDALGORITHMS","","",null,null],[17,"DELTAREVOCATIONLIST","","",null,null],[17,"DMDNAME","","",null,null],[17,"PSEUDONYM","","",null,null],[17,"ROLE","","",null,null],[17,"X500ALGORITHMS","","",null,null],[17,"RSA","","",null,null],[17,"MDC2WITHRSA","","",null,null],[17,"MDC2","","",null,null],[17,"ID_CE","","",null,null],[17,"SUBJECT_DIRECTORY_ATTRIBUTES","","",null,null],[17,"SUBJECT_KEY_IDENTIFIER","","",null,null],[17,"KEY_USAGE","","",null,null],[17,"PRIVATE_KEY_USAGE_PERIOD","","",null,null],[17,"SUBJECT_ALT_NAME","","",null,null],[17,"ISSUER_ALT_NAME","","",null,null],[17,"BASIC_CONSTRAINTS","","",null,null],[17,"CRL_NUMBER","","",null,null],[17,"CRL_REASON","","",null,null],[17,"INVALIDITY_DATE","","",null,null],[17,"DELTA_CRL","","",null,null],[17,"ISSUING_DISTRIBUTION_POINT","","",null,null],[17,"CERTIFICATE_ISSUER","","",null,null],[17,"NAME_CONSTRAINTS","","",null,null],[17,"CRL_DISTRIBUTION_POINTS","","",null,null],[17,"CERTIFICATE_POLICIES","","",null,null],[17,"ANY_POLICY","","",null,null],[17,"POLICY_MAPPINGS","","",null,null],[17,"AUTHORITY_KEY_IDENTIFIER","","",null,null],[17,"POLICY_CONSTRAINTS","","",null,null],[17,"EXT_KEY_USAGE","","",null,null],[17,"FRESHEST_CRL","","",null,null],[17,"INHIBIT_ANY_POLICY","","",null,null],[17,"TARGET_INFORMATION","","",null,null],[17,"NO_REV_AVAIL","","",null,null],[17,"ANYEXTENDEDKEYUSAGE","","",null,null],[17,"NETSCAPE","","",null,null],[17,"NETSCAPE_CERT_EXTENSION","","",null,null],[17,"NETSCAPE_DATA_TYPE","","",null,null],[17,"NETSCAPE_CERT_TYPE","","",null,null],[17,"NETSCAPE_BASE_URL","","",null,null],[17,"NETSCAPE_REVOCATION_URL","","",null,null],[17,"NETSCAPE_CA_REVOCATION_URL","","",null,null],[17,"NETSCAPE_RENEWAL_URL","","",null,null],[17,"NETSCAPE_CA_POLICY_URL","","",null,null],[17,"NETSCAPE_SSL_SERVER_NAME","","",null,null],[17,"NETSCAPE_COMMENT","","",null,null],[17,"NETSCAPE_CERT_SEQUENCE","","",null,null],[17,"NS_SGC","","",null,null],[17,"ORG","","",null,null],[17,"DOD","","",null,null],[17,"IANA","","",null,null],[17,"DIRECTORY","","",null,null],[17,"MANAGEMENT","","",null,null],[17,"EXPERIMENTAL","","",null,null],[17,"PRIVATE","","",null,null],[17,"SECURITY","","",null,null],[17,"SNMPV2","","",null,null],[17,"MAIL","","",null,null],[17,"ENTERPRISES","","",null,null],[17,"DCOBJECT","","",null,null],[17,"MIME_MHS","","",null,null],[17,"MIME_MHS_HEADINGS","","",null,null],[17,"MIME_MHS_BODIES","","",null,null],[17,"ID_HEX_PARTIAL_MESSAGE","","",null,null],[17,"ID_HEX_MULTIPART_MESSAGE","","",null,null],[17,"ZLIB_COMPRESSION","","",null,null],[17,"AES_128_ECB","","",null,null],[17,"AES_128_CBC","","",null,null],[17,"AES_128_OFB128","","",null,null],[17,"AES_128_CFB128","","",null,null],[17,"ID_AES128_WRAP","","",null,null],[17,"AES_128_GCM","","",null,null],[17,"AES_128_CCM","","",null,null],[17,"ID_AES128_WRAP_PAD","","",null,null],[17,"AES_192_ECB","","",null,null],[17,"AES_192_CBC","","",null,null],[17,"AES_192_OFB128","","",null,null],[17,"AES_192_CFB128","","",null,null],[17,"ID_AES192_WRAP","","",null,null],[17,"AES_192_GCM","","",null,null],[17,"AES_192_CCM","","",null,null],[17,"ID_AES192_WRAP_PAD","","",null,null],[17,"AES_256_ECB","","",null,null],[17,"AES_256_CBC","","",null,null],[17,"AES_256_OFB128","","",null,null],[17,"AES_256_CFB128","","",null,null],[17,"ID_AES256_WRAP","","",null,null],[17,"AES_256_GCM","","",null,null],[17,"AES_256_CCM","","",null,null],[17,"ID_AES256_WRAP_PAD","","",null,null],[17,"AES_128_CFB1","","",null,null],[17,"AES_192_CFB1","","",null,null],[17,"AES_256_CFB1","","",null,null],[17,"AES_128_CFB8","","",null,null],[17,"AES_192_CFB8","","",null,null],[17,"AES_256_CFB8","","",null,null],[17,"AES_128_CTR","","",null,null],[17,"AES_192_CTR","","",null,null],[17,"AES_256_CTR","","",null,null],[17,"AES_128_XTS","","",null,null],[17,"AES_256_XTS","","",null,null],[17,"DES_CFB1","","",null,null],[17,"DES_CFB8","","",null,null],[17,"DES_EDE3_CFB1","","",null,null],[17,"DES_EDE3_CFB8","","",null,null],[17,"SHA256","","",null,null],[17,"SHA384","","",null,null],[17,"SHA512","","",null,null],[17,"SHA224","","",null,null],[17,"DSA_WITH_SHA224","","",null,null],[17,"DSA_WITH_SHA256","","",null,null],[17,"HOLD_INSTRUCTION_CODE","","",null,null],[17,"HOLD_INSTRUCTION_NONE","","",null,null],[17,"HOLD_INSTRUCTION_CALL_ISSUER","","",null,null],[17,"HOLD_INSTRUCTION_REJECT","","",null,null],[17,"DATA","","",null,null],[17,"PSS","","",null,null],[17,"UCL","","",null,null],[17,"PILOT","","",null,null],[17,"PILOTATTRIBUTETYPE","","",null,null],[17,"PILOTATTRIBUTESYNTAX","","",null,null],[17,"PILOTOBJECTCLASS","","",null,null],[17,"PILOTGROUPS","","",null,null],[17,"IA5STRINGSYNTAX","","",null,null],[17,"CASEIGNOREIA5STRINGSYNTAX","","",null,null],[17,"PILOTOBJECT","","",null,null],[17,"PILOTPERSON","","",null,null],[17,"ACCOUNT","","",null,null],[17,"DOCUMENT","","",null,null],[17,"ROOM","","",null,null],[17,"DOCUMENTSERIES","","",null,null],[17,"DOMAIN","","",null,null],[17,"RFC822LOCALPART","","",null,null],[17,"DNSDOMAIN","","",null,null],[17,"DOMAINRELATEDOBJECT","","",null,null],[17,"FRIENDLYCOUNTRY","","",null,null],[17,"SIMPLESECURITYOBJECT","","",null,null],[17,"PILOTORGANIZATION","","",null,null],[17,"PILOTDSA","","",null,null],[17,"QUALITYLABELLEDDATA","","",null,null],[17,"USERID","","",null,null],[17,"TEXTENCODEDORADDRESS","","",null,null],[17,"RFC822MAILBOX","","",null,null],[17,"INFO","","",null,null],[17,"FAVOURITEDRINK","","",null,null],[17,"ROOMNUMBER","","",null,null],[17,"PHOTO","","",null,null],[17,"USERCLASS","","",null,null],[17,"HOST","","",null,null],[17,"MANAGER","","",null,null],[17,"DOCUMENTIDENTIFIER","","",null,null],[17,"DOCUMENTTITLE","","",null,null],[17,"DOCUMENTVERSION","","",null,null],[17,"DOCUMENTAUTHOR","","",null,null],[17,"DOCUMENTLOCATION","","",null,null],[17,"HOMETELEPHONENUMBER","","",null,null],[17,"SECRETARY","","",null,null],[17,"OTHERMAILBOX","","",null,null],[17,"LASTMODIFIEDTIME","","",null,null],[17,"LASTMODIFIEDBY","","",null,null],[17,"DOMAINCOMPONENT","","",null,null],[17,"ARECORD","","",null,null],[17,"PILOTATTRIBUTETYPE27","","",null,null],[17,"MXRECORD","","",null,null],[17,"NSRECORD","","",null,null],[17,"SOARECORD","","",null,null],[17,"CNAMERECORD","","",null,null],[17,"ASSOCIATEDDOMAIN","","",null,null],[17,"ASSOCIATEDNAME","","",null,null],[17,"HOMEPOSTALADDRESS","","",null,null],[17,"PERSONALTITLE","","",null,null],[17,"MOBILETELEPHONENUMBER","","",null,null],[17,"PAGERTELEPHONENUMBER","","",null,null],[17,"FRIENDLYCOUNTRYNAME","","",null,null],[17,"ORGANIZATIONALSTATUS","","",null,null],[17,"JANETMAILBOX","","",null,null],[17,"MAILPREFERENCEOPTION","","",null,null],[17,"BUILDINGNAME","","",null,null],[17,"DSAQUALITY","","",null,null],[17,"SINGLELEVELQUALITY","","",null,null],[17,"SUBTREEMINIMUMQUALITY","","",null,null],[17,"SUBTREEMAXIMUMQUALITY","","",null,null],[17,"PERSONALSIGNATURE","","",null,null],[17,"DITREDIRECT","","",null,null],[17,"AUDIO","","",null,null],[17,"DOCUMENTPUBLISHER","","",null,null],[17,"ID_SET","","",null,null],[17,"SET_CTYPE","","",null,null],[17,"SET_MSGEXT","","",null,null],[17,"SET_ATTR","","",null,null],[17,"SET_POLICY","","",null,null],[17,"SET_CERTEXT","","",null,null],[17,"SET_BRAND","","",null,null],[17,"SETCT_PANDATA","","",null,null],[17,"SETCT_PANTOKEN","","",null,null],[17,"SETCT_PANONLY","","",null,null],[17,"SETCT_OIDATA","","",null,null],[17,"SETCT_PI","","",null,null],[17,"SETCT_PIDATA","","",null,null],[17,"SETCT_PIDATAUNSIGNED","","",null,null],[17,"SETCT_HODINPUT","","",null,null],[17,"SETCT_AUTHRESBAGGAGE","","",null,null],[17,"SETCT_AUTHREVREQBAGGAGE","","",null,null],[17,"SETCT_AUTHREVRESBAGGAGE","","",null,null],[17,"SETCT_CAPTOKENSEQ","","",null,null],[17,"SETCT_PINITRESDATA","","",null,null],[17,"SETCT_PI_TBS","","",null,null],[17,"SETCT_PRESDATA","","",null,null],[17,"SETCT_AUTHREQTBS","","",null,null],[17,"SETCT_AUTHRESTBS","","",null,null],[17,"SETCT_AUTHRESTBSX","","",null,null],[17,"SETCT_AUTHTOKENTBS","","",null,null],[17,"SETCT_CAPTOKENDATA","","",null,null],[17,"SETCT_CAPTOKENTBS","","",null,null],[17,"SETCT_ACQCARDCODEMSG","","",null,null],[17,"SETCT_AUTHREVREQTBS","","",null,null],[17,"SETCT_AUTHREVRESDATA","","",null,null],[17,"SETCT_AUTHREVRESTBS","","",null,null],[17,"SETCT_CAPREQTBS","","",null,null],[17,"SETCT_CAPREQTBSX","","",null,null],[17,"SETCT_CAPRESDATA","","",null,null],[17,"SETCT_CAPREVREQTBS","","",null,null],[17,"SETCT_CAPREVREQTBSX","","",null,null],[17,"SETCT_CAPREVRESDATA","","",null,null],[17,"SETCT_CREDREQTBS","","",null,null],[17,"SETCT_CREDREQTBSX","","",null,null],[17,"SETCT_CREDRESDATA","","",null,null],[17,"SETCT_CREDREVREQTBS","","",null,null],[17,"SETCT_CREDREVREQTBSX","","",null,null],[17,"SETCT_CREDREVRESDATA","","",null,null],[17,"SETCT_PCERTREQDATA","","",null,null],[17,"SETCT_PCERTRESTBS","","",null,null],[17,"SETCT_BATCHADMINREQDATA","","",null,null],[17,"SETCT_BATCHADMINRESDATA","","",null,null],[17,"SETCT_CARDCINITRESTBS","","",null,null],[17,"SETCT_MEAQCINITRESTBS","","",null,null],[17,"SETCT_REGFORMRESTBS","","",null,null],[17,"SETCT_CERTREQDATA","","",null,null],[17,"SETCT_CERTREQTBS","","",null,null],[17,"SETCT_CERTRESDATA","","",null,null],[17,"SETCT_CERTINQREQTBS","","",null,null],[17,"SETCT_ERRORTBS","","",null,null],[17,"SETCT_PIDUALSIGNEDTBE","","",null,null],[17,"SETCT_PIUNSIGNEDTBE","","",null,null],[17,"SETCT_AUTHREQTBE","","",null,null],[17,"SETCT_AUTHRESTBE","","",null,null],[17,"SETCT_AUTHRESTBEX","","",null,null],[17,"SETCT_AUTHTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBE","","",null,null],[17,"SETCT_CAPTOKENTBEX","","",null,null],[17,"SETCT_ACQCARDCODEMSGTBE","","",null,null],[17,"SETCT_AUTHREVREQTBE","","",null,null],[17,"SETCT_AUTHREVRESTBE","","",null,null],[17,"SETCT_AUTHREVRESTBEB","","",null,null],[17,"SETCT_CAPREQTBE","","",null,null],[17,"SETCT_CAPREQTBEX","","",null,null],[17,"SETCT_CAPRESTBE","","",null,null],[17,"SETCT_CAPREVREQTBE","","",null,null],[17,"SETCT_CAPREVREQTBEX","","",null,null],[17,"SETCT_CAPREVRESTBE","","",null,null],[17,"SETCT_CREDREQTBE","","",null,null],[17,"SETCT_CREDREQTBEX","","",null,null],[17,"SETCT_CREDRESTBE","","",null,null],[17,"SETCT_CREDREVREQTBE","","",null,null],[17,"SETCT_CREDREVREQTBEX","","",null,null],[17,"SETCT_CREDREVRESTBE","","",null,null],[17,"SETCT_BATCHADMINREQTBE","","",null,null],[17,"SETCT_BATCHADMINRESTBE","","",null,null],[17,"SETCT_REGFORMREQTBE","","",null,null],[17,"SETCT_CERTREQTBE","","",null,null],[17,"SETCT_CERTREQTBEX","","",null,null],[17,"SETCT_CERTRESTBE","","",null,null],[17,"SETCT_CRLNOTIFICATIONTBS","","",null,null],[17,"SETCT_CRLNOTIFICATIONRESTBS","","",null,null],[17,"SETCT_BCIDISTRIBUTIONTBS","","",null,null],[17,"SETEXT_GENCRYPT","","",null,null],[17,"SETEXT_MIAUTH","","",null,null],[17,"SETEXT_PINSECURE","","",null,null],[17,"SETEXT_PINANY","","",null,null],[17,"SETEXT_TRACK2","","",null,null],[17,"SETEXT_CV","","",null,null],[17,"SET_POLICY_ROOT","","",null,null],[17,"SETCEXT_HASHEDROOT","","",null,null],[17,"SETCEXT_CERTTYPE","","",null,null],[17,"SETCEXT_MERCHDATA","","",null,null],[17,"SETCEXT_CCERTREQUIRED","","",null,null],[17,"SETCEXT_TUNNELING","","",null,null],[17,"SETCEXT_SETEXT","","",null,null],[17,"SETCEXT_SETQUALF","","",null,null],[17,"SETCEXT_PGWYCAPABILITIES","","",null,null],[17,"SETCEXT_TOKENIDENTIFIER","","",null,null],[17,"SETCEXT_TRACK2DATA","","",null,null],[17,"SETCEXT_TOKENTYPE","","",null,null],[17,"SETCEXT_ISSUERCAPABILITIES","","",null,null],[17,"SETATTR_CERT","","",null,null],[17,"SETATTR_PGWYCAP","","",null,null],[17,"SETATTR_TOKENTYPE","","",null,null],[17,"SETATTR_ISSCAP","","",null,null],[17,"SET_ROOTKEYTHUMB","","",null,null],[17,"SET_ADDPOLICY","","",null,null],[17,"SETATTR_TOKEN_EMV","","",null,null],[17,"SETATTR_TOKEN_B0PRIME","","",null,null],[17,"SETATTR_ISSCAP_CVM","","",null,null],[17,"SETATTR_ISSCAP_T2","","",null,null],[17,"SETATTR_ISSCAP_SIG","","",null,null],[17,"SETATTR_GENCRYPTGRM","","",null,null],[17,"SETATTR_T2ENC","","",null,null],[17,"SETATTR_T2CLEARTXT","","",null,null],[17,"SETATTR_TOKICCSIG","","",null,null],[17,"SETATTR_SECDEVSIG","","",null,null],[17,"SET_BRAND_IATA_ATA","","",null,null],[17,"SET_BRAND_DINERS","","",null,null],[17,"SET_BRAND_AMERICANEXPRESS","","",null,null],[17,"SET_BRAND_JCB","","",null,null],[17,"SET_BRAND_VISA","","",null,null],[17,"SET_BRAND_MASTERCARD","","",null,null],[17,"SET_BRAND_NOVUS","","",null,null],[17,"DES_CDMF","","",null,null],[17,"RSAOAEPENCRYPTIONSET","","",null,null],[17,"IPSEC3","","",null,null],[17,"IPSEC4","","",null,null],[17,"WHIRLPOOL","","",null,null],[17,"CRYPTOPRO","","",null,null],[17,"CRYPTOCOM","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",null,null],[17,"ID_GOSTR3411_94","","",null,null],[17,"ID_HMACGOSTR3411_94","","",null,null],[17,"ID_GOSTR3410_2001","","",null,null],[17,"ID_GOSTR3410_94","","",null,null],[17,"ID_GOST28147_89","","",null,null],[17,"GOST89_CNT","","",null,null],[17,"ID_GOST28147_89_MAC","","",null,null],[17,"ID_GOSTR3411_94_PRF","","",null,null],[17,"ID_GOSTR3410_2001DH","","",null,null],[17,"ID_GOSTR3410_94DH","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",null,null],[17,"ID_GOST28147_89_NONE_KEYMESHING","","",null,null],[17,"ID_GOSTR3411_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",null,null],[17,"ID_GOST28147_89_TESTPARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",null,null],[17,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_TESTPARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",null,null],[17,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",null,null],[17,"ID_GOSTR3410_94_A","","",null,null],[17,"ID_GOSTR3410_94_ABIS","","",null,null],[17,"ID_GOSTR3410_94_B","","",null,null],[17,"ID_GOSTR3410_94_BBIS","","",null,null],[17,"ID_GOST28147_89_CC","","",null,null],[17,"ID_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",null,null],[17,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",null,null],[17,"ID_GOSTR3410_2001_PARAMSET_CC","","",null,null],[17,"CAMELLIA_128_CBC","","",null,null],[17,"CAMELLIA_192_CBC","","",null,null],[17,"CAMELLIA_256_CBC","","",null,null],[17,"ID_CAMELLIA128_WRAP","","",null,null],[17,"ID_CAMELLIA192_WRAP","","",null,null],[17,"ID_CAMELLIA256_WRAP","","",null,null],[17,"CAMELLIA_128_ECB","","",null,null],[17,"CAMELLIA_128_OFB128","","",null,null],[17,"CAMELLIA_128_CFB128","","",null,null],[17,"CAMELLIA_192_ECB","","",null,null],[17,"CAMELLIA_192_OFB128","","",null,null],[17,"CAMELLIA_192_CFB128","","",null,null],[17,"CAMELLIA_256_ECB","","",null,null],[17,"CAMELLIA_256_OFB128","","",null,null],[17,"CAMELLIA_256_CFB128","","",null,null],[17,"CAMELLIA_128_CFB1","","",null,null],[17,"CAMELLIA_192_CFB1","","",null,null],[17,"CAMELLIA_256_CFB1","","",null,null],[17,"CAMELLIA_128_CFB8","","",null,null],[17,"CAMELLIA_192_CFB8","","",null,null],[17,"CAMELLIA_256_CFB8","","",null,null],[17,"KISA","","",null,null],[17,"SEED_ECB","","",null,null],[17,"SEED_CBC","","",null,null],[17,"SEED_CFB128","","",null,null],[17,"SEED_OFB128","","",null,null],[17,"HMAC","","",null,null],[17,"CMAC","","",null,null],[17,"RC4_HMAC_MD5","","",null,null],[17,"AES_128_CBC_HMAC_SHA1","","",null,null],[17,"AES_192_CBC_HMAC_SHA1","","",null,null],[17,"AES_256_CBC_HMAC_SHA1","","",null,null],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"hash","","",23,null],[11,"from_raw","","",23,{"inputs":[{"name":"c_int"}],"output":{"name":"nid"}}],[11,"as_raw","","",23,null],[0,"pkcs12","openssl","PKCS #12 archives.",null,null],[3,"Pkcs12","openssl::pkcs12","",null,null],[3,"Pkcs12Ref","","",null,null],[3,"ParsedPkcs12","","",null,null],[12,"pkey","","",24,null],[12,"cert","","",24,null],[12,"chain","","",24,null],[11,"from_ptr","","",25,null],[11,"drop","","",25,null],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"parse","","Extracts the contents of the `Pkcs12`.",26,null],[11,"from_der","","Deserializes a value from DER-formatted data.",25,null],[0,"pkcs5","openssl","",null,null],[3,"KeyIvPair","openssl::pkcs5","",null,null],[12,"key","","",27,null],[12,"iv","","",27,null],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.",null,null],[11,"clone","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"hash","","",27,null],[11,"fmt","","",27,null],[0,"pkey","openssl","",null,null],[3,"PKey","openssl::pkey","",null,null],[3,"PKeyRef","","",null,null],[11,"from_ptr","","",28,null],[11,"drop","","",28,null],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"rsa","","Returns a copy of the internal RSA key.",29,null],[11,"dsa","","Returns a copy of the internal DSA key.",29,null],[11,"dh","","Returns a copy of the internal DH key.",29,null],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",29,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",29,null],[11,"private_key_to_pem","","Serializes the private key to PEM.",29,null],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and\npassphrase.",29,null],[11,"private_key_to_der","","Serializes the private key to DER.",29,null],[11,"public_key_to_der","","Serializes the public key to DER.",29,null],[11,"bits","","Returns the size of the key.",29,null],[11,"public_eq","","Compares the public component of this key with another.",29,null],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",28,{"inputs":[{"name":"rsa"}],"output":{"name":"result"}}],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",28,{"inputs":[{"name":"dsa"}],"output":{"name":"result"}}],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",28,{"inputs":[{"name":"dh"}],"output":{"name":"result"}}],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",28,{"inputs":[{"name":"eckey"}],"output":{"name":"result"}}],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",28,null],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",28,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is\nencrypted.",28,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the\nkey is encrypted.",28,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",28,null],[11,"private_key_from_pem_cb","","",28,null],[0,"rand","openssl","",null,null],[5,"rand_bytes","openssl::rand","",null,null],[0,"types","openssl","Items used by other types.",null,null],[8,"OpenSslType","openssl::types","A type implemented by wrappers over OpenSSL types.",null,null],[16,"CType","","The raw C type.",30,null],[16,"Ref","","The type representing a reference to this type.",30,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",30,null],[8,"OpenSslTypeRef","","A trait implemented by types which reference borrowed OpenSSL types.",null,null],[16,"CType","","The raw C type.",31,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",31,null],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",31,null],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",31,null],[0,"rsa","openssl","",null,null],[3,"Padding","openssl::rsa","Type of encryption padding to use.",null,null],[3,"Rsa","","",null,null],[3,"RsaRef","","",null,null],[17,"NO_PADDING","","",null,null],[17,"PKCS1_PADDING","","",null,null],[17,"PKCS1_OAEP_PADDING","","",null,null],[11,"clone","","",32,null],[11,"from_ptr","","",33,null],[11,"drop","","",33,null],[11,"deref","","",33,null],[11,"deref_mut","","",33,null],[11,"private_key_to_pem","","Serializes the private key to PEM.",34,null],[11,"private_key_to_pem_passphrase","","Serializes the private key to PEM, encrypting it with the specified symmetric cipher and\npassphrase.",34,null],[11,"public_key_to_pem","","Serializes a public key to PEM.",34,null],[11,"private_key_to_der","","Serializes the private key to DER.",34,null],[11,"public_key_to_der","","Serializes the public key to DER.",34,null],[11,"size","","",34,null],[11,"private_decrypt","","Decrypts data using the private key, returning the number of decrypted bytes.",34,null],[11,"private_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",34,null],[11,"public_decrypt","","Decrypts data using the public key, returning the number of decrypted bytes.",34,null],[11,"public_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",34,null],[11,"n","","",34,null],[11,"d","","",34,null],[11,"e","","",34,null],[11,"p","","",34,null],[11,"q","","",34,null],[11,"from_public_components","","only useful for associating the key material directly with the key, it&#39;s safer to use\nthe supplied load and save methods for DER formatted keys.",33,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_private_components","","",33,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"generate","","Generates a public/private key pair with the specified size.",33,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"private_key_from_pem","","Deserializes a PEM-formatted private key.",33,null],[11,"private_key_from_pem_passphrase","","Deserializes a PEM-formatted private key, using the supplied password if the key is\nencrypted.",33,null],[11,"private_key_from_pem_callback","","Deserializes a PEM-formatted private key, using a callback to retrieve a password if the\nkey is encrypted.",33,null],[11,"private_key_from_der","","Deserializes a private key from DER-formatted data.",33,null],[11,"public_key_from_pem","","Deserializes a public key from PEM-formatted data.",33,null],[11,"public_key_from_der","","Deserializes a public key from DER-formatted data.",33,null],[11,"private_key_from_pem_cb","","",33,null],[11,"fmt","","",33,null],[0,"sign","openssl","Message signatures.",null,null],[3,"Signer","openssl::sign","",null,null],[3,"Verifier","","",null,null],[11,"drop","","",35,null],[11,"new","","",35,{"inputs":[{"name":"messagedigest"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"update","","",35,null],[11,"finish","","",35,null],[11,"write","","",35,null],[11,"flush","","",35,null],[11,"drop","","",36,null],[11,"new","","",36,{"inputs":[{"name":"messagedigest"},{"name":"pkeyref"}],"output":{"name":"result"}}],[11,"update","","",36,null],[11,"finish","","",36,null],[11,"write","","",36,null],[11,"flush","","",36,null],[0,"ssl","openssl","SSL/TLS support.",null,null],[3,"SslConnectorBuilder","openssl::ssl","A builder for `SslConnector`s.",null,null],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",null,null],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",null,null],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",null,null],[3,"SslOption","","",null,null],[3,"SslMode","","",null,null],[3,"SslMethod","","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContextBuilder","","A builder for `SslContext`s.",null,null],[3,"SslContext","","",null,null],[3,"SslContextRef","","",null,null],[3,"CipherBits","","",null,null],[12,"secret","","The number of secret bits used for the cipher.",37,null],[12,"algorithm","","The number of bits processed by the chosen algorithm.",37,null],[3,"SslCipher","","",null,null],[3,"SslCipherRef","","",null,null],[3,"Ssl","","",null,null],[3,"SslRef","","",null,null],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",38,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",38,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",38,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",38,null],[13,"Stream","","An error reported by the underlying stream.",38,null],[13,"Ssl","","An error in the OpenSSL library.",38,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"SetupFailure","","Setup failed.",39,null],[13,"Failure","","The handshake failed.",39,null],[13,"Interrupted","","The handshake was interrupted midway through.",39,null],[4,"SniError","","An error returned from an SNI callback.",null,null],[13,"Fatal","","",40,null],[13,"Warning","","",40,null],[13,"NoAck","","",40,null],[4,"ShutdownResult","","The result of a shutdown request.",null,null],[13,"Sent","","A close notify message has been sent to the peer.",41,null],[13,"Received","","A close notify response message has been received from the peer.",41,null],[11,"fmt","","",38,null],[11,"fmt","","",38,null],[11,"description","","",38,null],[11,"cause","","",38,null],[11,"from","","",38,{"inputs":[{"name":"errorstack"}],"output":{"name":"error"}}],[11,"fmt","","",39,null],[11,"description","","",39,null],[11,"cause","","",39,null],[11,"fmt","","",39,null],[11,"from","","",39,{"inputs":[{"name":"errorstack"}],"output":{"name":"handshakeerror"}}],[11,"new","","Creates a new builder for TLS connections.",42,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"builder","","Returns a shared reference to the inner `SslContextBuilder`.",42,null],[11,"builder_mut","","Returns a mutable reference to the inner `SslContextBuilder`.",42,null],[11,"build","","Consumes the builder, returning a `SslConnector`.",42,null],[11,"clone","","",43,null],[11,"connect","","Initiates a client-side TLS session on a stream.",43,null],[11,"danger_connect_without_providing_domain_for_certificate_verification_and_server_name_indication","","Initiates a client-side TLS session on a stream without performing hostname verification.",43,null],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy clients. This should generally be\nconsidered a reasonable default choice.",44,{"inputs":[{"name":"sslmethod"},{"name":"pkeyref"},{"name":"x509ref"},{"name":"i"}],"output":{"name":"result"}}],[11,"mozilla_modern","","Creates a new builder configured to connect to modern clients.",44,{"inputs":[{"name":"sslmethod"},{"name":"pkeyref"},{"name":"x509ref"},{"name":"i"}],"output":{"name":"result"}}],[11,"builder","","Returns a shared reference to the inner `SslContextBuilder`.",44,null],[11,"builder_mut","","Returns a mutable reference to the inner `SslContextBuilder`.",44,null],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",44,null],[11,"clone","","",45,null],[11,"accept","","Initiates a server-side TLS session on a stream.",45,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server&#39;s certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server&#39;s certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate.\nUse together with SSL_VERIFY_PEER.",null,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"clone","","",46,null],[11,"partial_cmp","","",46,null],[11,"lt","","",46,null],[11,"le","","",46,null],[11,"gt","","",46,null],[11,"ge","","",46,null],[11,"cmp","","",46,null],[11,"hash","","",46,null],[11,"fmt","","",46,null],[11,"empty","","Returns an empty set of flags.",46,{"inputs":[],"output":{"name":"ssloption"}}],[11,"all","","Returns the set containing all flags.",46,{"inputs":[],"output":{"name":"ssloption"}}],[11,"bits","","Returns the raw value of the flags currently stored.",46,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",46,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",46,{"inputs":[{"name":"c_ulong"}],"output":{"name":"ssloption"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,null],[11,"is_all","","Returns `true` if all flags are currently set.",46,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,null],[11,"insert","","Inserts the specified flags in-place.",46,null],[11,"remove","","Removes the specified flags in-place.",46,null],[11,"toggle","","Toggles the specified flags in-place.",46,null],[11,"bitor","","Returns the union of the two sets of flags.",46,null],[11,"bitor_assign","","Adds the set of flags.",46,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,null],[11,"bitxor_assign","","Toggles the set of flags.",46,null],[11,"bitand","","Returns the intersection between the two sets of flags.",46,null],[11,"bitand_assign","","Disables all flags disabled in the set.",46,null],[11,"sub","","Returns the set difference of the two sets of flags.",46,null],[11,"sub_assign","","Disables all flags enabled in the set.",46,null],[11,"not","","Returns the complement of this set of flags.",46,null],[11,"extend","","",46,null],[11,"from_iter","","",46,{"inputs":[{"name":"t"}],"output":{"name":"ssloption"}}],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"clone","","",47,null],[11,"partial_cmp","","",47,null],[11,"lt","","",47,null],[11,"le","","",47,null],[11,"gt","","",47,null],[11,"ge","","",47,null],[11,"cmp","","",47,null],[11,"hash","","",47,null],[11,"fmt","","",47,null],[11,"empty","","Returns an empty set of flags.",47,{"inputs":[],"output":{"name":"sslmode"}}],[11,"all","","Returns the set containing all flags.",47,{"inputs":[],"output":{"name":"sslmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",47,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",47,{"inputs":[{"name":"c_long"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",47,{"inputs":[{"name":"c_long"}],"output":{"name":"sslmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,null],[11,"is_all","","Returns `true` if all flags are currently set.",47,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",47,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",47,null],[11,"insert","","Inserts the specified flags in-place.",47,null],[11,"remove","","Removes the specified flags in-place.",47,null],[11,"toggle","","Toggles the specified flags in-place.",47,null],[11,"bitor","","Returns the union of the two sets of flags.",47,null],[11,"bitor_assign","","Adds the set of flags.",47,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",47,null],[11,"bitxor_assign","","Toggles the set of flags.",47,null],[11,"bitand","","Returns the intersection between the two sets of flags.",47,null],[11,"bitand_assign","","Disables all flags disabled in the set.",47,null],[11,"sub","","Returns the set difference of the two sets of flags.",47,null],[11,"sub_assign","","Disables all flags enabled in the set.",47,null],[11,"not","","Returns the complement of this set of flags.",47,null],[11,"extend","","",47,null],[11,"from_iter","","",47,{"inputs":[{"name":"t"}],"output":{"name":"sslmode"}}],[11,"clone","","",48,null],[11,"tls","","Support all versions of the TLS protocol.",48,{"inputs":[],"output":{"name":"sslmethod"}}],[11,"dtls","","Support all versions of the DTLS protocol.",48,{"inputs":[],"output":{"name":"sslmethod"}}],[11,"from_ptr","","",48,null],[11,"as_ptr","","",48,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"clone","","",49,null],[11,"partial_cmp","","",49,null],[11,"lt","","",49,null],[11,"le","","",49,null],[11,"gt","","",49,null],[11,"ge","","",49,null],[11,"cmp","","",49,null],[11,"hash","","",49,null],[11,"fmt","","",49,null],[11,"empty","","Returns an empty set of flags.",49,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",49,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",49,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",49,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",49,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",49,null],[11,"is_all","","Returns `true` if all flags are currently set.",49,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",49,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",49,null],[11,"insert","","Inserts the specified flags in-place.",49,null],[11,"remove","","Removes the specified flags in-place.",49,null],[11,"toggle","","Toggles the specified flags in-place.",49,null],[11,"bitor","","Returns the union of the two sets of flags.",49,null],[11,"bitor_assign","","Adds the set of flags.",49,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",49,null],[11,"bitxor_assign","","Toggles the set of flags.",49,null],[11,"bitand","","Returns the intersection between the two sets of flags.",49,null],[11,"bitand_assign","","Disables all flags disabled in the set.",49,null],[11,"sub","","Returns the set difference of the two sets of flags.",49,null],[11,"sub_assign","","Disables all flags enabled in the set.",49,null],[11,"not","","Returns the complement of this set of flags.",49,null],[11,"extend","","",49,null],[11,"from_iter","","",49,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"drop","","",50,null],[11,"new","","",50,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"from_ptr","","",50,null],[11,"as_ptr","","",50,null],[11,"set_verify","","Configures the certificate verification method for new connections.",50,null],[11,"set_verify_callback","","Configures the certificate verification method for new connections and\nregisters a verification callback.",50,null],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",50,null],[11,"set_verify_depth","","Sets verification depth",50,null],[11,"set_read_ahead","","",50,null],[11,"set_mode","","",50,null],[11,"set_tmp_dh","","",50,null],[11,"set_tmp_dh_callback","","",50,null],[11,"set_tmp_ecdh","","",50,null],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",50,null],[11,"set_ca_file","","Specifies the file that contains trusted CA certificates.",50,null],[11,"set_client_ca_list","","Sets the list of CAs sent to the client.",50,null],[11,"set_session_id_context","","Set the context identifier for sessions",50,null],[11,"set_certificate_file","","Specifies the file that contains certificate",50,null],[11,"set_certificate_chain_file","","Specifies the file that contains certificate chain",50,null],[11,"set_certificate","","Specifies the certificate",50,null],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",50,null],[11,"set_private_key_file","","Specifies the file that contains private key",50,null],[11,"set_private_key","","Specifies the private key",50,null],[11,"set_cipher_list","","",50,null],[11,"set_options","","",50,null],[11,"options","","",50,null],[11,"clear_options","","",50,null],[11,"set_npn_protocols","","Set the protocols to be used during Next Protocol Negotiation (the protocols\nsupported by the application).",50,null],[11,"check_private_key","","Checks consistency between the private key and certificate.",50,null],[11,"cert_store","","Returns a shared reference to the context&#39;s certificate store.",50,null],[11,"cert_store_mut","","Returns a mutable reference to the context&#39;s certificate store.",50,null],[11,"build","","",50,null],[11,"from_ptr","","",51,null],[11,"drop","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"builder","","",51,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"from_ptr","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"name","","Returns the name of cipher.",53,null],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",53,null],[11,"bits","","Returns the number of bits used for the cipher.",53,null],[11,"description","","Returns a textual description of the cipher used",53,null],[11,"from_ptr","","",54,null],[11,"drop","","",54,null],[11,"deref","","",54,null],[11,"deref_mut","","",54,null],[11,"fmt","","",55,null],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",55,null],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the\nhandshake process.",55,null],[11,"set_tmp_dh","","",55,null],[11,"set_tmp_dh_callback","","",55,null],[11,"set_tmp_ecdh","","",55,null],[11,"current_cipher","","",55,null],[11,"state_string","","",55,null],[11,"state_string_long","","",55,null],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",55,null],[11,"peer_certificate","","Returns the certificate of the peer, if present.",55,null],[11,"certificate","","Returns the certificate associated with this `Ssl`, if present.",55,null],[11,"private_key","","Returns the private key associated with this `Ssl`, if present.",55,null],[11,"version","","Returns the name of the protocol used for the connection, e.g. &quot;TLSv1.2&quot;, &quot;SSLv3&quot;, etc.",55,null],[11,"selected_npn_protocol","","Returns the protocol selected by performing Next Protocol Negotiation, if any.",55,null],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS\nrecord.",55,null],[11,"compression","","Returns the compression currently in use.",55,null],[11,"servername","","Returns the server&#39;s name for the current connection",55,null],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",55,null],[11,"ssl_context","","Returns the context corresponding to the current connection",55,null],[11,"verify_result","","Returns the result of X509 certificate verification.",55,null],[11,"fmt","","",54,null],[11,"new","","",54,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",54,null],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",54,null],[11,"fmt","","",56,null],[11,"get_ref","","Returns a shared reference to the inner stream.",56,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",56,null],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",56,null],[11,"error","","Returns the underlying error which interrupted this handshake.",56,null],[11,"into_error","","Consumes `self`, returning its error.",56,null],[11,"handshake","","Restarts the handshake process.",56,null],[11,"fmt","","",57,null],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",57,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",57,null],[11,"shutdown","","Shuts down the session.",57,null],[11,"get_ref","","Returns a reference to the underlying stream.",57,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",57,null],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",57,null],[11,"read","","",57,null],[11,"write","","",57,null],[11,"flush","","",57,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[0,"symm","openssl","",null,null],[3,"Cipher","openssl::symm","",null,null],[3,"Crypter","","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",58,null],[13,"Decrypt","","",58,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",null,null],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",null,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"aes_128_ecb","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cbc","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_xts","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_ctr","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb1","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb128","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_cfb8","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_128_gcm","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_ecb","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cbc","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_xts","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_ctr","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb1","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb128","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_cfb8","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"aes_256_gcm","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_cbc","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_ecb","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_cfb64","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"bf_ofb","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"des_cbc","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"des_ecb","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"rc4","","",59,{"inputs":[],"output":{"name":"cipher"}}],[11,"from_ptr","","",59,null],[11,"as_ptr","","",59,null],[11,"key_len","","Returns the length of keys used with this cipher.",59,null],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the\ncipher does not use an IV.",59,null],[11,"block_size","","Returns the block size of the cipher.",59,null],[11,"new","","Creates a new `Crypter`.",60,null],[11,"pad","","Enables or disables padding.",60,null],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",60,null],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the cipher.",60,null],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted\nbytes into `output`.",60,null],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data\nto `output`.",60,null],[11,"get_tag","","Retrieves the authentication tag used to authenticate ciphertext in AEAD ciphers such\nas AES GCM.",60,null],[11,"drop","","",60,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, &quot;OpenSSL 0.9.5a 1 Apr 2000&quot;.",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form &quot;compiler: ...&quot; if available or\n&quot;compiler: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form &quot;built on: ...&quot; if available or &quot;built on: date not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The &quot;Configure&quot; target of the library build in the form &quot;platform: ...&quot; if available or &quot;platform: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The &quot;OPENSSLDIR&quot; setting of the library build in the form &quot;OPENSSLDIR: &quot;...&quot;&quot; if available or &quot;OPENSSLDIR: N/A&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[0,"x509","openssl","",null,null],[3,"X509FileType","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509StoreContextRef","","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","",null,null],[3,"X509Ref","","",null,null],[3,"X509Name","","",null,null],[3,"X509NameRef","","",null,null],[3,"X509NameEntries","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509NameEntryRef","","",null,null],[3,"X509Req","","",null,null],[3,"X509ReqRef","","",null,null],[3,"X509VerifyError","","",null,null],[3,"GeneralName","","",null,null],[3,"GeneralNameRef","","",null,null],[0,"extension","","",null,null],[4,"ExtensionType","openssl::x509::extension","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",61,null],[13,"ExtKeyUsage","","",61,null],[13,"SubjectAltName","","",61,null],[13,"IssuerAltName","","",61,null],[13,"OtherNid","","",61,null],[13,"OtherStr","","",61,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",62,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",62,null],[13,"SubjectAltName","","Subject Alternative Names",62,null],[13,"IssuerAltName","","Issuer Alternative Names",62,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",62,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",62,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",63,null],[13,"NonRepudiation","","",63,null],[13,"KeyEncipherment","","",63,null],[13,"DataEncipherment","","",63,null],[13,"KeyAgreement","","",63,null],[13,"KeyCertSign","","",63,null],[13,"CRLSign","","",63,null],[13,"EncipherOnly","","",63,null],[13,"DecipherOnly","","",63,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",64,null],[13,"ClientAuth","","",64,null],[13,"CodeSigning","","",64,null],[13,"EmailProtection","","",64,null],[13,"TimeStamping","","",64,null],[13,"MsCodeInd","","",64,null],[13,"MsCodeCom","","",64,null],[13,"MsCtlSign","","",64,null],[13,"MsSgc","","",64,null],[13,"MsEfs","","",64,null],[13,"NsSgc","","",64,null],[13,"Other","","An arbitrary key usage by OID.",64,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",65,null],[13,"Email","","",65,null],[13,"DNS","","",65,null],[13,"Directory","","",65,null],[13,"URI","","",65,null],[13,"IPAddress","","",65,null],[13,"RegisteredID","","",65,null],[11,"clone","","",61,null],[11,"hash","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"clone","","",62,null],[11,"get_type","","",62,null],[11,"get_nid","","",61,null],[11,"get_name","","",61,null],[11,"to_string","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[0,"store","openssl::x509","",null,null],[3,"X509StoreBuilder","openssl::x509::store","",null,null],[3,"X509StoreBuilderRef","","",null,null],[11,"from_ptr","","",66,null],[11,"drop","","",66,null],[11,"deref","","",66,null],[11,"deref_mut","","",66,null],[11,"add_cert","","Adds a certificate to the certificate store.",67,null],[17,"X509_FILETYPE_PEM","openssl::x509","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[11,"as_raw","","",68,null],[11,"from_ptr","","",69,null],[11,"drop","","",69,null],[11,"deref","","",69,null],[11,"deref_mut","","",69,null],[11,"error","","",70,null],[11,"current_cert","","",70,null],[11,"error_depth","","",70,null],[11,"chain","","",70,null],[11,"new","","Creates a new generator with the following defaults:",71,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",71,null],[11,"add_name","","Add attribute to the name of the certificate",71,null],[11,"add_names","","Add multiple attributes to the name of the certificate",71,null],[11,"add_extension","","Add an extension to a certificate",71,null],[11,"add_extensions","","Add multiple extensions to a certificate",71,null],[11,"set_sign_hash","","",71,null],[11,"sign","","Sets the certificate public-key, then self-sign and return it",71,null],[11,"request","","Obtain a certificate signing request (CSR)",71,null],[11,"from_ptr","","",72,null],[11,"drop","","",72,null],[11,"deref","","",72,null],[11,"deref_mut","","",72,null],[11,"subject_name","","",73,null],[11,"subject_alt_names","","Returns this certificate&#39;s SAN entries, if they exist.",73,null],[11,"public_key","","",73,null],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",73,null],[11,"not_after","","Returns certificate Not After validity period.",73,null],[11,"not_before","","Returns certificate Not Before validity period.",73,null],[11,"to_pem","","Serializes this value to PEM.",73,null],[11,"to_der","","Serializes this value to DER.",73,null],[11,"to_owned","","",73,null],[11,"from_pem","","Deserializes a value from PEM-formatted data.",72,null],[11,"from_der","","Deserializes a value from DER-formatted data.",72,null],[11,"clone","","",72,null],[11,"as_ref","","",72,null],[11,"as_ref","","",73,null],[11,"borrow","","",72,null],[11,"from_ptr","","",74,null],[11,"drop","","",74,null],[11,"deref","","",74,null],[11,"deref_mut","","",74,null],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted certificates.",74,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"entries_by_nid","","",75,null],[11,"next","","",76,null],[11,"from_ptr","","",77,null],[11,"drop","","",77,null],[11,"deref","","",77,null],[11,"deref_mut","","",77,null],[11,"data","","",78,null],[11,"from_ptr","","",79,null],[11,"drop","","",79,null],[11,"deref","","",79,null],[11,"deref_mut","","",79,null],[11,"from_pem","","Reads CSR from PEM",79,null],[11,"from_der","","Deserializes a value from DER-formatted data.",79,null],[11,"to_pem","","Serializes this value to PEM.",80,null],[11,"to_der","","Serializes this value to DER.",80,null],[11,"fmt","","",81,null],[11,"fmt","","",81,null],[11,"description","","",81,null],[11,"from_raw","","Creates an `X509VerifyError` from a raw error number.",81,{"inputs":[{"name":"c_long"}],"output":{"name":"option"}}],[11,"as_raw","","",81,null],[11,"error_string","","",81,null],[11,"from_ptr","","",82,null],[11,"drop","","",82,null],[11,"deref","","",82,null],[11,"deref_mut","","",82,null],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",83,null],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",83,null],[0,"stack","openssl","",null,null],[3,"Stack","openssl::stack","An owned stack of `T`.",null,null],[3,"IntoIter","","",null,null],[3,"StackRef","","",null,null],[3,"Iter","","An iterator over the stack&#39;s contents.",null,null],[3,"IterMut","","A mutable iterator over the stack&#39;s contents.",null,null],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",null,null],[16,"StackType","","The C stack type for this element.",84,null],[11,"from_ptr","","Return a new Stack&lt;T&gt;, taking ownership of the handle",85,null],[11,"drop","","",85,null],[11,"into_iter","","",85,null],[11,"as_ref","","",85,null],[11,"borrow","","",85,null],[11,"from_ptr","","",85,null],[11,"deref","","",85,null],[11,"deref_mut","","",85,null],[11,"drop","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"len","","Returns the number of items in the stack",87,null],[11,"iter","","",87,null],[11,"iter_mut","","",87,null],[11,"get","","Returns a reference to the element at the given index in the\nstack or `None` if the index is out of bounds",87,null],[11,"get_mut","","Returns a mutable reference to the element at the given index in the\nstack or `None` if the index is out of bounds",87,null],[11,"pop","","Removes the last element from the stack and returns it.",87,null],[11,"index","","",87,null],[11,"index_mut","","",87,null],[11,"next","","",88,null],[11,"size_hint","","",88,null],[11,"next","","",89,null],[11,"size_hint","","",89,null]],"paths":[[3,"Asn1Time"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1StringRef"],[3,"BigNumContext"],[3,"BigNumRef"],[3,"BigNum"],[3,"CryptoString"],[3,"Dh"],[3,"DhRef"],[3,"Dsa"],[3,"DsaRef"],[3,"PointConversionForm"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPoint"],[3,"EcPointRef"],[3,"EcKey"],[3,"EcKeyRef"],[3,"ErrorStack"],[3,"Error"],[3,"MessageDigest"],[3,"Hasher"],[3,"Nid"],[3,"ParsedPkcs12"],[3,"Pkcs12"],[3,"Pkcs12Ref"],[3,"KeyIvPair"],[3,"PKey"],[3,"PKeyRef"],[8,"OpenSslType"],[8,"OpenSslTypeRef"],[3,"Padding"],[3,"Rsa"],[3,"RsaRef"],[3,"Signer"],[3,"Verifier"],[3,"CipherBits"],[4,"Error"],[4,"HandshakeError"],[4,"SniError"],[4,"ShutdownResult"],[3,"SslConnectorBuilder"],[3,"SslConnector"],[3,"SslAcceptorBuilder"],[3,"SslAcceptor"],[3,"SslOption"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslCipher"],[3,"SslCipherRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509FileType"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Generator"],[3,"X509"],[3,"X509Ref"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"X509NameEntryRef"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyError"],[3,"GeneralName"],[3,"GeneralNameRef"],[8,"Stackable"],[3,"Stack"],[3,"IntoIter"],[3,"StackRef"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["cookie"] = {"doc":"","items":[[3,"CookieJar","cookie","A jar of cookies for managing a session",null,null],[3,"Cookie","","",null,null],[12,"name","","",0,null],[12,"value","","",0,null],[12,"expires","","",0,null],[12,"max_age","","",0,null],[12,"domain","","",0,null],[12,"path","","",0,null],[12,"secure","","",0,null],[12,"httponly","","",0,null],[12,"custom","","",0,null],[3,"Error","","",null,null],[3,"AttrVal","","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",2,null],[11,"add_original","","Adds an original cookie from a request.",2,null],[11,"add","","Adds a new cookie to this cookie jar.",2,null],[11,"remove","","Removes a cookie from this cookie jar.",2,null],[11,"clear","","Clears all cookies from this cookie jar.",2,null],[11,"find","","Finds a cookie inside of this cookie jar.",2,null],[11,"permanent","","Creates a child jar for permanent cookie storage.",2,null],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",2,null],[11,"iter","","Return an iterator over the cookies in this jar.",2,null],[11,"fmt","","",2,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",3,null],[11,"new","","",0,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Cookie"],[3,"AttrVal"],[3,"CookieJar"],[3,"Error"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"stack_st_ASN1_OBJECT","openssl_sys","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",1,null],[3,"stack_st_X509_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_X509_ATTRIBUTE","","",null,null],[12,"stack","","",3,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",4,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",5,null],[3,"stack_st_void","","",null,null],[12,"stack","","",6,null],[3,"_STACK","","",null,null],[12,"num","","",7,null],[12,"data","","",7,null],[12,"sorted","","",7,null],[12,"num_alloc","","",7,null],[12,"comp","","",7,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",8,null],[12,"name","","",8,null],[12,"bwrite","","",8,null],[12,"bread","","",8,null],[12,"bputs","","",8,null],[12,"bgets","","",8,null],[12,"ctrl","","",8,null],[12,"create","","",8,null],[12,"destroy","","",8,null],[12,"callback_ctrl","","",8,null],[3,"RSA","","",null,null],[12,"pad","","",9,null],[12,"version","","",9,null],[12,"meth","","",9,null],[12,"engine","","",9,null],[12,"n","","",9,null],[12,"e","","",9,null],[12,"d","","",9,null],[12,"p","","",9,null],[12,"q","","",9,null],[12,"dmp1","","",9,null],[12,"dmq1","","",9,null],[12,"iqmp","","",9,null],[12,"ex_data","","",9,null],[12,"references","","",9,null],[12,"flags","","",9,null],[12,"_method_mod_n","","",9,null],[12,"_method_mod_p","","",9,null],[12,"_method_mod_q","","",9,null],[12,"bignum_data","","",9,null],[12,"blinding","","",9,null],[12,"mt_blinding","","",9,null],[3,"DSA","","",null,null],[12,"pad","","",10,null],[12,"version","","",10,null],[12,"write_params","","",10,null],[12,"p","","",10,null],[12,"q","","",10,null],[12,"g","","",10,null],[12,"pub_key","","",10,null],[12,"priv_key","","",10,null],[12,"kinv","","",10,null],[12,"r","","",10,null],[12,"flags","","",10,null],[12,"method_mont_p","","",10,null],[12,"references","","",10,null],[12,"ex_data","","",10,null],[12,"meth","","",10,null],[12,"engine","","",10,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",11,null],[12,"save_type","","",11,null],[12,"references","","",11,null],[12,"ameth","","",11,null],[12,"engine","","",11,null],[12,"pkey","","",11,null],[12,"save_parameters","","",11,null],[12,"attributes","","",11,null],[3,"BIO","","",null,null],[12,"method","","",12,null],[12,"callback","","",12,null],[12,"cb_arg","","",12,null],[12,"init","","",12,null],[12,"shutdown","","",12,null],[12,"flags","","",12,null],[12,"retry_reason","","",12,null],[12,"num","","",12,null],[12,"ptr","","",12,null],[12,"next_bio","","",12,null],[12,"prev_bio","","",12,null],[12,"references","","",12,null],[12,"num_read","","",12,null],[12,"num_write","","",12,null],[12,"ex_data","","",12,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",13,null],[12,"dummy","","",13,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",14,null],[12,"block_size","","",14,null],[12,"key_len","","",14,null],[12,"iv_len","","",14,null],[12,"flags","","",14,null],[12,"init","","",14,null],[12,"do_cipher","","",14,null],[12,"cleanup","","",14,null],[12,"ctx_size","","",14,null],[12,"set_asn1_parameters","","",14,null],[12,"get_asn1_parameters","","",14,null],[12,"ctrl","","",14,null],[12,"app_data","","",14,null],[3,"HMAC_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",15,null],[12,"top","","",15,null],[12,"dmax","","",15,null],[12,"neg","","",15,null],[12,"flags","","",15,null],[3,"DH","","",null,null],[12,"pad","","",16,null],[12,"version","","",16,null],[12,"p","","",16,null],[12,"g","","",16,null],[12,"length","","",16,null],[12,"pub_key","","",16,null],[12,"priv_key","","",16,null],[12,"flags","","",16,null],[12,"method_mont_p","","",16,null],[12,"q","","",16,null],[12,"j","","",16,null],[12,"seed","","",16,null],[12,"seedlen","","",16,null],[12,"counter","","",16,null],[12,"references","","",16,null],[12,"ex_data","","",16,null],[12,"meth","","",16,null],[12,"engine","","",16,null],[3,"X509","","",null,null],[12,"cert_info","","",17,null],[12,"valid","","",17,null],[12,"references","","",17,null],[12,"name","","",17,null],[12,"ex_data","","",17,null],[12,"ex_pathlen","","",17,null],[12,"ex_pcpathlen","","",17,null],[12,"ex_flags","","",17,null],[12,"ex_kusage","","",17,null],[12,"ex_xkusage","","",17,null],[12,"ex_nscert","","",17,null],[3,"X509_CINF","","",null,null],[12,"validity","","",18,null],[12,"extensions","","",18,null],[3,"ASN1_ENCODING","","",null,null],[12,"enc","","",19,null],[12,"len","","",19,null],[12,"modified","","",19,null],[3,"X509_VAL","","",null,null],[12,"notBefore","","",20,null],[12,"notAfter","","",20,null],[3,"SSL_CTX","","",null,null],[12,"references","","",21,null],[3,"SRP_CTX","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",22,null],[12,"d","","",22,null],[3,"X509V3_CTX","","",null,null],[4,"ASN1_INTEGER","","",null,null],[4,"ASN1_STRING","","",null,null],[4,"ASN1_TIME","","",null,null],[4,"ASN1_TYPE","","",null,null],[4,"BN_CTX","","",null,null],[4,"BN_GENCB","","",null,null],[4,"CONF","","",null,null],[4,"COMP_METHOD","","",null,null],[4,"EC_KEY","","",null,null],[4,"EC_GROUP","","",null,null],[4,"EC_METHOD","","",null,null],[4,"EC_POINT","","",null,null],[4,"ENGINE","","",null,null],[4,"EVP_CIPHER_CTX","","",null,null],[4,"EVP_MD","","",null,null],[4,"EVP_PKEY_CTX","","",null,null],[4,"SSL","","",null,null],[4,"SSL_CIPHER","","",null,null],[4,"SSL_METHOD","","",null,null],[4,"X509_CRL","","",null,null],[4,"X509_EXTENSION","","",null,null],[4,"X509_NAME","","",null,null],[4,"X509_NAME_ENTRY","","",null,null],[4,"X509_REQ","","",null,null],[4,"X509_STORE","","",null,null],[4,"X509_STORE_CTX","","",null,null],[4,"bio_st","","",null,null],[4,"PKCS12","","",null,null],[4,"DH_METHOD","","",null,null],[4,"RSA_METHOD","","",null,null],[4,"BN_MONT_CTX","","",null,null],[4,"BN_BLINDING","","",null,null],[4,"DSA_METHOD","","",null,null],[4,"EVP_PKEY_ASN1_METHOD","","",null,null],[4,"point_conversion_form_t","","",null,null],[13,"POINT_CONVERSION_COMPRESSED","","",23,null],[13,"POINT_CONVERSION_UNCOMPRESSED","","",23,null],[13,"POINT_CONVERSION_HYBRID","","",23,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_set_tmp_ecdh","","",null,null],[5,"SSL_set_tmp_dh","","",null,null],[5,"SSL_set_tmp_ecdh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"ERR_GET_LIB","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"ERR_GET_FUNC","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"ERR_GET_REASON","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"c_int"}}],[5,"BIO_new","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"get_rfc2409_prime_768","","",null,null],[5,"get_rfc2409_prime_1024","","",null,null],[5,"get_rfc3526_prime_1536","","",null,null],[5,"get_rfc3526_prime_2048","","",null,null],[5,"get_rfc3526_prime_3072","","",null,null],[5,"get_rfc3526_prime_4096","","",null,null],[5,"get_rfc3526_prime_6144","","",null,null],[5,"get_rfc3526_prime_8192","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"TLSv1_1_method","","",null,null],[5,"TLSv1_2_method","","",null,null],[5,"DTLSv1_method","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_tmp_ecdh_callback","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_tmp_ecdh_callback","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"X509_STORE_CTX_get_chain","","",null,null],[5,"X509V3_EXT_nconf_nid","","",null,null],[5,"X509V3_EXT_nconf","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"CRYPTO_add_lock","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_bits","","",null,null],[5,"sk_num","","",null,null],[5,"sk_value","","",null,null],[5,"sk_free","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear","","",null,null],[5,"BN_free","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_new","","",null,null],[5,"DH_free","","",null,null],[5,"EC_KEY_new","","",null,null],[5,"EC_KEY_new_by_curve_name","","",null,null],[5,"EC_KEY_set_group","","",null,null],[5,"EC_KEY_get0_group","","",null,null],[5,"EC_KEY_set_public_key","","",null,null],[5,"EC_KEY_get0_public_key","","",null,null],[5,"EC_KEY_set_private_key","","",null,null],[5,"EC_KEY_get0_private_key","","",null,null],[5,"EC_KEY_generate_key","","",null,null],[5,"EC_KEY_check_key","","",null,null],[5,"EC_KEY_free","","",null,null],[5,"EC_GF2m_simple_method","","",null,null],[5,"EC_GROUP_new","","",null,null],[5,"EC_GROUP_new_curve_GFp","","",null,null],[5,"EC_GROUP_new_curve_GF2m","","",null,null],[5,"EC_GROUP_new_by_curve_name","","",null,null],[5,"EC_GROUP_get_curve_GFp","","",null,null],[5,"EC_GROUP_get_curve_GF2m","","",null,null],[5,"EC_GROUP_get_degree","","",null,null],[5,"EC_GROUP_get_order","","",null,null],[5,"EC_GROUP_free","","",null,null],[5,"EC_POINT_new","","",null,null],[5,"EC_POINT_add","","",null,null],[5,"EC_POINT_mul","","",null,null],[5,"EC_POINT_invert","","",null,null],[5,"EC_POINT_point2oct","","",null,null],[5,"EC_POINT_oct2point","","",null,null],[5,"EC_POINT_cmp","","",null,null],[5,"EC_POINT_free","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_xts","","",null,null],[5,"EVP_aes_128_ctr","","",null,null],[5,"EVP_aes_128_gcm","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_xts","","",null,null],[5,"EVP_aes_256_ctr","","",null,null],[5,"EVP_aes_256_gcm","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_bf_cbc","","",null,null],[5,"EVP_bf_ecb","","",null,null],[5,"EVP_bf_cfb64","","",null,null],[5,"EVP_bf_ofb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_ctrl","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_DigestSignInit","","",null,null],[5,"EVP_DigestSignFinal","","",null,null],[5,"EVP_DigestVerifyInit","","",null,null],[5,"EVP_DigestVerifyFinal","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_get1_DSA","","",null,null],[5,"EVP_PKEY_get1_DH","","",null,null],[5,"EVP_PKEY_get1_EC_KEY","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"EVP_PKEY_new_mac_key","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DHparams","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PKCS8PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PEM_write_bio_ECPrivateKey","","",null,null],[5,"PEM_read_bio_ECPrivateKey","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"PKCS5_PBKDF2_HMAC","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RAND_status","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_get_verify_result","","",null,null],[5,"SSL_shutdown","","",null,null],[5,"SSL_get_certificate","","",null,null],[5,"SSL_get_privatekey","","",null,null],[5,"SSL_load_client_CA_file","","",null,null],[5,"SSL_set_tmp_dh_callback","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_client_CA_list","","",null,null],[5,"SSL_CTX_get_cert_store","","",null,null],[5,"SSL_CTX_set_tmp_dh_callback","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_set_next_protos_advertised_cb","","",null,null],[5,"SSL_CTX_set_next_proto_select_cb","","",null,null],[5,"SSL_select_next_proto","","",null,null],[5,"SSL_get0_next_proto_negotiated","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_verify_cert_error_string","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_ENTRY_free","","",null,null],[5,"ASN1_STRING_free","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"X509_STORE_free","","",null,null],[5,"X509_STORE_add_cert","","",null,null],[5,"X509_STORE_CTX_free","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_DHparams","","",null,null],[5,"i2d_DHparams","","",null,null],[5,"d2i_DSAPublicKey","","",null,null],[5,"i2d_DSAPublicKey","","",null,null],[5,"d2i_DSAPrivateKey","","",null,null],[5,"i2d_DSAPrivateKey","","",null,null],[5,"d2i_ECPrivateKey","","",null,null],[5,"i2d_ECPrivateKey","","",null,null],[5,"d2i_X509","","",null,null],[5,"d2i_X509_REQ","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_X509_REQ","","",null,null],[5,"i2d_PUBKEY_bio","","",null,null],[5,"i2d_PrivateKey_bio","","",null,null],[5,"i2d_PUBKEY","","",null,null],[5,"i2d_PrivateKey","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_Final","","",null,null],[6,"bio_info_cb","","",null,null],[6,"BN_ULONG","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"CRYPTO_LOCK_X509","","",null,null],[17,"CRYPTO_LOCK_SSL_CTX","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"EVP_PKEY_HMAC","","",null,null],[17,"EVP_PKEY_DSA","","",null,null],[17,"EVP_PKEY_DH","","",null,null],[17,"EVP_PKEY_EC","","",null,null],[17,"EVP_CTRL_GCM_SET_IVLEN","","",null,null],[17,"EVP_CTRL_GCM_GET_TAG","","",null,null],[17,"EVP_CTRL_GCM_SET_TAG","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_undef","","",null,null],[17,"NID_itu_t","","",null,null],[17,"NID_ccitt","","",null,null],[17,"NID_iso","","",null,null],[17,"NID_joint_iso_itu_t","","",null,null],[17,"NID_joint_iso_ccitt","","",null,null],[17,"NID_member_body","","",null,null],[17,"NID_identified_organization","","",null,null],[17,"NID_hmac_md5","","",null,null],[17,"NID_hmac_sha1","","",null,null],[17,"NID_certicom_arc","","",null,null],[17,"NID_international_organizations","","",null,null],[17,"NID_wap","","",null,null],[17,"NID_wap_wsg","","",null,null],[17,"NID_selected_attribute_types","","",null,null],[17,"NID_clearance","","",null,null],[17,"NID_ISO_US","","",null,null],[17,"NID_X9_57","","",null,null],[17,"NID_X9cm","","",null,null],[17,"NID_dsa","","",null,null],[17,"NID_dsaWithSHA1","","",null,null],[17,"NID_ansi_X9_62","","",null,null],[17,"NID_X9_62_prime_field","","",null,null],[17,"NID_X9_62_characteristic_two_field","","",null,null],[17,"NID_X9_62_id_characteristic_two_basis","","",null,null],[17,"NID_X9_62_onBasis","","",null,null],[17,"NID_X9_62_tpBasis","","",null,null],[17,"NID_X9_62_ppBasis","","",null,null],[17,"NID_X9_62_id_ecPublicKey","","",null,null],[17,"NID_X9_62_c2pnb163v1","","",null,null],[17,"NID_X9_62_c2pnb163v2","","",null,null],[17,"NID_X9_62_c2pnb163v3","","",null,null],[17,"NID_X9_62_c2pnb176v1","","",null,null],[17,"NID_X9_62_c2tnb191v1","","",null,null],[17,"NID_X9_62_c2tnb191v2","","",null,null],[17,"NID_X9_62_c2tnb191v3","","",null,null],[17,"NID_X9_62_c2onb191v4","","",null,null],[17,"NID_X9_62_c2onb191v5","","",null,null],[17,"NID_X9_62_c2pnb208w1","","",null,null],[17,"NID_X9_62_c2tnb239v1","","",null,null],[17,"NID_X9_62_c2tnb239v2","","",null,null],[17,"NID_X9_62_c2tnb239v3","","",null,null],[17,"NID_X9_62_c2onb239v4","","",null,null],[17,"NID_X9_62_c2onb239v5","","",null,null],[17,"NID_X9_62_c2pnb272w1","","",null,null],[17,"NID_X9_62_c2pnb304w1","","",null,null],[17,"NID_X9_62_c2tnb359v1","","",null,null],[17,"NID_X9_62_c2pnb368w1","","",null,null],[17,"NID_X9_62_c2tnb431r1","","",null,null],[17,"NID_X9_62_prime192v1","","",null,null],[17,"NID_X9_62_prime192v2","","",null,null],[17,"NID_X9_62_prime192v3","","",null,null],[17,"NID_X9_62_prime239v1","","",null,null],[17,"NID_X9_62_prime239v2","","",null,null],[17,"NID_X9_62_prime239v3","","",null,null],[17,"NID_X9_62_prime256v1","","",null,null],[17,"NID_ecdsa_with_SHA1","","",null,null],[17,"NID_ecdsa_with_Recommended","","",null,null],[17,"NID_ecdsa_with_Specified","","",null,null],[17,"NID_ecdsa_with_SHA224","","",null,null],[17,"NID_ecdsa_with_SHA256","","",null,null],[17,"NID_ecdsa_with_SHA384","","",null,null],[17,"NID_ecdsa_with_SHA512","","",null,null],[17,"NID_secp112r1","","",null,null],[17,"NID_secp112r2","","",null,null],[17,"NID_secp128r1","","",null,null],[17,"NID_secp128r2","","",null,null],[17,"NID_secp160k1","","",null,null],[17,"NID_secp160r1","","",null,null],[17,"NID_secp160r2","","",null,null],[17,"NID_secp192k1","","",null,null],[17,"NID_secp224k1","","",null,null],[17,"NID_secp224r1","","",null,null],[17,"NID_secp256k1","","",null,null],[17,"NID_secp384r1","","",null,null],[17,"NID_secp521r1","","",null,null],[17,"NID_sect113r1","","",null,null],[17,"NID_sect113r2","","",null,null],[17,"NID_sect131r1","","",null,null],[17,"NID_sect131r2","","",null,null],[17,"NID_sect163k1","","",null,null],[17,"NID_sect163r1","","",null,null],[17,"NID_sect163r2","","",null,null],[17,"NID_sect193r1","","",null,null],[17,"NID_sect193r2","","",null,null],[17,"NID_sect233k1","","",null,null],[17,"NID_sect233r1","","",null,null],[17,"NID_sect239k1","","",null,null],[17,"NID_sect283k1","","",null,null],[17,"NID_sect283r1","","",null,null],[17,"NID_sect409k1","","",null,null],[17,"NID_sect409r1","","",null,null],[17,"NID_sect571k1","","",null,null],[17,"NID_sect571r1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls3","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls4","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls5","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls6","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls7","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls8","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls9","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls10","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls11","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls12","","",null,null],[17,"NID_cast5_cbc","","",null,null],[17,"NID_cast5_ecb","","",null,null],[17,"NID_cast5_cfb64","","",null,null],[17,"NID_cast5_ofb64","","",null,null],[17,"NID_pbeWithMD5AndCast5_CBC","","",null,null],[17,"NID_id_PasswordBasedMAC","","",null,null],[17,"NID_id_DHBasedMac","","",null,null],[17,"NID_rsadsi","","",null,null],[17,"NID_pkcs","","",null,null],[17,"NID_pkcs1","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_md2WithRSAEncryption","","",null,null],[17,"NID_md4WithRSAEncryption","","",null,null],[17,"NID_md5WithRSAEncryption","","",null,null],[17,"NID_sha1WithRSAEncryption","","",null,null],[17,"NID_rsaesOaep","","",null,null],[17,"NID_mgf1","","",null,null],[17,"NID_rsassaPss","","",null,null],[17,"NID_sha256WithRSAEncryption","","",null,null],[17,"NID_sha384WithRSAEncryption","","",null,null],[17,"NID_sha512WithRSAEncryption","","",null,null],[17,"NID_sha224WithRSAEncryption","","",null,null],[17,"NID_pkcs3","","",null,null],[17,"NID_dhKeyAgreement","","",null,null],[17,"NID_pkcs5","","",null,null],[17,"NID_pbeWithMD2AndDES_CBC","","",null,null],[17,"NID_pbeWithMD5AndDES_CBC","","",null,null],[17,"NID_pbeWithMD2AndRC2_CBC","","",null,null],[17,"NID_pbeWithMD5AndRC2_CBC","","",null,null],[17,"NID_pbeWithSHA1AndDES_CBC","","",null,null],[17,"NID_pbeWithSHA1AndRC2_CBC","","",null,null],[17,"NID_id_pbkdf2","","",null,null],[17,"NID_pbes2","","",null,null],[17,"NID_pbmac1","","",null,null],[17,"NID_pkcs7","","",null,null],[17,"NID_pkcs7_data","","",null,null],[17,"NID_pkcs7_signed","","",null,null],[17,"NID_pkcs7_enveloped","","",null,null],[17,"NID_pkcs7_signedAndEnveloped","","",null,null],[17,"NID_pkcs7_digest","","",null,null],[17,"NID_pkcs7_encrypted","","",null,null],[17,"NID_pkcs9","","",null,null],[17,"NID_pkcs9_emailAddress","","",null,null],[17,"NID_pkcs9_unstructuredName","","",null,null],[17,"NID_pkcs9_contentType","","",null,null],[17,"NID_pkcs9_messageDigest","","",null,null],[17,"NID_pkcs9_signingTime","","",null,null],[17,"NID_pkcs9_countersignature","","",null,null],[17,"NID_pkcs9_challengePassword","","",null,null],[17,"NID_pkcs9_unstructuredAddress","","",null,null],[17,"NID_pkcs9_extCertAttributes","","",null,null],[17,"NID_ext_req","","",null,null],[17,"NID_SMIMECapabilities","","",null,null],[17,"NID_SMIME","","",null,null],[17,"NID_id_smime_mod","","",null,null],[17,"NID_id_smime_ct","","",null,null],[17,"NID_id_smime_aa","","",null,null],[17,"NID_id_smime_alg","","",null,null],[17,"NID_id_smime_cd","","",null,null],[17,"NID_id_smime_spq","","",null,null],[17,"NID_id_smime_cti","","",null,null],[17,"NID_id_smime_mod_cms","","",null,null],[17,"NID_id_smime_mod_ess","","",null,null],[17,"NID_id_smime_mod_oid","","",null,null],[17,"NID_id_smime_mod_msg_v3","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_88","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_97","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",null,null],[17,"NID_id_smime_ct_receipt","","",null,null],[17,"NID_id_smime_ct_authData","","",null,null],[17,"NID_id_smime_ct_publishCert","","",null,null],[17,"NID_id_smime_ct_TSTInfo","","",null,null],[17,"NID_id_smime_ct_TDTInfo","","",null,null],[17,"NID_id_smime_ct_contentInfo","","",null,null],[17,"NID_id_smime_ct_DVCSRequestData","","",null,null],[17,"NID_id_smime_ct_DVCSResponseData","","",null,null],[17,"NID_id_smime_ct_compressedData","","",null,null],[17,"NID_id_ct_asciiTextWithCRLF","","",null,null],[17,"NID_id_smime_aa_receiptRequest","","",null,null],[17,"NID_id_smime_aa_securityLabel","","",null,null],[17,"NID_id_smime_aa_mlExpandHistory","","",null,null],[17,"NID_id_smime_aa_contentHint","","",null,null],[17,"NID_id_smime_aa_msgSigDigest","","",null,null],[17,"NID_id_smime_aa_encapContentType","","",null,null],[17,"NID_id_smime_aa_contentIdentifier","","",null,null],[17,"NID_id_smime_aa_macValue","","",null,null],[17,"NID_id_smime_aa_equivalentLabels","","",null,null],[17,"NID_id_smime_aa_contentReference","","",null,null],[17,"NID_id_smime_aa_encrypKeyPref","","",null,null],[17,"NID_id_smime_aa_signingCertificate","","",null,null],[17,"NID_id_smime_aa_smimeEncryptCerts","","",null,null],[17,"NID_id_smime_aa_timeStampToken","","",null,null],[17,"NID_id_smime_aa_ets_sigPolicyId","","",null,null],[17,"NID_id_smime_aa_ets_commitmentType","","",null,null],[17,"NID_id_smime_aa_ets_signerLocation","","",null,null],[17,"NID_id_smime_aa_ets_signerAttr","","",null,null],[17,"NID_id_smime_aa_ets_otherSigCert","","",null,null],[17,"NID_id_smime_aa_ets_contentTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_CertificateRefs","","",null,null],[17,"NID_id_smime_aa_ets_RevocationRefs","","",null,null],[17,"NID_id_smime_aa_ets_certValues","","",null,null],[17,"NID_id_smime_aa_ets_revocationValues","","",null,null],[17,"NID_id_smime_aa_ets_escTimeStamp","","",null,null],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",null,null],[17,"NID_id_smime_aa_signatureType","","",null,null],[17,"NID_id_smime_aa_dvcs_dvc","","",null,null],[17,"NID_id_smime_alg_ESDHwith3DES","","",null,null],[17,"NID_id_smime_alg_ESDHwithRC2","","",null,null],[17,"NID_id_smime_alg_3DESwrap","","",null,null],[17,"NID_id_smime_alg_RC2wrap","","",null,null],[17,"NID_id_smime_alg_ESDH","","",null,null],[17,"NID_id_smime_alg_CMS3DESwrap","","",null,null],[17,"NID_id_smime_alg_CMSRC2wrap","","",null,null],[17,"NID_id_alg_PWRI_KEK","","",null,null],[17,"NID_id_smime_cd_ldap","","",null,null],[17,"NID_id_smime_spq_ets_sqt_uri","","",null,null],[17,"NID_id_smime_spq_ets_sqt_unotice","","",null,null],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",null,null],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",null,null],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",null,null],[17,"NID_id_smime_cti_ets_proofOfSender","","",null,null],[17,"NID_id_smime_cti_ets_proofOfApproval","","",null,null],[17,"NID_id_smime_cti_ets_proofOfCreation","","",null,null],[17,"NID_friendlyName","","",null,null],[17,"NID_localKeyID","","",null,null],[17,"NID_ms_csp_name","","",null,null],[17,"NID_LocalKeySet","","",null,null],[17,"NID_x509Certificate","","",null,null],[17,"NID_sdsiCertificate","","",null,null],[17,"NID_x509Crl","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",null,null],[17,"NID_keyBag","","",null,null],[17,"NID_pkcs8ShroudedKeyBag","","",null,null],[17,"NID_certBag","","",null,null],[17,"NID_crlBag","","",null,null],[17,"NID_secretBag","","",null,null],[17,"NID_safeContentsBag","","",null,null],[17,"NID_md2","","",null,null],[17,"NID_md4","","",null,null],[17,"NID_md5","","",null,null],[17,"NID_md5_sha1","","",null,null],[17,"NID_hmacWithMD5","","",null,null],[17,"NID_hmacWithSHA1","","",null,null],[17,"NID_hmacWithSHA224","","",null,null],[17,"NID_hmacWithSHA256","","",null,null],[17,"NID_hmacWithSHA384","","",null,null],[17,"NID_hmacWithSHA512","","",null,null],[17,"NID_rc2_cbc","","",null,null],[17,"NID_rc2_ecb","","",null,null],[17,"NID_rc2_cfb64","","",null,null],[17,"NID_rc2_ofb64","","",null,null],[17,"NID_rc2_40_cbc","","",null,null],[17,"NID_rc2_64_cbc","","",null,null],[17,"NID_rc4","","",null,null],[17,"NID_rc4_40","","",null,null],[17,"NID_des_ede3_cbc","","",null,null],[17,"NID_rc5_cbc","","",null,null],[17,"NID_rc5_ecb","","",null,null],[17,"NID_rc5_cfb64","","",null,null],[17,"NID_rc5_ofb64","","",null,null],[17,"NID_ms_ext_req","","",null,null],[17,"NID_ms_code_ind","","",null,null],[17,"NID_ms_code_com","","",null,null],[17,"NID_ms_ctl_sign","","",null,null],[17,"NID_ms_sgc","","",null,null],[17,"NID_ms_efs","","",null,null],[17,"NID_ms_smartcard_login","","",null,null],[17,"NID_ms_upn","","",null,null],[17,"NID_idea_cbc","","",null,null],[17,"NID_idea_ecb","","",null,null],[17,"NID_idea_cfb64","","",null,null],[17,"NID_idea_ofb64","","",null,null],[17,"NID_bf_cbc","","",null,null],[17,"NID_bf_ecb","","",null,null],[17,"NID_bf_cfb64","","",null,null],[17,"NID_bf_ofb64","","",null,null],[17,"NID_id_pkix","","",null,null],[17,"NID_id_pkix_mod","","",null,null],[17,"NID_id_pe","","",null,null],[17,"NID_id_qt","","",null,null],[17,"NID_id_kp","","",null,null],[17,"NID_id_it","","",null,null],[17,"NID_id_pkip","","",null,null],[17,"NID_id_alg","","",null,null],[17,"NID_id_cmc","","",null,null],[17,"NID_id_on","","",null,null],[17,"NID_id_pda","","",null,null],[17,"NID_id_aca","","",null,null],[17,"NID_id_qcs","","",null,null],[17,"NID_id_cct","","",null,null],[17,"NID_id_ppl","","",null,null],[17,"NID_id_ad","","",null,null],[17,"NID_id_pkix1_explicit_88","","",null,null],[17,"NID_id_pkix1_implicit_88","","",null,null],[17,"NID_id_pkix1_explicit_93","","",null,null],[17,"NID_id_pkix1_implicit_93","","",null,null],[17,"NID_id_mod_crmf","","",null,null],[17,"NID_id_mod_cmc","","",null,null],[17,"NID_id_mod_kea_profile_88","","",null,null],[17,"NID_id_mod_kea_profile_93","","",null,null],[17,"NID_id_mod_cmp","","",null,null],[17,"NID_id_mod_qualified_cert_88","","",null,null],[17,"NID_id_mod_qualified_cert_93","","",null,null],[17,"NID_id_mod_attribute_cert","","",null,null],[17,"NID_id_mod_timestamp_protocol","","",null,null],[17,"NID_id_mod_ocsp","","",null,null],[17,"NID_id_mod_dvcs","","",null,null],[17,"NID_id_mod_cmp2000","","",null,null],[17,"NID_info_access","","",null,null],[17,"NID_biometricInfo","","",null,null],[17,"NID_qcStatements","","",null,null],[17,"NID_ac_auditEntity","","",null,null],[17,"NID_ac_targeting","","",null,null],[17,"NID_aaControls","","",null,null],[17,"NID_sbgp_ipAddrBlock","","",null,null],[17,"NID_sbgp_autonomousSysNum","","",null,null],[17,"NID_sbgp_routerIdentifier","","",null,null],[17,"NID_ac_proxying","","",null,null],[17,"NID_sinfo_access","","",null,null],[17,"NID_proxyCertInfo","","",null,null],[17,"NID_id_qt_cps","","",null,null],[17,"NID_id_qt_unotice","","",null,null],[17,"NID_textNotice","","",null,null],[17,"NID_server_auth","","",null,null],[17,"NID_client_auth","","",null,null],[17,"NID_code_sign","","",null,null],[17,"NID_email_protect","","",null,null],[17,"NID_ipsecEndSystem","","",null,null],[17,"NID_ipsecTunnel","","",null,null],[17,"NID_ipsecUser","","",null,null],[17,"NID_time_stamp","","",null,null],[17,"NID_OCSP_sign","","",null,null],[17,"NID_dvcs","","",null,null],[17,"NID_id_it_caProtEncCert","","",null,null],[17,"NID_id_it_signKeyPairTypes","","",null,null],[17,"NID_id_it_encKeyPairTypes","","",null,null],[17,"NID_id_it_preferredSymmAlg","","",null,null],[17,"NID_id_it_caKeyUpdateInfo","","",null,null],[17,"NID_id_it_currentCRL","","",null,null],[17,"NID_id_it_unsupportedOIDs","","",null,null],[17,"NID_id_it_subscriptionRequest","","",null,null],[17,"NID_id_it_subscriptionResponse","","",null,null],[17,"NID_id_it_keyPairParamReq","","",null,null],[17,"NID_id_it_keyPairParamRep","","",null,null],[17,"NID_id_it_revPassphrase","","",null,null],[17,"NID_id_it_implicitConfirm","","",null,null],[17,"NID_id_it_confirmWaitTime","","",null,null],[17,"NID_id_it_origPKIMessage","","",null,null],[17,"NID_id_it_suppLangTags","","",null,null],[17,"NID_id_regCtrl","","",null,null],[17,"NID_id_regInfo","","",null,null],[17,"NID_id_regCtrl_regToken","","",null,null],[17,"NID_id_regCtrl_authenticator","","",null,null],[17,"NID_id_regCtrl_pkiPublicationInfo","","",null,null],[17,"NID_id_regCtrl_pkiArchiveOptions","","",null,null],[17,"NID_id_regCtrl_oldCertID","","",null,null],[17,"NID_id_regCtrl_protocolEncrKey","","",null,null],[17,"NID_id_regInfo_utf8Pairs","","",null,null],[17,"NID_id_regInfo_certReq","","",null,null],[17,"NID_id_alg_des40","","",null,null],[17,"NID_id_alg_noSignature","","",null,null],[17,"NID_id_alg_dh_sig_hmac_sha1","","",null,null],[17,"NID_id_alg_dh_pop","","",null,null],[17,"NID_id_cmc_statusInfo","","",null,null],[17,"NID_id_cmc_identification","","",null,null],[17,"NID_id_cmc_identityProof","","",null,null],[17,"NID_id_cmc_dataReturn","","",null,null],[17,"NID_id_cmc_transactionId","","",null,null],[17,"NID_id_cmc_senderNonce","","",null,null],[17,"NID_id_cmc_recipientNonce","","",null,null],[17,"NID_id_cmc_addExtensions","","",null,null],[17,"NID_id_cmc_encryptedPOP","","",null,null],[17,"NID_id_cmc_decryptedPOP","","",null,null],[17,"NID_id_cmc_lraPOPWitness","","",null,null],[17,"NID_id_cmc_getCert","","",null,null],[17,"NID_id_cmc_getCRL","","",null,null],[17,"NID_id_cmc_revokeRequest","","",null,null],[17,"NID_id_cmc_regInfo","","",null,null],[17,"NID_id_cmc_responseInfo","","",null,null],[17,"NID_id_cmc_queryPending","","",null,null],[17,"NID_id_cmc_popLinkRandom","","",null,null],[17,"NID_id_cmc_popLinkWitness","","",null,null],[17,"NID_id_cmc_confirmCertAcceptance","","",null,null],[17,"NID_id_on_personalData","","",null,null],[17,"NID_id_on_permanentIdentifier","","",null,null],[17,"NID_id_pda_dateOfBirth","","",null,null],[17,"NID_id_pda_placeOfBirth","","",null,null],[17,"NID_id_pda_gender","","",null,null],[17,"NID_id_pda_countryOfCitizenship","","",null,null],[17,"NID_id_pda_countryOfResidence","","",null,null],[17,"NID_id_aca_authenticationInfo","","",null,null],[17,"NID_id_aca_accessIdentity","","",null,null],[17,"NID_id_aca_chargingIdentity","","",null,null],[17,"NID_id_aca_group","","",null,null],[17,"NID_id_aca_role","","",null,null],[17,"NID_id_aca_encAttrs","","",null,null],[17,"NID_id_qcs_pkixQCSyntax_v1","","",null,null],[17,"NID_id_cct_crs","","",null,null],[17,"NID_id_cct_PKIData","","",null,null],[17,"NID_id_cct_PKIResponse","","",null,null],[17,"NID_id_ppl_anyLanguage","","",null,null],[17,"NID_id_ppl_inheritAll","","",null,null],[17,"NID_Independent","","",null,null],[17,"NID_ad_OCSP","","",null,null],[17,"NID_ad_ca_issuers","","",null,null],[17,"NID_ad_timeStamping","","",null,null],[17,"NID_ad_dvcs","","",null,null],[17,"NID_caRepository","","",null,null],[17,"NID_id_pkix_OCSP_basic","","",null,null],[17,"NID_id_pkix_OCSP_Nonce","","",null,null],[17,"NID_id_pkix_OCSP_CrlID","","",null,null],[17,"NID_id_pkix_OCSP_acceptableResponses","","",null,null],[17,"NID_id_pkix_OCSP_noCheck","","",null,null],[17,"NID_id_pkix_OCSP_archiveCutoff","","",null,null],[17,"NID_id_pkix_OCSP_serviceLocator","","",null,null],[17,"NID_id_pkix_OCSP_extendedStatus","","",null,null],[17,"NID_id_pkix_OCSP_valid","","",null,null],[17,"NID_id_pkix_OCSP_path","","",null,null],[17,"NID_id_pkix_OCSP_trustRoot","","",null,null],[17,"NID_algorithm","","",null,null],[17,"NID_md5WithRSA","","",null,null],[17,"NID_des_ecb","","",null,null],[17,"NID_des_cbc","","",null,null],[17,"NID_des_ofb64","","",null,null],[17,"NID_des_cfb64","","",null,null],[17,"NID_rsaSignature","","",null,null],[17,"NID_dsa_2","","",null,null],[17,"NID_dsaWithSHA","","",null,null],[17,"NID_shaWithRSAEncryption","","",null,null],[17,"NID_des_ede_ecb","","",null,null],[17,"NID_des_ede3_ecb","","",null,null],[17,"NID_des_ede_cbc","","",null,null],[17,"NID_des_ede_cfb64","","",null,null],[17,"NID_des_ede3_cfb64","","",null,null],[17,"NID_des_ede_ofb64","","",null,null],[17,"NID_des_ede3_ofb64","","",null,null],[17,"NID_desx_cbc","","",null,null],[17,"NID_sha","","",null,null],[17,"NID_sha1","","",null,null],[17,"NID_dsaWithSHA1_2","","",null,null],[17,"NID_sha1WithRSA","","",null,null],[17,"NID_ripemd160","","",null,null],[17,"NID_ripemd160WithRSA","","",null,null],[17,"NID_sxnet","","",null,null],[17,"NID_X500","","",null,null],[17,"NID_X509","","",null,null],[17,"NID_commonName","","",null,null],[17,"NID_surname","","",null,null],[17,"NID_serialNumber","","",null,null],[17,"NID_countryName","","",null,null],[17,"NID_localityName","","",null,null],[17,"NID_stateOrProvinceName","","",null,null],[17,"NID_streetAddress","","",null,null],[17,"NID_organizationName","","",null,null],[17,"NID_organizationalUnitName","","",null,null],[17,"NID_title","","",null,null],[17,"NID_description","","",null,null],[17,"NID_searchGuide","","",null,null],[17,"NID_businessCategory","","",null,null],[17,"NID_postalAddress","","",null,null],[17,"NID_postalCode","","",null,null],[17,"NID_postOfficeBox","","",null,null],[17,"NID_physicalDeliveryOfficeName","","",null,null],[17,"NID_telephoneNumber","","",null,null],[17,"NID_telexNumber","","",null,null],[17,"NID_teletexTerminalIdentifier","","",null,null],[17,"NID_facsimileTelephoneNumber","","",null,null],[17,"NID_x121Address","","",null,null],[17,"NID_internationaliSDNNumber","","",null,null],[17,"NID_registeredAddress","","",null,null],[17,"NID_destinationIndicator","","",null,null],[17,"NID_preferredDeliveryMethod","","",null,null],[17,"NID_presentationAddress","","",null,null],[17,"NID_supportedApplicationContext","","",null,null],[17,"NID_member","","",null,null],[17,"NID_owner","","",null,null],[17,"NID_roleOccupant","","",null,null],[17,"NID_seeAlso","","",null,null],[17,"NID_userPassword","","",null,null],[17,"NID_userCertificate","","",null,null],[17,"NID_cACertificate","","",null,null],[17,"NID_authorityRevocationList","","",null,null],[17,"NID_certificateRevocationList","","",null,null],[17,"NID_crossCertificatePair","","",null,null],[17,"NID_name","","",null,null],[17,"NID_givenName","","",null,null],[17,"NID_initials","","",null,null],[17,"NID_generationQualifier","","",null,null],[17,"NID_x500UniqueIdentifier","","",null,null],[17,"NID_dnQualifier","","",null,null],[17,"NID_enhancedSearchGuide","","",null,null],[17,"NID_protocolInformation","","",null,null],[17,"NID_distinguishedName","","",null,null],[17,"NID_uniqueMember","","",null,null],[17,"NID_houseIdentifier","","",null,null],[17,"NID_supportedAlgorithms","","",null,null],[17,"NID_deltaRevocationList","","",null,null],[17,"NID_dmdName","","",null,null],[17,"NID_pseudonym","","",null,null],[17,"NID_role","","",null,null],[17,"NID_X500algorithms","","",null,null],[17,"NID_rsa","","",null,null],[17,"NID_mdc2WithRSA","","",null,null],[17,"NID_mdc2","","",null,null],[17,"NID_id_ce","","",null,null],[17,"NID_subject_directory_attributes","","",null,null],[17,"NID_subject_key_identifier","","",null,null],[17,"NID_key_usage","","",null,null],[17,"NID_private_key_usage_period","","",null,null],[17,"NID_subject_alt_name","","",null,null],[17,"NID_issuer_alt_name","","",null,null],[17,"NID_basic_constraints","","",null,null],[17,"NID_crl_number","","",null,null],[17,"NID_crl_reason","","",null,null],[17,"NID_invalidity_date","","",null,null],[17,"NID_delta_crl","","",null,null],[17,"NID_issuing_distribution_point","","",null,null],[17,"NID_certificate_issuer","","",null,null],[17,"NID_name_constraints","","",null,null],[17,"NID_crl_distribution_points","","",null,null],[17,"NID_certificate_policies","","",null,null],[17,"NID_any_policy","","",null,null],[17,"NID_policy_mappings","","",null,null],[17,"NID_authority_key_identifier","","",null,null],[17,"NID_policy_constraints","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_freshest_crl","","",null,null],[17,"NID_inhibit_any_policy","","",null,null],[17,"NID_target_information","","",null,null],[17,"NID_no_rev_avail","","",null,null],[17,"NID_anyExtendedKeyUsage","","",null,null],[17,"NID_netscape","","",null,null],[17,"NID_netscape_cert_extension","","",null,null],[17,"NID_netscape_data_type","","",null,null],[17,"NID_netscape_cert_type","","",null,null],[17,"NID_netscape_base_url","","",null,null],[17,"NID_netscape_revocation_url","","",null,null],[17,"NID_netscape_ca_revocation_url","","",null,null],[17,"NID_netscape_renewal_url","","",null,null],[17,"NID_netscape_ca_policy_url","","",null,null],[17,"NID_netscape_ssl_server_name","","",null,null],[17,"NID_netscape_comment","","",null,null],[17,"NID_netscape_cert_sequence","","",null,null],[17,"NID_ns_sgc","","",null,null],[17,"NID_org","","",null,null],[17,"NID_dod","","",null,null],[17,"NID_iana","","",null,null],[17,"NID_Directory","","",null,null],[17,"NID_Management","","",null,null],[17,"NID_Experimental","","",null,null],[17,"NID_Private","","",null,null],[17,"NID_Security","","",null,null],[17,"NID_SNMPv2","","",null,null],[17,"NID_Mail","","",null,null],[17,"NID_Enterprises","","",null,null],[17,"NID_dcObject","","",null,null],[17,"NID_mime_mhs","","",null,null],[17,"NID_mime_mhs_headings","","",null,null],[17,"NID_mime_mhs_bodies","","",null,null],[17,"NID_id_hex_partial_message","","",null,null],[17,"NID_id_hex_multipart_message","","",null,null],[17,"NID_zlib_compression","","",null,null],[17,"NID_aes_128_ecb","","",null,null],[17,"NID_aes_128_cbc","","",null,null],[17,"NID_aes_128_ofb128","","",null,null],[17,"NID_aes_128_cfb128","","",null,null],[17,"NID_id_aes128_wrap","","",null,null],[17,"NID_aes_128_gcm","","",null,null],[17,"NID_aes_128_ccm","","",null,null],[17,"NID_id_aes128_wrap_pad","","",null,null],[17,"NID_aes_192_ecb","","",null,null],[17,"NID_aes_192_cbc","","",null,null],[17,"NID_aes_192_ofb128","","",null,null],[17,"NID_aes_192_cfb128","","",null,null],[17,"NID_id_aes192_wrap","","",null,null],[17,"NID_aes_192_gcm","","",null,null],[17,"NID_aes_192_ccm","","",null,null],[17,"NID_id_aes192_wrap_pad","","",null,null],[17,"NID_aes_256_ecb","","",null,null],[17,"NID_aes_256_cbc","","",null,null],[17,"NID_aes_256_ofb128","","",null,null],[17,"NID_aes_256_cfb128","","",null,null],[17,"NID_id_aes256_wrap","","",null,null],[17,"NID_aes_256_gcm","","",null,null],[17,"NID_aes_256_ccm","","",null,null],[17,"NID_id_aes256_wrap_pad","","",null,null],[17,"NID_aes_128_cfb1","","",null,null],[17,"NID_aes_192_cfb1","","",null,null],[17,"NID_aes_256_cfb1","","",null,null],[17,"NID_aes_128_cfb8","","",null,null],[17,"NID_aes_192_cfb8","","",null,null],[17,"NID_aes_256_cfb8","","",null,null],[17,"NID_aes_128_ctr","","",null,null],[17,"NID_aes_192_ctr","","",null,null],[17,"NID_aes_256_ctr","","",null,null],[17,"NID_aes_128_xts","","",null,null],[17,"NID_aes_256_xts","","",null,null],[17,"NID_des_cfb1","","",null,null],[17,"NID_des_cfb8","","",null,null],[17,"NID_des_ede3_cfb1","","",null,null],[17,"NID_des_ede3_cfb8","","",null,null],[17,"NID_sha256","","",null,null],[17,"NID_sha384","","",null,null],[17,"NID_sha512","","",null,null],[17,"NID_sha224","","",null,null],[17,"NID_dsa_with_SHA224","","",null,null],[17,"NID_dsa_with_SHA256","","",null,null],[17,"NID_hold_instruction_code","","",null,null],[17,"NID_hold_instruction_none","","",null,null],[17,"NID_hold_instruction_call_issuer","","",null,null],[17,"NID_hold_instruction_reject","","",null,null],[17,"NID_data","","",null,null],[17,"NID_pss","","",null,null],[17,"NID_ucl","","",null,null],[17,"NID_pilot","","",null,null],[17,"NID_pilotAttributeType","","",null,null],[17,"NID_pilotAttributeSyntax","","",null,null],[17,"NID_pilotObjectClass","","",null,null],[17,"NID_pilotGroups","","",null,null],[17,"NID_iA5StringSyntax","","",null,null],[17,"NID_caseIgnoreIA5StringSyntax","","",null,null],[17,"NID_pilotObject","","",null,null],[17,"NID_pilotPerson","","",null,null],[17,"NID_account","","",null,null],[17,"NID_document","","",null,null],[17,"NID_room","","",null,null],[17,"NID_documentSeries","","",null,null],[17,"NID_Domain","","",null,null],[17,"NID_rFC822localPart","","",null,null],[17,"NID_dNSDomain","","",null,null],[17,"NID_domainRelatedObject","","",null,null],[17,"NID_friendlyCountry","","",null,null],[17,"NID_simpleSecurityObject","","",null,null],[17,"NID_pilotOrganization","","",null,null],[17,"NID_pilotDSA","","",null,null],[17,"NID_qualityLabelledData","","",null,null],[17,"NID_userId","","",null,null],[17,"NID_textEncodedORAddress","","",null,null],[17,"NID_rfc822Mailbox","","",null,null],[17,"NID_info","","",null,null],[17,"NID_favouriteDrink","","",null,null],[17,"NID_roomNumber","","",null,null],[17,"NID_photo","","",null,null],[17,"NID_userClass","","",null,null],[17,"NID_host","","",null,null],[17,"NID_manager","","",null,null],[17,"NID_documentIdentifier","","",null,null],[17,"NID_documentTitle","","",null,null],[17,"NID_documentVersion","","",null,null],[17,"NID_documentAuthor","","",null,null],[17,"NID_documentLocation","","",null,null],[17,"NID_homeTelephoneNumber","","",null,null],[17,"NID_secretary","","",null,null],[17,"NID_otherMailbox","","",null,null],[17,"NID_lastModifiedTime","","",null,null],[17,"NID_lastModifiedBy","","",null,null],[17,"NID_domainComponent","","",null,null],[17,"NID_aRecord","","",null,null],[17,"NID_pilotAttributeType27","","",null,null],[17,"NID_mXRecord","","",null,null],[17,"NID_nSRecord","","",null,null],[17,"NID_sOARecord","","",null,null],[17,"NID_cNAMERecord","","",null,null],[17,"NID_associatedDomain","","",null,null],[17,"NID_associatedName","","",null,null],[17,"NID_homePostalAddress","","",null,null],[17,"NID_personalTitle","","",null,null],[17,"NID_mobileTelephoneNumber","","",null,null],[17,"NID_pagerTelephoneNumber","","",null,null],[17,"NID_friendlyCountryName","","",null,null],[17,"NID_organizationalStatus","","",null,null],[17,"NID_janetMailbox","","",null,null],[17,"NID_mailPreferenceOption","","",null,null],[17,"NID_buildingName","","",null,null],[17,"NID_dSAQuality","","",null,null],[17,"NID_singleLevelQuality","","",null,null],[17,"NID_subtreeMinimumQuality","","",null,null],[17,"NID_subtreeMaximumQuality","","",null,null],[17,"NID_personalSignature","","",null,null],[17,"NID_dITRedirect","","",null,null],[17,"NID_audio","","",null,null],[17,"NID_documentPublisher","","",null,null],[17,"NID_id_set","","",null,null],[17,"NID_set_ctype","","",null,null],[17,"NID_set_msgExt","","",null,null],[17,"NID_set_attr","","",null,null],[17,"NID_set_policy","","",null,null],[17,"NID_set_certExt","","",null,null],[17,"NID_set_brand","","",null,null],[17,"NID_setct_PANData","","",null,null],[17,"NID_setct_PANToken","","",null,null],[17,"NID_setct_PANOnly","","",null,null],[17,"NID_setct_OIData","","",null,null],[17,"NID_setct_PI","","",null,null],[17,"NID_setct_PIData","","",null,null],[17,"NID_setct_PIDataUnsigned","","",null,null],[17,"NID_setct_HODInput","","",null,null],[17,"NID_setct_AuthResBaggage","","",null,null],[17,"NID_setct_AuthRevReqBaggage","","",null,null],[17,"NID_setct_AuthRevResBaggage","","",null,null],[17,"NID_setct_CapTokenSeq","","",null,null],[17,"NID_setct_PInitResData","","",null,null],[17,"NID_setct_PI_TBS","","",null,null],[17,"NID_setct_PResData","","",null,null],[17,"NID_setct_AuthReqTBS","","",null,null],[17,"NID_setct_AuthResTBS","","",null,null],[17,"NID_setct_AuthResTBSX","","",null,null],[17,"NID_setct_AuthTokenTBS","","",null,null],[17,"NID_setct_CapTokenData","","",null,null],[17,"NID_setct_CapTokenTBS","","",null,null],[17,"NID_setct_AcqCardCodeMsg","","",null,null],[17,"NID_setct_AuthRevReqTBS","","",null,null],[17,"NID_setct_AuthRevResData","","",null,null],[17,"NID_setct_AuthRevResTBS","","",null,null],[17,"NID_setct_CapReqTBS","","",null,null],[17,"NID_setct_CapReqTBSX","","",null,null],[17,"NID_setct_CapResData","","",null,null],[17,"NID_setct_CapRevReqTBS","","",null,null],[17,"NID_setct_CapRevReqTBSX","","",null,null],[17,"NID_setct_CapRevResData","","",null,null],[17,"NID_setct_CredReqTBS","","",null,null],[17,"NID_setct_CredReqTBSX","","",null,null],[17,"NID_setct_CredResData","","",null,null],[17,"NID_setct_CredRevReqTBS","","",null,null],[17,"NID_setct_CredRevReqTBSX","","",null,null],[17,"NID_setct_CredRevResData","","",null,null],[17,"NID_setct_PCertReqData","","",null,null],[17,"NID_setct_PCertResTBS","","",null,null],[17,"NID_setct_BatchAdminReqData","","",null,null],[17,"NID_setct_BatchAdminResData","","",null,null],[17,"NID_setct_CardCInitResTBS","","",null,null],[17,"NID_setct_MeAqCInitResTBS","","",null,null],[17,"NID_setct_RegFormResTBS","","",null,null],[17,"NID_setct_CertReqData","","",null,null],[17,"NID_setct_CertReqTBS","","",null,null],[17,"NID_setct_CertResData","","",null,null],[17,"NID_setct_CertInqReqTBS","","",null,null],[17,"NID_setct_ErrorTBS","","",null,null],[17,"NID_setct_PIDualSignedTBE","","",null,null],[17,"NID_setct_PIUnsignedTBE","","",null,null],[17,"NID_setct_AuthReqTBE","","",null,null],[17,"NID_setct_AuthResTBE","","",null,null],[17,"NID_setct_AuthResTBEX","","",null,null],[17,"NID_setct_AuthTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBEX","","",null,null],[17,"NID_setct_AcqCardCodeMsgTBE","","",null,null],[17,"NID_setct_AuthRevReqTBE","","",null,null],[17,"NID_setct_AuthRevResTBE","","",null,null],[17,"NID_setct_AuthRevResTBEB","","",null,null],[17,"NID_setct_CapReqTBE","","",null,null],[17,"NID_setct_CapReqTBEX","","",null,null],[17,"NID_setct_CapResTBE","","",null,null],[17,"NID_setct_CapRevReqTBE","","",null,null],[17,"NID_setct_CapRevReqTBEX","","",null,null],[17,"NID_setct_CapRevResTBE","","",null,null],[17,"NID_setct_CredReqTBE","","",null,null],[17,"NID_setct_CredReqTBEX","","",null,null],[17,"NID_setct_CredResTBE","","",null,null],[17,"NID_setct_CredRevReqTBE","","",null,null],[17,"NID_setct_CredRevReqTBEX","","",null,null],[17,"NID_setct_CredRevResTBE","","",null,null],[17,"NID_setct_BatchAdminReqTBE","","",null,null],[17,"NID_setct_BatchAdminResTBE","","",null,null],[17,"NID_setct_RegFormReqTBE","","",null,null],[17,"NID_setct_CertReqTBE","","",null,null],[17,"NID_setct_CertReqTBEX","","",null,null],[17,"NID_setct_CertResTBE","","",null,null],[17,"NID_setct_CRLNotificationTBS","","",null,null],[17,"NID_setct_CRLNotificationResTBS","","",null,null],[17,"NID_setct_BCIDistributionTBS","","",null,null],[17,"NID_setext_genCrypt","","",null,null],[17,"NID_setext_miAuth","","",null,null],[17,"NID_setext_pinSecure","","",null,null],[17,"NID_setext_pinAny","","",null,null],[17,"NID_setext_track2","","",null,null],[17,"NID_setext_cv","","",null,null],[17,"NID_set_policy_root","","",null,null],[17,"NID_setCext_hashedRoot","","",null,null],[17,"NID_setCext_certType","","",null,null],[17,"NID_setCext_merchData","","",null,null],[17,"NID_setCext_cCertRequired","","",null,null],[17,"NID_setCext_tunneling","","",null,null],[17,"NID_setCext_setExt","","",null,null],[17,"NID_setCext_setQualf","","",null,null],[17,"NID_setCext_PGWYcapabilities","","",null,null],[17,"NID_setCext_TokenIdentifier","","",null,null],[17,"NID_setCext_Track2Data","","",null,null],[17,"NID_setCext_TokenType","","",null,null],[17,"NID_setCext_IssuerCapabilities","","",null,null],[17,"NID_setAttr_Cert","","",null,null],[17,"NID_setAttr_PGWYcap","","",null,null],[17,"NID_setAttr_TokenType","","",null,null],[17,"NID_setAttr_IssCap","","",null,null],[17,"NID_set_rootKeyThumb","","",null,null],[17,"NID_set_addPolicy","","",null,null],[17,"NID_setAttr_Token_EMV","","",null,null],[17,"NID_setAttr_Token_B0Prime","","",null,null],[17,"NID_setAttr_IssCap_CVM","","",null,null],[17,"NID_setAttr_IssCap_T2","","",null,null],[17,"NID_setAttr_IssCap_Sig","","",null,null],[17,"NID_setAttr_GenCryptgrm","","",null,null],[17,"NID_setAttr_T2Enc","","",null,null],[17,"NID_setAttr_T2cleartxt","","",null,null],[17,"NID_setAttr_TokICCsig","","",null,null],[17,"NID_setAttr_SecDevSig","","",null,null],[17,"NID_set_brand_IATA_ATA","","",null,null],[17,"NID_set_brand_Diners","","",null,null],[17,"NID_set_brand_AmericanExpress","","",null,null],[17,"NID_set_brand_JCB","","",null,null],[17,"NID_set_brand_Visa","","",null,null],[17,"NID_set_brand_MasterCard","","",null,null],[17,"NID_set_brand_Novus","","",null,null],[17,"NID_des_cdmf","","",null,null],[17,"NID_rsaOAEPEncryptionSET","","",null,null],[17,"NID_ipsec3","","",null,null],[17,"NID_ipsec4","","",null,null],[17,"NID_whirlpool","","",null,null],[17,"NID_cryptopro","","",null,null],[17,"NID_cryptocom","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",null,null],[17,"NID_id_GostR3411_94","","",null,null],[17,"NID_id_HMACGostR3411_94","","",null,null],[17,"NID_id_GostR3410_2001","","",null,null],[17,"NID_id_GostR3410_94","","",null,null],[17,"NID_id_Gost28147_89","","",null,null],[17,"NID_gost89_cnt","","",null,null],[17,"NID_id_Gost28147_89_MAC","","",null,null],[17,"NID_id_GostR3411_94_prf","","",null,null],[17,"NID_id_GostR3410_2001DH","","",null,null],[17,"NID_id_GostR3410_94DH","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",null,null],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",null,null],[17,"NID_id_GostR3411_94_TestParamSet","","",null,null],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",null,null],[17,"NID_id_Gost28147_89_TestParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_TestParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_TestParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_a","","",null,null],[17,"NID_id_GostR3410_94_aBis","","",null,null],[17,"NID_id_GostR3410_94_b","","",null,null],[17,"NID_id_GostR3410_94_bBis","","",null,null],[17,"NID_id_Gost28147_89_cc","","",null,null],[17,"NID_id_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",null,null],[17,"NID_camellia_128_cbc","","",null,null],[17,"NID_camellia_192_cbc","","",null,null],[17,"NID_camellia_256_cbc","","",null,null],[17,"NID_id_camellia128_wrap","","",null,null],[17,"NID_id_camellia192_wrap","","",null,null],[17,"NID_id_camellia256_wrap","","",null,null],[17,"NID_camellia_128_ecb","","",null,null],[17,"NID_camellia_128_ofb128","","",null,null],[17,"NID_camellia_128_cfb128","","",null,null],[17,"NID_camellia_192_ecb","","",null,null],[17,"NID_camellia_192_ofb128","","",null,null],[17,"NID_camellia_192_cfb128","","",null,null],[17,"NID_camellia_256_ecb","","",null,null],[17,"NID_camellia_256_ofb128","","",null,null],[17,"NID_camellia_256_cfb128","","",null,null],[17,"NID_camellia_128_cfb1","","",null,null],[17,"NID_camellia_192_cfb1","","",null,null],[17,"NID_camellia_256_cfb1","","",null,null],[17,"NID_camellia_128_cfb8","","",null,null],[17,"NID_camellia_192_cfb8","","",null,null],[17,"NID_camellia_256_cfb8","","",null,null],[17,"NID_kisa","","",null,null],[17,"NID_seed_ecb","","",null,null],[17,"NID_seed_cbc","","",null,null],[17,"NID_seed_cfb128","","",null,null],[17,"NID_seed_ofb128","","",null,null],[17,"NID_hmac","","",null,null],[17,"NID_cmac","","",null,null],[17,"NID_rc4_hmac_md5","","",null,null],[17,"NID_aes_128_cbc_hmac_sha1","","",null,null],[17,"NID_aes_192_cbc_hmac_sha1","","",null,null],[17,"NID_aes_256_cbc_hmac_sha1","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"RSA_F4","","",null,null],[17,"RSA_PKCS1_PADDING","","",null,null],[17,"RSA_SSLV23_PADDING","","",null,null],[17,"RSA_NO_PADDING","","",null,null],[17,"RSA_PKCS1_OAEP_PADDING","","",null,null],[17,"RSA_X931_PADDING","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_SET_TMP_ECDH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"OPENSSL_NPN_UNSUPPORTED","","",null,null],[17,"OPENSSL_NPN_NEGOTIATED","","",null,null],[17,"OPENSSL_NPN_NO_OVERLAP","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",23,null]],"paths":[[3,"stack_st_ASN1_OBJECT"],[3,"stack_st_X509"],[3,"stack_st_X509_NAME"],[3,"stack_st_X509_ATTRIBUTE"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"_STACK"],[3,"BIO_METHOD"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"BIGNUM"],[3,"DH"],[3,"X509"],[3,"X509_CINF"],[3,"ASN1_ENCODING"],[3,"X509_VAL"],[3,"SSL_CTX"],[3,"GENERAL_NAME"],[4,"point_conversion_form_t"]]};
searchIndex["futures_cpupool"] = {"doc":"A simple crate for executing work on a thread pool, and getting back a\nfuture.","items":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",null,null],[3,"Builder","","Thread pool configuration object",null,null],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn` function, which\nproxies the futures running on the thread pool.",null,null],[11,"new","","Creates a new thread pool with `size` worker threads associated with it.",0,{"inputs":[{"name":"usize"}],"output":{"name":"cpupool"}}],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal to the number\nof CPUs on the host.",0,{"inputs":[],"output":{"name":"cpupool"}}],[11,"spawn","","Spawns a future to run on this thread pool, returning a future\nrepresenting the produced value.",0,null],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,null],[11,"clone","","",0,null],[11,"drop","","",0,null],[11,"poll","","",1,null],[11,"new","","Create a builder a number of workers equal to the number\nof CPUs on the host.",2,{"inputs":[],"output":{"name":"builder"}}],[11,"pool_size","","Set size of a future CpuPool",2,null],[11,"after_start","","Execute function `f` right after each thread is started but before\nrunning any jobs on it",2,null],[11,"before_stop","","Execute function `f` before each worker thread stops",2,null],[11,"create","","Create CpuPool with configured parameters",2,null]],"paths":[[3,"CpuPool"],[3,"CpuFuture"],[3,"Builder"]]};
searchIndex["net2"] = {"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An &quot;in progress&quot; TCP socket which has not yet been connected or listened.",null,null],[3,"UdpBuilder","","An &quot;in progress&quot; UDP socket which has not yet been connected.",null,null],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM`\ntype, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM`\ntype, and with a protocol argument of 0.",0,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",0,null],[11,"listen","","Mark a socket as ready to accept incoming connection requests using\naccept()",0,null],[11,"connect","","Initiate a connection on this socket to the specified address.",0,null],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,null],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,null],[11,"fmt","","",0,null],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM`\ntype, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM`\ntype, and with a protocol argument of 0.",1,{"inputs":[],"output":{"name":"result"}}],[11,"bind","","Binds this socket to the specified address.",1,null],[11,"fmt","","",1,null],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,null],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,null],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,null],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,null],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,null],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,null],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,null],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,null],[11,"from_raw_fd","","",0,{"inputs":[{"name":"c_int"}],"output":{"name":"tcpbuilder"}}],[11,"as_raw_fd","","",0,null],[11,"from_raw_fd","","",1,{"inputs":[{"name":"c_int"}],"output":{"name":"udpbuilder"}}],[11,"as_raw_fd","","",1,null],[0,"unix","","Unix-specific extensions to the `std::net` types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,null],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,null],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this library.",null,null],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,null],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,null],[11,"reuse_port","net2","",0,null],[11,"get_reuse_port","","",0,null],[11,"reuse_port","","",1,null],[11,"get_reuse_port","","",1,null],[8,"TcpStreamExt","","Extension methods for the standard [`TcpStream` type][link] in `std::net`.",null,null],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,null],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,null],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,null],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,null],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,null],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on this socket.",4,null],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this socket, and if so\nthe amount of milliseconds between them.",4,null],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on this socket.",4,null],[10,"keepalive","","Returns whether keepalive messages are enabled on this socket, and if so\nthe duration of time between them.",4,null],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,null],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,null],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,null],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,null],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,null],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,null],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,null],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,null],[10,"connect","","Executes a `connect` operation on this socket, establishing a connection\nto the host specified by `addr`.",4,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,null],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,null],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",4,null],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",4,null],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener` type][link] in `std::net`.",null,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,null],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,null],[10,"set_linger","","Sets the linger duration of this socket by setting the SO_LINGER option",5,null],[10,"linger","","reads the linger duration for this socket by getting the SO_LINGER option",5,null],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket` type][link] in `std::net`.",null,null],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,null],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,null],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,null],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,null],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,null],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,null],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,null],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",6,null],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",6,null],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",6,null],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,null],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",6,null],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,null],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,null],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,null],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,null],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,null],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,null],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,null],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,null],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,null],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,null],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,null],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,null],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,null],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,null],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,null],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,null],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,null],[10,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",6,null],[10,"send","","Sends data on the socket to the remote address to which it is connected.",6,null],[10,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",6,null],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,null]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["num_cpus"] = {"doc":"Replaces the deprecated functionality of std::os::num_cpus.","items":[[5,"get","num_cpus","Returns the number of CPUs of the current machine.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current machine.\nIf not possible on the particular architecture returns same as get() which\nis the logical CPUs.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector.\nReturns None otherwise.",9,null],[11,"into_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,null],[10,"read_usize","","Read a usize value.",25,null],[10,"read_u64","","Read a u64 value.",25,null],[10,"read_u32","","Read a u32 value.",25,null],[10,"read_u16","","Read a u16 value.",25,null],[10,"read_u8","","Read a u8 value.",25,null],[10,"read_isize","","Read a isize value.",25,null],[10,"read_i64","","Read a i64 value.",25,null],[10,"read_i32","","Read a i32 value.",25,null],[10,"read_i16","","Read a i16 value.",25,null],[10,"read_i8","","Read a i8 value.",25,null],[10,"read_bool","","Read a bool value.",25,null],[10,"read_f64","","Read a f64 value.",25,null],[10,"read_f32","","Read a f32 value.",25,null],[10,"read_char","","Read a char value.",25,null],[10,"read_str","","Read a string value.",25,null],[10,"read_enum","","Read an enumeration value.",25,null],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,null],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,null],[10,"read_struct","","Read an struct value.",25,null],[10,"read_struct_field","","Read a field for a struct value.",25,null],[10,"read_tuple","","Read a tuple value.",25,null],[10,"read_tuple_arg","","Read a data item for a tuple.",25,null],[10,"read_tuple_struct","","Read a tuple struct value.",25,null],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,null],[10,"read_option","","Read an optional value.",25,null],[10,"read_seq","","Read a sequence of values.",25,null],[10,"read_seq_elt","","Read an element in the sequence.",25,null],[10,"read_map","","Read an associative container (map).",25,null],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,null],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,null],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,null],[10,"emit_usize","","Emit a usize value.",26,null],[10,"emit_u64","","Emit a u64 value.",26,null],[10,"emit_u32","","Emit a u32 value.",26,null],[10,"emit_u16","","Emit a u16 value.",26,null],[10,"emit_u8","","Emit a u8 value.",26,null],[10,"emit_isize","","Emit a isize value.",26,null],[10,"emit_i64","","Emit a i64 value.",26,null],[10,"emit_i32","","Emit a i32 value.",26,null],[10,"emit_i16","","Emit a i16 value.",26,null],[10,"emit_i8","","Emit a i8 value.",26,null],[10,"emit_bool","","Emit a bool value.",26,null],[10,"emit_f64","","Emit a f64 value.",26,null],[10,"emit_f32","","Emit a f32 value.",26,null],[10,"emit_char","","Emit a char value.",26,null],[10,"emit_str","","Emit a string value.",26,null],[10,"emit_enum","","Emit an enumeration value.",26,null],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,null],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,null],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,null],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,null],[10,"emit_struct","","Emit a struct value.",26,null],[10,"emit_struct_field","","Emit a field item for a struct.",26,null],[10,"emit_tuple","","Emit a tuple value.",26,null],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,null],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,null],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,null],[10,"emit_option","","Emit an optional value.",26,null],[10,"emit_option_none","","Emit the `None` optional value.",26,null],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,null],[10,"emit_seq","","Emit a sequence of values.",26,null],[10,"emit_seq_elt","","Emit an element in a sequence.",26,null],[10,"emit_map","","Emit an associative container (map).",26,null],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,null],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,null],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,null],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,null],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the [URL Standard](http://url.spec.whatwg.org/)\nfor the [Rust](http://rust-lang.org/) programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement\n`ToSocketAddrs for (Host&lt;S&gt;, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL&#39;s scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as &#39;.&#39; dot-separated labels.\nNon-ASCII labels are encoded in punycode per IDNA.",2,null],[13,"Ipv4","","An IPv4 address.\n`Url::host_str` returns the serialization of this address,\nas four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address.\n`Url::host_str` returns the serialization of that address between `[` and `]` brackets,\nin the format per [RFC 5952 *A Recommendation\nfor IPv6 Address Text Representation*](https://tools.ietf.org/html/rfc5952):\nlowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",2,null],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",0,null],[11,"to_socket_addrs","","",0,null],[11,"next","","",5,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"inputs":[],"output":{"name":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple\n(as opposed to an opaque origin).",1,null],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,null],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"drop","","",7,null],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == &quot;/&quot;`.",7,null],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,\nexcept if these was only one segment to begin with.",7,null],[11,"pop","","Remove the last segment of this URL’s path.",7,null],[11,"push","","Append the given segment at the end of this URL’s path.",7,null],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",7,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[11,"from","","",3,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[0,"form_urlencoded","","Parser and serializer for the [`application/x-www-form-urlencoded` syntax](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The [`application/x-www-form-urlencoded` serializer](\nhttps://url.spec.whatwg.org/#concept-urlencoded-serializer).",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax\ninto a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The [`application/x-www-form-urlencoded` byte serializer](\nhttps://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",9,null],[10,"finish","","",9,null],[16,"Finished","","",9,null],[11,"clone","","",10,null],[11,"next","","",10,null],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",10,null],[11,"next","","",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"as_mut_string","url","",13,null],[11,"finish","","",13,null],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",14,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer\nfor a suffix of the given target.",14,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Remove any existing name/value pair.",14,null],[11,"append_pair","","Serialize and append a name/value pair.",14,null],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",14,null],[11,"finish","","If this serializer was constructed with a string, take and return that string.",14,null],[0,"percent_encoding","url","",null,null],[3,"SIMPLE_ENCODE_SET","url::percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on &#39;/&#39;-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"inputs":[{"name":"u8"}],"output":{"name":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"e"}],"output":{"name":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points.\nShould return true for all non-ASCII bytes.",15,null],[11,"clone","","",16,null],[11,"contains","","",16,null],[11,"clone","","",17,null],[11,"contains","","",17,null],[11,"clone","","",18,null],[11,"contains","","",18,null],[11,"clone","","",19,null],[11,"contains","","",19,null],[11,"clone","","",20,null],[11,"contains","","",20,null],[11,"clone","","",21,null],[11,"next","","",21,null],[11,"size_hint","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",22,null],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",22,null],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",22,null],[0,"quirks","url","Getters and setters for URL components implemented per https://url.spec.whatwg.org/#api",null,null],[5,"domain_to_ascii","url::quirks","https://url.spec.whatwg.org/#dom-url-domaintoascii",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"domain_to_unicode","","https://url.spec.whatwg.org/#dom-url-domaintounicode",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"href","","Getter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_href","","Setter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"origin","","Getter for https://url.spec.whatwg.org/#dom-url-origin",null,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[5,"protocol","","Getter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_protocol","","Setter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"username","","Getter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_username","","Setter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"password","","Getter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_password","","Setter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"host","","Getter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_host","","Setter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"hostname","","Getter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hostname","","Setter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"port","","Getter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_port","","Setter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"pathname","","Getter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_pathname","","Setter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"search","","Getter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_search","","Setter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"hash","","Getter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hash","","Setter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[11,"clone","url","",8,null],[11,"clone","","",23,null],[11,"base_url","","Change the base URL",23,null],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",23,null],[11,"parse","","Parse an URL string with the configuration so far.",23,null],[11,"parse","","Parse an absolute URL from a string.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",8,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",8,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",8,null],[11,"into_string","","Return the serialization of this URL.",8,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",8,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",8,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",8,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",8,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",8,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",8,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",8,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",8,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",8,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",8,null],[11,"port","","Return the port number for this URL, if any.",8,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",8,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",8,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",8,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",8,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",8,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",8,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",8,null],[11,"set_fragment","","Change this URL’s fragment identifier.",8,null],[11,"set_query","","Change this URL’s query string.",8,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",8,null],[11,"set_path","","Change this URL’s path.",8,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",8,null],[11,"set_port","","Change this URL’s port number.",8,null],[11,"set_host","","Change this URL’s host.",8,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",8,null],[11,"set_password","","Change this URL’s password.",8,null],[11,"set_username","","Change this URL’s username.",8,null],[11,"set_scheme","","Change this URL’s scheme.",8,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",8,null],[11,"to_socket_addrs","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"hash","","",8,null],[11,"as_ref","","",8,null],[11,"drop","","",13,null],[14,"define_encode_set","","Define a new struct\nthat implements the [`EncodeSet`](percent_encoding/trait.EncodeSet.html) trait,\nfor use in [`percent_decode()`](percent_encoding/fn.percent_encode.html)\nand related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"UrlQuery"],[3,"Serializer"],[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"],[3,"ParseOptions"]]};
searchIndex["relay"] = {"doc":"# relay","items":[[3,"Sender","relay","The Sender portion of a channel.",null,null],[3,"Receiver","","The receiver end of the channel.",null,null],[3,"Waiting","","A `Future` waiting for interest to be registered on the `Receiver`.",null,null],[3,"Canceled","","Represents that the `Sender` dropped before sending a message.",null,null],[5,"channel","","Create a new channel to send a message.",null,null],[11,"complete","","Sends the message to the `Receiver`.",0,null],[11,"is_canceled","","Returns true if the `Receiver` has been dropped.",0,null],[11,"waiting","","Creates a `Future` that waits until someone is waiting on the `Receiver`.",0,null],[11,"drop","","",0,null],[11,"fmt","","",0,null],[11,"is_canceled","","Returns true if the `Sender` was dropped without sending a message.",1,null],[11,"poll","","",1,null],[11,"drop","","",1,null],[11,"fmt","","",1,null],[11,"poll","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null]],"paths":[[3,"Sender"],[3,"Receiver"],[3,"Waiting"],[3,"Canceled"]]};
searchIndex["tokio_service"] = {"doc":"Definition of the core `Service` trait to Tokio","items":[[8,"Service","tokio_service","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",0,null],[16,"Response","","Responses given by the service.",0,null],[16,"Error","","Errors produced by the service.",0,null],[16,"Future","","The future response value.",0,null],[10,"call","","Process the request and return the response asynchronously.",0,null],[8,"NewService","","Creates new `Service` values.",null,null],[16,"Request","","Requests handled by the service",1,null],[16,"Response","","Responses given by the service",1,null],[16,"Error","","Errors produced by the service",1,null],[16,"Instance","","The `Service` value created by this factory",1,null],[10,"new_service","","Create and return a new service value.",1,null]],"paths":[[8,"Service"],[8,"NewService"]]};
searchIndex["futures"] = {"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready or not.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"NotReady","","Represents that a value is not ready yet, but may be so later.",0,null],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a sink.",null,null],[13,"Ready","","The `start_send` attempt succeeded, so the sending process has\n*started*; you muse use `Sink::poll_complete` to drive the send\nto completion.",1,null],[13,"NotReady","","The `start_send` attempt failed due to the sink being full. The value\nbeing sent is returned, and the current `Task` will be automatically\nnotified again once the sink has room.",1,null],[5,"result","","Creates a new &quot;leaf future&quot; which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"empty","","Creates a future which never resolves, representing a computation that never\nfinishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"err","","Creates a &quot;leaf future&quot; from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a &quot;leaf future&quot; from an immediate value of a finished and\nsuccessful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created\nby the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"map","","Change the success type of this `Async` value with the closure provided",0,null],[11,"is_ready","","Returns whether this is `Async::Ready`",0,null],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,null],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,null],[0,"future","","Futures",null,null],[3,"Empty","futures::future","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until a callback is\nscheduled.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of\nanother future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator, flattening a future-of-a-future to get just\nthe result of the final future.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a\nfuture-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which &quot;fuse&quot;s a future once it&#39;s been resolved.",null,null],[3,"IntoStream","","Future that forwards one element from the underlying future\n(whether it is success of error) and emits EOF after that.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to\ncomplete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to\ncomplete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to\ncomplete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to\ncomplete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"FromErr","","Future for the `from_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of\na future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two futures to\ncomplete.",null,null],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of\nanother future regardless of its outcome.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the\ncompleted values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of\nfutures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of\nfutures to succesfully complete. unlike `select_all`, this future ignores all\nbut the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads.\nUse Future::shared() method to convert any future into a `Shared` future.",null,null],[4,"Either","","Combines two different futures yielding the same item and error\ntypes into a single type.",null,null],[13,"A","","First branch of the type",2,null],[13,"B","","Second branch of the type",2,null],[5,"empty","","Creates a future which never resolves, representing a computation that never\nfinishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created\nby the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"result","","Creates a new &quot;leaf future&quot; which will resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a &quot;leaf future&quot; from an immediate value of a finished and\nsuccessful computation.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a &quot;leaf future&quot; from an immediate value of a failed computation.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures\ngiven.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"poll","","",3,null],[11,"poll","","",4,null],[11,"poll","","",5,null],[11,"poll","","",6,null],[11,"poll","","",7,null],[11,"poll","","",8,null],[11,"poll","","",9,null],[11,"poll","","",10,null],[11,"poll","","",11,null],[11,"poll","","",12,null],[11,"poll","","",13,null],[11,"poll","","",14,null],[11,"poll","","",15,null],[11,"poll","","",16,null],[11,"poll","","",17,null],[11,"poll","","",18,null],[11,"poll","","",19,null],[11,"poll","","",20,null],[11,"poll","","",21,null],[11,"poll","","",22,null],[11,"poll","","",2,null],[11,"poll","","",23,null],[11,"poll","","",24,null],[11,"poll","","",25,null],[11,"poll","","",26,null],[11,"new","","Creates a new `Shared` from another future.",27,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"poll","","",27,null],[11,"clone","","",27,null],[6,"BoxFuture","","A type alias for `Box&lt;Future + Send&gt;`",null,null],[8,"Future","","Trait for types which are a placeholder of a value that will become\navailable at possible some later point in time.",null,null],[16,"Item","","The type of value that this future will resolved with if it is\nsuccessful.",28,null],[16,"Error","","The type of error that this future will resolve with if it fails in a\nnormal fashion.",28,null],[10,"poll","","Query this future to see if its value has become available, registering\ninterest if it is not.",28,null],[11,"wait","","Block the current thread until this future is resolved.",28,null],[11,"boxed","","Convenience function for turning this future into a trait object.",28,null],[11,"map","","Map this future&#39;s result to a different type, returning a new future of\nthe resulting type.",28,null],[11,"map_err","","Map this future&#39;s error to a different error, returning a new future.",28,null],[11,"from_err","","Map this future&#39;s error to any error implementing `From` for\nthis future&#39;s `Error`, returning a new future.",28,null],[11,"then","","Chain on a computation for when a future finished, passing the result of\nthe future to the provided closure `f`.",28,null],[11,"and_then","","Execute another future after this one has resolved successfully.",28,null],[11,"or_else","","Execute another future if this one resolves with an error.",28,null],[11,"select","","Waits for either one of two futures to complete.",28,null],[11,"join","","Joins the result of two futures, waiting for them both to complete.",28,null],[11,"join3","","Same as `join`, but with more futures.",28,null],[11,"join4","","Same as `join`, but with more futures.",28,null],[11,"join5","","Same as `join`, but with more futures.",28,null],[11,"into_stream","","Convert this future into single element stream.",28,null],[11,"flatten","","Flatten the execution of this future when the successful result of this\nfuture is itself another future.",28,null],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this\nfuture is a stream.",28,null],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has\ncompleted.",28,null],[11,"catch_unwind","","Catches unwinding panics while polling the future.",28,null],[11,"shared","","Convert this future into `Shared` future.",28,null],[8,"IntoFuture","","Class of types which can be converted themselves into a future.",null,null],[16,"Future","","The future that this type can be converted into.",29,null],[16,"Item","","The item that the future may resolve with.",29,null],[16,"Error","","The error that the future may resolve with.",29,null],[10,"into_future","","Consumes this object and produces a future.",29,null],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",null,null],[16,"Future","","The future for the conversion.",30,null],[16,"Error","","Possible errors during conversion.",30,null],[10,"future_from","","Consume the given value, beginning the conversion.",30,{"inputs":[{"name":"t"}],"output":{"name":"future"}}],[0,"stream","futures","Asynchronous streams",null,null],[3,"IterStream","futures::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a\nstream.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield\nsome values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map\nthem to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of\nelements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a\nstream.",null,null],[3,"Fuse","","A stream which &quot;fuse&quot;s a stream once it&#39;s terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one\ntype to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one\ntype to another.",null,null],[3,"Merge","","An adapter for merging the output of two streams.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a\nstream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate\nholds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a\nstream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values\nto a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if\npossible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if\npossible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"Wait","","A stream combinator which converts an asynchronous stream to a **blocking\niterator**.",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"FuturesUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if\npossible, delivering results as they become available.",null,null],[4,"MergedItem","","An item returned from a merge stream, which represents an item from one or\nboth of the underlying streams.",null,null],[13,"First","","An item from the first stream",31,null],[13,"Second","","An item from the second stream",31,null],[13,"Both","","Items from both streams",31,null],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready\nto yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterstream"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"result"}],"output":{"name":"once"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[11,"poll","","",32,null],[11,"start_send","","",33,null],[11,"poll_complete","","",33,null],[11,"poll","","",33,null],[11,"poll","","",34,null],[11,"start_send","","",35,null],[11,"poll_complete","","",35,null],[11,"poll","","",35,null],[11,"start_send","","",36,null],[11,"poll_complete","","",36,null],[11,"poll","","",36,null],[11,"start_send","","",37,null],[11,"poll_complete","","",37,null],[11,"poll","","",37,null],[11,"poll","","",38,null],[11,"poll","","",39,null],[11,"start_send","","",40,null],[11,"poll_complete","","",40,null],[11,"poll","","",40,null],[11,"is_done","","Returns whether the underlying stream has finished or not.",40,null],[11,"into_inner","","Recover original stream",40,null],[11,"poll","","",41,null],[11,"start_send","","",42,null],[11,"poll_complete","","",42,null],[11,"poll","","",42,null],[11,"start_send","","",43,null],[11,"poll_complete","","",43,null],[11,"poll","","",43,null],[11,"poll","","",44,null],[11,"poll","","",45,null],[11,"start_send","","",46,null],[11,"poll_complete","","",46,null],[11,"poll","","",46,null],[11,"start_send","","",47,null],[11,"poll_complete","","",47,null],[11,"poll","","",47,null],[11,"peek","","Peek retrieves a reference to the next item in the stream.",47,null],[11,"poll","","",48,null],[11,"start_send","","",49,null],[11,"poll_complete","","",49,null],[11,"poll","","",49,null],[11,"start_send","","",50,null],[11,"poll_complete","","",50,null],[11,"poll","","",50,null],[11,"start_send","","",51,null],[11,"poll_complete","","",51,null],[11,"poll","","",51,null],[11,"start_send","","",52,null],[11,"poll_complete","","",52,null],[11,"poll","","",52,null],[11,"poll","","",53,null],[11,"poll","","",54,null],[11,"poll","","",55,null],[11,"start_send","","",56,null],[11,"poll_complete","","",56,null],[11,"poll","","",56,null],[11,"poll","","",57,null],[11,"start_send","","",57,null],[11,"poll_complete","","",57,null],[11,"poll","","",58,null],[11,"start_send","","",59,null],[11,"poll_complete","","",59,null],[11,"poll","","",59,null],[11,"poll","","",60,null],[11,"next","","",61,null],[11,"poll","","",62,null],[11,"start_send","","",63,null],[11,"poll_complete","","",63,null],[11,"poll","","",64,null],[6,"BoxStream","","A type alias for `Box&lt;Stream + Send&gt;`",null,null],[8,"Stream","","A stream of values, not all of which have been produced yet.",null,null],[16,"Item","","The type of item this stream will yield on success.",65,null],[16,"Error","","The type of error this stream may generate.",65,null],[10,"poll","","Attempt to pull out the next value of this stream, returning `None` if\nthe stream is finished.",65,null],[11,"wait","","Creates an iterator which blocks the current thread until each item of\nthis stream is resolved.",65,null],[11,"boxed","","Convenience function for turning this stream into a trait object.",65,null],[11,"into_future","","Converts this stream into a `Future`.",65,null],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",65,null],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",65,null],[11,"filter","","Filters the values produced by this stream according to the provided\npredicate.",65,null],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping\nthem to a different type.",65,null],[11,"then","","Chain on a computation for when a value is ready, passing the resulting\nitem to the provided closure `f`.",65,null],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful\nresults to the provided closure `f`.",65,null],[11,"or_else","","Chain on a computation for when an error happens, passing the\nerroneous result to the provided closure `f`.",65,null],[11,"collect","","Collect all of the values of this stream into a vector, returning a\nfuture representing the result of that computation.",65,null],[11,"fold","","Execute an accumulating computation over a stream, collecting all the\nvalues into one final result.",65,null],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",65,null],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to\n`true`.",65,null],[11,"for_each","","Runs this stream to completion, executing the provided closure for each\nelement on the stream.",65,null],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",65,null],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",65,null],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has\nfinished.",65,null],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",65,null],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",65,null],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",65,null],[11,"merge","","An adapter for merging the output of two streams.",65,null],[11,"zip","","An adapter for zipping two streams together.",65,null],[11,"peekable","","Creates a new stream which exposes a `peek` method.",65,null],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",65,null],[11,"select","","Creates a stream that selects the next element from either this stream\nor the provided one, whichever is ready first.",65,null],[11,"forward","","A future that completes after the given stream has been fully processed\ninto the sink, including flushing.",65,null],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink`\nobjects, which can be useful when you want to split ownership between\ntasks, or allow direct interaction between the two objects (e.g. via\n`Sink::send_all`).",65,null],[0,"sink","futures","Asynchronous sinks",null,null],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed\nnumber of values when the underlying sink is unable to accept them.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run *prior*\nto pushing a value into the underlying sink.",null,null],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the sink until all data\nhas been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and\nthen waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values\nto a sink and then waits until the sink has fully flushed those values.",null,null],[11,"poll","","",66,null],[11,"get_ref","","Get a shared reference to the inner sink.",66,null],[11,"get_mut","","Get a mutable reference to the inner sink.",66,null],[11,"start_send","","",66,null],[11,"poll_complete","","",66,null],[11,"get_ref","","Get a shared reference to the inner sink.",67,null],[11,"get_mut","","Get a mutable reference to the inner sink.",67,null],[11,"poll","","",67,null],[11,"get_ref","","Get a shared reference to the inner sink.",68,null],[11,"get_mut","","Get a mutable reference to the inner sink.",68,null],[11,"poll","","",68,null],[11,"poll","","",69,null],[11,"get_ref","","Get a shared reference to the inner sink.",70,null],[11,"get_mut","","Get a mutable reference to the inner sink.",70,null],[11,"poll","","",70,null],[11,"start_send","","",70,null],[11,"poll_complete","","",70,null],[6,"BoxSink","","A type alias for `Box&lt;Stream + Send&gt;`",null,null],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",71,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",71,null],[10,"start_send","","Begin the process of sending a value to the sink.",71,null],[10,"poll_complete","","Make progress on all pending requests, and determine whether they have\ncompleted.",71,null],[11,"with","","Composes a function *in front of* the sink.",71,null],[11,"buffer","","Adds a fixed-size buffer to the current sink.",71,null],[11,"flush","","A future that completes when the sink has finished processing all\npending requests.",71,null],[11,"send","","A future that completes after the given item has been fully processed\ninto the sink, including flushing.",71,null],[11,"send_all","","A future that completes after the given stream has been fully processed\ninto the sink, including flushing.",71,null],[0,"task","futures","Tasks used to drive a future computation",null,null],[3,"Task","futures::task","A handle to a &quot;task&quot;, which represents a single lightweight &quot;thread&quot; of\nexecution driving a future to completion.",null,null],[3,"LocalKey","","A key for task-local data stored in a future&#39;s task.",null,null],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",null,null],[5,"park","","Returns a handle to the current task to call `unpark` at a later date.",null,{"inputs":[],"output":{"name":"task"}}],[5,"with_unpark_event","","For the duration of the given callback, add an &quot;unpark event&quot; to be\ntriggered when the task handle is used to unpark the task.",null,{"inputs":[{"name":"unparkevent"},{"name":"f"}],"output":{"name":"r"}}],[8,"EventSet","","A concurrent set which allows for the insertion of `usize` values.",null,null],[10,"insert","","Insert the given ID into the set",72,null],[0,"executor","futures","Executors",null,null],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",null,null],[3,"Run","","Units of work submitted to an `Executor`, currently only created\ninternally.",null,null],[5,"spawn","","Spawns a new future, returning the fused future and task.",null,{"inputs":[{"name":"t"}],"output":{"name":"spawn"}}],[8,"Unpark","","A trait which represents a sink of notifications that a future is ready to\nmake progress.",null,null],[10,"unpark","","Indicates that an associated future and/or task are ready to make\nprogress.",73,null],[8,"Executor","","A trait representing requests to poll futures.",null,null],[10,"execute","","Requests that `Run` is executed soon on the given executor.",74,null],[0,"sync","futures","Future-aware synchronization",null,null],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which is a mutex between\ntwo possible owners.",null,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is\nacquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire&lt;T&gt;` future.",null,null],[0,"oneshot","","A one-shot, futures-aware channel",null,null],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation happening elsewhere in\nmemory.",null,null],[3,"Sender","","Represents the completion half of a oneshot through which the result of a\ncomputation is signaled.",null,null],[3,"Canceled","","Error returned from a `Receiver&lt;T&gt;` whenever the correponding `Sender&lt;T&gt;`\nis dropped.",null,null],[5,"channel","","Creates a new futures-aware, one-shot channel.",null,null],[11,"complete","","Completes this oneshot with a successful result.",75,null],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver` this has\npaired with has gone away.",75,null],[11,"drop","","",75,null],[11,"clone","","",76,null],[11,"eq","","",76,null],[11,"fmt","","",76,null],[11,"fmt","","",76,null],[11,"description","","",76,null],[11,"close","","Gracefully close this receiver, preventing sending any future messages.",77,null],[11,"poll","","",77,null],[11,"drop","","",77,null],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.",null,null],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send values.",null,null],[3,"UnboundedSender","","The transmission end of a channel which is used to send values.",null,null],[3,"Receiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"UnboundedReceiver","","The receiving end of a channel which implements the `Stream` trait.",null,null],[3,"SendError","","Error type for sending, used when the receiving end of the channel is\ndropped",null,null],[5,"channel","","Creates an in-memory channel implementation of the `Stream` trait with\nbounded capacity.",null,null],[5,"unbounded","","Creates an in-memory channel implementation of the `Stream` trait with\nunbounded capacity.",null,null],[11,"fmt","","",78,null],[11,"fmt","","",78,null],[11,"description","","",78,null],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",78,null],[11,"start_send","","",79,null],[11,"poll_complete","","",79,null],[11,"send","","Sends the provided message along this channel.",80,null],[11,"start_send","","",80,null],[11,"poll_complete","","",80,null],[11,"clone","","",80,null],[11,"clone","","",79,null],[11,"drop","","",79,null],[11,"close","","Closes the receiving half",81,null],[11,"poll","","",81,null],[11,"drop","","",81,null],[11,"close","","Closes the receiving half",82,null],[11,"poll","","",82,null],[11,"new","futures::sync","Creates a new `BiLock` protecting the provided data.",83,null],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it can&#39;t be\nacquired.",83,null],[11,"lock","","Perform a &quot;blocking lock&quot; of this lock, consuming this lock handle and\nreturning a future to the acquired lock.",83,null],[11,"deref","","",84,null],[11,"deref_mut","","",84,null],[11,"drop","","",84,null],[11,"poll","","",85,null],[11,"unlock","","Recovers the original `BiLock&lt;T&gt;`, unlocking this lock.",86,null],[11,"deref","","",86,null],[11,"deref_mut","","",86,null],[11,"drop","","",86,null],[6,"Poll","futures","Return type of the `Future::poll` method, indicates whether a future&#39;s value\nis ready or not.",null,null],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating the outcome of a\nsend attempt. See `AsyncSink` for more details.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll&lt;T, E&gt;`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null],[11,"with","futures::task","Access this task-local key, running the provided closure with a\nreference to the value.",87,null],[11,"clone","","",88,null],[11,"unpark","","Indicate that the task should attempt to poll its future in a timely\nfashion. This is typically done when alerting a future that an event of\ninterest has occurred through `Task::unpark`.",88,null],[11,"is_current","","Returns `true` when called from within the context of the task. In\nother words, the task is currently running on the thread calling the\nfunction.",88,null],[11,"fmt","","",88,null],[11,"clone","","",89,null],[11,"new","","Construct an unpark event that will insert `id` into `set` when\ntriggered.",89,{"inputs":[{"name":"arc"},{"name":"usize"}],"output":{"name":"unparkevent"}}],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",90,null],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",90,null],[11,"into_inner","","Consume the Spawn, returning its inner object",90,null],[11,"poll_future","","Polls the internal future, scheduling notifications to be sent to the\n`unpark` argument.",90,null],[11,"wait_future","","Waits for the internal future to complete, blocking this thread&#39;s\nexecution until it does.",90,null],[11,"execute","","A specialized function to request running a future to completion on the\nspecified executor.",90,null],[11,"poll_stream","","Like `poll_future`, except polls the underlying stream.",90,null],[11,"wait_stream","","Like `wait_future`, except only waits for the next element to arrive on\nthe underlying stream.",90,null],[11,"run","","Actually run the task (invoking `poll` on its future) on the current\nthread.",91,null]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Either"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Then"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[4,"MergedItem"],[3,"IterStream"],[3,"AndThen"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Map"],[3,"MapErr"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[8,"Stream"],[3,"With"],[3,"Flush"],[3,"Send"],[3,"SendAll"],[3,"Buffer"],[8,"Sink"],[8,"EventSet"],[8,"Unpark"],[8,"Executor"],[3,"Sender"],[3,"Canceled"],[3,"Receiver"],[3,"SendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[3,"LocalKey"],[3,"Task"],[3,"UnparkEvent"],[3,"Spawn"],[3,"Run"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).","items":[[5,"domain_to_ascii","idna","The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"domain_to_unicode","","The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm.",null,null],[0,"punycode","","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","[*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"flags"}],"output":{"name":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[11,"clone","","",0,null],[11,"fmt","","",1,null]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",16,null],[12,"sa_data","","",16,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",17,null],[12,"sin_port","","",17,null],[12,"sin_addr","","",17,null],[12,"sin_zero","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",19,null],[12,"sun_path","","",19,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",20,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",21,null],[12,"ai_family","","",21,null],[12,"ai_socktype","","",21,null],[12,"ai_protocol","","",21,null],[12,"ai_addrlen","","",21,null],[12,"ai_addr","","",21,null],[12,"ai_canonname","","",21,null],[12,"ai_next","","",21,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",22,null],[12,"nl_pid","","",22,null],[12,"nl_groups","","",22,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",23,null],[12,"sll_protocol","","",23,null],[12,"sll_ifindex","","",23,null],[12,"sll_hatype","","",23,null],[12,"sll_pkttype","","",23,null],[12,"sll_halen","","",23,null],[12,"sll_addr","","",23,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",24,null],[12,"tm_min","","",24,null],[12,"tm_hour","","",24,null],[12,"tm_mday","","",24,null],[12,"tm_mon","","",24,null],[12,"tm_year","","",24,null],[12,"tm_wday","","",24,null],[12,"tm_yday","","",24,null],[12,"tm_isdst","","",24,null],[12,"tm_gmtoff","","",24,null],[12,"tm_zone","","",24,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",25,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",26,null],[12,"dli_fbase","","",26,null],[12,"dli_sname","","",26,null],[12,"dli_saddr","","",26,null],[3,"epoll_event","","",null,null],[12,"events","","",27,null],[12,"u64","","",27,null],[3,"utsname","","",null,null],[12,"sysname","","",28,null],[12,"nodename","","",28,null],[12,"release","","",28,null],[12,"version","","",28,null],[12,"machine","","",28,null],[12,"domainname","","",28,null],[3,"lconv","","",null,null],[12,"decimal_point","","",29,null],[12,"thousands_sep","","",29,null],[12,"grouping","","",29,null],[12,"int_curr_symbol","","",29,null],[12,"currency_symbol","","",29,null],[12,"mon_decimal_point","","",29,null],[12,"mon_thousands_sep","","",29,null],[12,"mon_grouping","","",29,null],[12,"positive_sign","","",29,null],[12,"negative_sign","","",29,null],[12,"int_frac_digits","","",29,null],[12,"frac_digits","","",29,null],[12,"p_cs_precedes","","",29,null],[12,"p_sep_by_space","","",29,null],[12,"n_cs_precedes","","",29,null],[12,"n_sep_by_space","","",29,null],[12,"p_sign_posn","","",29,null],[12,"n_sign_posn","","",29,null],[12,"int_p_cs_precedes","","",29,null],[12,"int_p_sep_by_space","","",29,null],[12,"int_n_cs_precedes","","",29,null],[12,"int_n_sep_by_space","","",29,null],[12,"int_p_sign_posn","","",29,null],[12,"int_n_sign_posn","","",29,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",30,null],[12,"sigev_signo","","",30,null],[12,"sigev_notify","","",30,null],[12,"sigev_notify_thread_id","","",30,null],[3,"dirent","","",null,null],[12,"d_ino","","",31,null],[12,"d_off","","",31,null],[12,"d_reclen","","",31,null],[12,"d_type","","",31,null],[12,"d_name","","",31,null],[3,"dirent64","","",null,null],[12,"d_ino","","",32,null],[12,"d_off","","",32,null],[12,"d_reclen","","",32,null],[12,"d_type","","",32,null],[12,"d_name","","",32,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",33,null],[12,"rlim_max","","",33,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",34,null],[12,"gl_pathv","","",34,null],[12,"gl_offs","","",34,null],[12,"gl_flags","","",34,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",35,null],[12,"ifa_name","","",35,null],[12,"ifa_flags","","",35,null],[12,"ifa_addr","","",35,null],[12,"ifa_netmask","","",35,null],[12,"ifa_ifu","","",35,null],[12,"ifa_data","","",35,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",36,null],[12,"pw_passwd","","",36,null],[12,"pw_uid","","",36,null],[12,"pw_gid","","",36,null],[12,"pw_gecos","","",36,null],[12,"pw_dir","","",36,null],[12,"pw_shell","","",36,null],[3,"spwd","","",null,null],[12,"sp_namp","","",37,null],[12,"sp_pwdp","","",37,null],[12,"sp_lstchg","","",37,null],[12,"sp_min","","",37,null],[12,"sp_max","","",37,null],[12,"sp_warn","","",37,null],[12,"sp_inact","","",37,null],[12,"sp_expire","","",37,null],[12,"sp_flag","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",39,null],[12,"dqb_bsoftlimit","","",39,null],[12,"dqb_curspace","","",39,null],[12,"dqb_ihardlimit","","",39,null],[12,"dqb_isoftlimit","","",39,null],[12,"dqb_curinodes","","",39,null],[12,"dqb_btime","","",39,null],[12,"dqb_itime","","",39,null],[12,"dqb_valid","","",39,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",40,null],[12,"ssi_errno","","",40,null],[12,"ssi_code","","",40,null],[12,"ssi_pid","","",40,null],[12,"ssi_uid","","",40,null],[12,"ssi_fd","","",40,null],[12,"ssi_tid","","",40,null],[12,"ssi_band","","",40,null],[12,"ssi_overrun","","",40,null],[12,"ssi_trapno","","",40,null],[12,"ssi_status","","",40,null],[12,"ssi_int","","",40,null],[12,"ssi_ptr","","",40,null],[12,"ssi_utime","","",40,null],[12,"ssi_stime","","",40,null],[12,"ssi_addr","","",40,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",41,null],[12,"mq_maxmsg","","",41,null],[12,"mq_msgsize","","",41,null],[12,"mq_curmsgs","","",41,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",42,null],[12,"if_name","","",42,null],[3,"msginfo","","",null,null],[12,"msgpool","","",43,null],[12,"msgmap","","",43,null],[12,"msgmax","","",43,null],[12,"msgmnb","","",43,null],[12,"msgmni","","",43,null],[12,"msgssz","","",43,null],[12,"msgtql","","",43,null],[12,"msgseg","","",43,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",44,null],[12,"aio_lio_opcode","","",44,null],[12,"aio_reqprio","","",44,null],[12,"aio_buf","","",44,null],[12,"aio_nbytes","","",44,null],[12,"aio_sigevent","","",44,null],[12,"aio_offset","","",44,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",45,null],[12,"e_exit","","",45,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",46,null],[12,"tv_usec","","",46,null],[3,"utmpx","","",null,null],[12,"ut_type","","",47,null],[12,"ut_pid","","",47,null],[12,"ut_line","","",47,null],[12,"ut_id","","",47,null],[12,"ut_user","","",47,null],[12,"ut_host","","",47,null],[12,"ut_exit","","",47,null],[12,"ut_session","","",47,null],[12,"ut_tv","","",47,null],[12,"ut_addr_v6","","",47,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",48,null],[12,"sa_mask","","",48,null],[12,"sa_flags","","",48,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",49,null],[12,"ss_flags","","",49,null],[12,"ss_size","","",49,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",50,null],[12,"si_errno","","",50,null],[12,"si_code","","",50,null],[12,"_pad","","",50,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",51,null],[12,"gl_pathv","","",51,null],[12,"gl_offs","","",51,null],[12,"gl_flags","","",51,null],[3,"ucred","","",null,null],[12,"pid","","",52,null],[12,"uid","","",52,null],[12,"gid","","",52,null],[3,"statfs","","",null,null],[12,"f_type","","",53,null],[12,"f_bsize","","",53,null],[12,"f_blocks","","",53,null],[12,"f_bfree","","",53,null],[12,"f_bavail","","",53,null],[12,"f_files","","",53,null],[12,"f_ffree","","",53,null],[12,"f_fsid","","",53,null],[12,"f_namelen","","",53,null],[12,"f_frsize","","",53,null],[3,"msghdr","","",null,null],[12,"msg_name","","",54,null],[12,"msg_namelen","","",54,null],[12,"msg_iov","","",54,null],[12,"msg_iovlen","","",54,null],[12,"msg_control","","",54,null],[12,"msg_controllen","","",54,null],[12,"msg_flags","","",54,null],[3,"termios","","",null,null],[12,"c_iflag","","",55,null],[12,"c_oflag","","",55,null],[12,"c_cflag","","",55,null],[12,"c_lflag","","",55,null],[12,"c_line","","",55,null],[12,"c_cc","","",55,null],[12,"c_ispeed","","",55,null],[12,"c_ospeed","","",55,null],[3,"flock","","",null,null],[12,"l_type","","",56,null],[12,"l_whence","","",56,null],[12,"l_start","","",56,null],[12,"l_len","","",56,null],[12,"l_pid","","",56,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",57,null],[12,"loads","","",57,null],[12,"totalram","","",57,null],[12,"freeram","","",57,null],[12,"sharedram","","",57,null],[12,"bufferram","","",57,null],[12,"totalswap","","",57,null],[12,"freeswap","","",57,null],[12,"procs","","",57,null],[12,"pad","","",57,null],[12,"totalhigh","","",57,null],[12,"freehigh","","",57,null],[12,"mem_unit","","",57,null],[12,"_f","","",57,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",58,null],[12,"msg_stime","","",58,null],[12,"msg_rtime","","",58,null],[12,"msg_ctime","","",58,null],[12,"msg_qnum","","",58,null],[12,"msg_qbytes","","",58,null],[12,"msg_lspid","","",58,null],[12,"msg_lrpid","","",58,null],[3,"stat","","",null,null],[12,"st_dev","","",59,null],[12,"st_ino","","",59,null],[12,"st_nlink","","",59,null],[12,"st_mode","","",59,null],[12,"st_uid","","",59,null],[12,"st_gid","","",59,null],[12,"st_rdev","","",59,null],[12,"st_size","","",59,null],[12,"st_blksize","","",59,null],[12,"st_blocks","","",59,null],[12,"st_atime","","",59,null],[12,"st_atime_nsec","","",59,null],[12,"st_mtime","","",59,null],[12,"st_mtime_nsec","","",59,null],[12,"st_ctime","","",59,null],[12,"st_ctime_nsec","","",59,null],[3,"stat64","","",null,null],[12,"st_dev","","",60,null],[12,"st_ino","","",60,null],[12,"st_nlink","","",60,null],[12,"st_mode","","",60,null],[12,"st_uid","","",60,null],[12,"st_gid","","",60,null],[12,"st_rdev","","",60,null],[12,"st_size","","",60,null],[12,"st_blksize","","",60,null],[12,"st_blocks","","",60,null],[12,"st_atime","","",60,null],[12,"st_atime_nsec","","",60,null],[12,"st_mtime","","",60,null],[12,"st_mtime_nsec","","",60,null],[12,"st_ctime","","",60,null],[12,"st_ctime_nsec","","",60,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",61,null],[12,"exponent","","",61,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",62,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",63,null],[12,"swd","","",63,null],[12,"ftw","","",63,null],[12,"fop","","",63,null],[12,"rip","","",63,null],[12,"rdp","","",63,null],[12,"mxcsr","","",63,null],[12,"mxcr_mask","","",63,null],[12,"_st","","",63,null],[12,"_xmm","","",63,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",64,null],[12,"fpregs","","",64,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",65,null],[12,"uc_link","","",65,null],[12,"uc_stack","","",65,null],[12,"uc_mcontext","","",65,null],[12,"uc_sigmask","","",65,null],[3,"ipc_perm","","",null,null],[12,"__key","","",66,null],[12,"uid","","",66,null],[12,"gid","","",66,null],[12,"cuid","","",66,null],[12,"cgid","","",66,null],[12,"mode","","",66,null],[12,"__seq","","",66,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",67,null],[12,"shm_segsz","","",67,null],[12,"shm_atime","","",67,null],[12,"shm_dtime","","",67,null],[12,"shm_ctime","","",67,null],[12,"shm_cpid","","",67,null],[12,"shm_lpid","","",67,null],[12,"shm_nattch","","",67,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"ptsname_r","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",68,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"clone","","",67,null],[11,"clone","","",69,null],[11,"clone","","",57,null],[11,"clone","","",58,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",70,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"clone","","",73,null],[11,"clone","","",74,null],[11,"clone","","",75,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",76,null],[11,"clone","","",41,null],[11,"clone","","",77,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",78,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition&#39;s characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition&#39;s characters.",null,null],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D\n(canonical decomposition).",2,null],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD\n(compatibility decomposition).",2,null],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C\n(canonical decomposition followed by canonical composition).",2,null],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC\n(compatibility decomposition followed by canonical composition).",2,null]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::mem::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"fmt","","",0,null],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,null],[11,"store","","Do an atomic store with the given memory ordering.",0,null],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",0,null],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,null],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",0,null],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",0,null],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",0,null],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,null],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,null],[11,"fmt","","",1,null],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",1,null],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,null],[11,"drop","","",1,null],[11,"fmt","","",2,null],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"deref","","",3,null],[11,"as_raw","","",3,null],[11,"fmt","crossbeam::mem","",4,null],[11,"zeroed","","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc&lt;T&gt;`.",null,null],[11,"fmt","","",5,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,null],[11,"swap","","",5,null],[11,"take","","",5,null],[11,"fmt","","",6,null],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads\nblocked on `pop`.",6,null],[11,"is_empty","","Check if this queue is empty.",6,null],[11,"try_pop","","Attempt to dequeue from the front.",6,null],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is\nempty.",6,null],[11,"fmt","","",7,null],[11,"new","","Create a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,null],[11,"pop","","Attempt to pop the top element of the stack.\n**Deprecated method**, use try_pop",7,null],[11,"try_pop","","Attempt to pop the top element of the stack.",7,null],[11,"is_empty","","Check if this queue is empty.",7,null],[11,"fmt","","",8,null],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,null],[11,"try_pop","","Attempt to dequeue from the front.",8,null],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to\none side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the\nopposite end of the deque from the worker, and they only have access to the\n`steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",9,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more\ndata.",9,null],[13,"Data","","The stealer has successfully stolen some data.",9,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[11,"push","","Pushes data onto the front of this work queue.",10,null],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty\nqueue.",10,null],[11,"steal","","Steals work off the end of the queue (opposite of the worker&#39;s end)",11,null],[11,"clone","","",11,null],[11,"fmt","crossbeam::sync","",12,null],[11,"drop","","",12,null],[11,"new","","Creates a new `ArcCell`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous\nvalue.",12,null],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",12,null],[11,"fmt","crossbeam","",13,null],[11,"fmt","","",14,null],[11,"defer","","Schedule code to be executed when exiting the scope.",13,null],[11,"spawn","","Create a scoped thread.",13,null],[11,"join","","Join the scoped thread, returning the result it produced.",14,null],[11,"thread","","Get the underlying thread handle.",14,null],[11,"drop","","",13,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["void"] = {"doc":"# Void","items":[[4,"Void","void","The empty type for cases which can&#39;t occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,null],[8,"ResultVoidExt","","Extensions to `Result&lt;T, Void&gt;`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,null],[8,"ResultVoidErrExt","","Extensions to `Result&lt;Void, E&gt;`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"partial_cmp","","",2,null],[11,"description","","",2,null],[11,"cause","","",2,null]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["vecio"] = {"doc":"# vecio","items":[[8,"Writev","vecio","",null,null],[10,"writev","","",0,null],[8,"Readv","","",null,null],[10,"readv","","",1,null],[8,"Rawv","","",null,null],[10,"readv","","",2,null],[10,"writev","","",2,null]],"paths":[[8,"Writev"],[8,"Readv"],[8,"Rawv"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,null],[14,"__lazy_static_create","lazy_static","",null,null],[14,"lazy_static","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["mime"] = {"doc":"# Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[4,"TopLevel","","",null,null],[13,"Star","","",1,null],[13,"Text","","",1,null],[13,"Image","","",1,null],[13,"Audio","","",1,null],[13,"Video","","",1,null],[13,"Application","","",1,null],[13,"Multipart","","",1,null],[13,"Message","","",1,null],[13,"Model","","",1,null],[13,"Ext","","",1,null],[4,"SubLevel","","",null,null],[13,"Star","","",2,null],[13,"Plain","","",2,null],[13,"Html","","",2,null],[13,"Xml","","",2,null],[13,"Javascript","","",2,null],[13,"Css","","",2,null],[13,"EventStream","","",2,null],[13,"Json","","",2,null],[13,"WwwFormUrlEncoded","","",2,null],[13,"Msgpack","","",2,null],[13,"OctetStream","","",2,null],[13,"FormData","","",2,null],[13,"Png","","",2,null],[13,"Gif","","",2,null],[13,"Bmp","","",2,null],[13,"Jpeg","","",2,null],[13,"Ext","","",2,null],[4,"Attr","","",null,null],[13,"Charset","","",3,null],[13,"Boundary","","",3,null],[13,"Q","","",3,null],[13,"Ext","","",3,null],[4,"Value","","",null,null],[13,"Utf8","","",4,null],[13,"Ext","","",4,null],[6,"Param","","",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"as_str","","",1,null],[11,"deref","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"as_str","","",2,null],[11,"deref","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"as_str","","",3,null],[11,"deref","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",4,null],[11,"as_str","","",4,null],[11,"deref","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"fmt","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"get_param","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[14,"mime","","Easily create a Mime without having to import so many enums.",null,null]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed\nright-to-left and left-to-right text.  It is written in safe Rust, compatible with the\ncurrent stable release.","items":[[3,"BidiInfo","unicode_bidi","Output of `process_text`",null,null],[12,"classes","","The BidiClass of the character at each byte in the text.",0,null],[12,"levels","","The directional embedding level of each byte in the text.",0,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",0,null],[3,"ParagraphInfo","","Info about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",1,null],[12,"level","","The paragraph embedding level. http://www.unicode.org/reports/tr9/#BD4",1,null],[3,"InitialProperties","","Output of `initial_scan`",null,null],[12,"initial_classes","","The BidiClass of the character at each byte in the text.\nIf a character is multiple bytes, its class will appear multiple times in the vector.",2,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",2,null],[5,"process_text","","Determine the bidirectional embedding levels for a single paragraph.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"bidiinfo"}}],[5,"is_ltr","","Even embedding levels are left-to-right.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_rtl","","Odd levels are right-to-left.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"reorder_line","","Re-order a line based on resolved levels.",null,null],[5,"visual_runs","","Find the level runs within a line and return them in visual order.",null,null],[5,"initial_scan","","Find the paragraphs and BidiClasses in a string of text.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"initialproperties"}}],[0,"tables","","",null,null],[4,"BidiClass","unicode_bidi::tables","Represents the Unicode character property **Bidi_Class**, also known as\nthe *bidirectional character type*.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the BidiClass of a single char.",null,{"inputs":[{"name":"char"}],"output":{"name":"bidiclass"}}],[17,"UNICODE_VERSION","","The version of [Unicode](http://www.unicode.org/)\nthat the `bidi_class` function is based on.",null,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding level.",null,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"BidiInfo"],[3,"ParagraphInfo"],[3,"InitialProperties"],[4,"BidiClass"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["ws2_32"] = {"doc":"","items":[],"paths":[]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline and fall back\nto the heap for larger allocations.","items":[[3,"Drain","smallvec","",null,null],[3,"SmallVec","","",null,null],[3,"IntoIter","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","",null,null],[10,"len","","",0,null],[10,"push","","",0,null],[8,"Array","","",null,null],[16,"Item","","",1,null],[10,"size","","",1,{"inputs":[],"output":{"name":"usize"}}],[10,"ptr","","",1,null],[10,"ptr_mut","","",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"drop","","",2,null],[11,"set_len","","",3,null],[11,"inline_size","","",3,null],[11,"len","","",3,null],[11,"is_empty","","",3,null],[11,"capacity","","",3,null],[11,"spilled","","",3,null],[11,"drain","","",3,null],[11,"push","","",3,null],[11,"push_all_move","","",3,null],[11,"pop","","",3,null],[11,"grow","","",3,null],[11,"reserve","","",3,null],[11,"reserve_exact","","",3,null],[11,"shrink_to_fit","","",3,null],[11,"truncate","","",3,null],[11,"swap_remove","","",3,null],[11,"clear","","",3,null],[11,"remove","","",3,null],[11,"insert","","",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"borrow","","",3,null],[11,"borrow_mut","","",3,null],[11,"from","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"len","","",3,null],[11,"push","","",3,null],[11,"from_iter","","",3,{"inputs":[{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",3,null],[11,"fmt","","",3,null],[11,"new","","",3,{"inputs":[],"output":{"name":"smallvec"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"smallvec"}}],[11,"drop","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"partial_cmp","","",3,null],[11,"cmp","","",3,null],[11,"hash","","",3,null],[11,"drop","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"into_iter","","",3,null]],"paths":[[8,"VecLike"],[8,"Array"],[3,"Drain"],[3,"SmallVec"],[3,"IntoIter"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["unicase"] = {"doc":"# Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[12,"0","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"into","","",0,null]],"paths":[[3,"UniCase"]]};
searchIndex["httparse"] = {"doc":"# httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for\nparsing.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"is_complete","","Convenience method to check if status is complete.",4,null],[11,"is_partial","","Convenience method to check if status is partial.",4,null],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.",4,null],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["language_tags"] = {"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and\nother regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",0,null],[4,"Error","","Defines an Error type for langtags.",null,null],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,null],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,null],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,null],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,null],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,null],[13,"InvalidLanguage","","The given language subtag is invalid.",1,null],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,null],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,null],[6,"Result","","Result type used for this library.",null,null],[17,"GRANDFATHERED","","Contains all grandfathered tags.",null,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"clone","","",0,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",0,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,null],[11,"canonicalize","","Returns the canonical version of the language tag.",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[14,"langtag","","Utility for creating simple language tags.",null,null]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["slab"] = {"doc":"","items":[[3,"Slab","slab","A preallocated chunk of memory for storing objects of the same type.",null,null],[3,"Entry","","A handle to an occupied slot in the `Slab`",null,null],[3,"VacantEntry","","A handle to a vacant slot in the `Slab`",null,null],[3,"Iter","","An iterator over the values stored in the `Slab`",null,null],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",null,null],[11,"with_capacity","","Returns an empty `Slab` with the requested capacity",0,{"inputs":[{"name":"usize"}],"output":{"name":"slab"}}],[11,"len","","Returns the number of values stored by the `Slab`",0,null],[11,"capacity","","Returns the total capacity of the `Slab`",0,null],[11,"is_empty","","Returns true if the `Slab` is storing no values",0,null],[11,"available","","Returns the number of available slots remaining in the `Slab`",0,null],[11,"has_available","","Returns true if the `Slab` has available slots",0,null],[11,"contains","","Returns true if the `Slab` contains a value for the given token",0,null],[11,"get","","Get a reference to the value associated with the given token",0,null],[11,"get_mut","","Get a mutable reference to the value associated with the given token",0,null],[11,"insert","","Insert a value into the slab, returning the associated token",0,null],[11,"entry","","Returns a handle to an entry.",0,null],[11,"vacant_entry","","Returns a handle to a vacant entry.",0,null],[11,"remove","","Releases the given slot",0,null],[11,"retain","","Retain only the elements specified by the predicate.",0,null],[11,"iter","","An iterator for visiting all elements stored in the `Slab`",0,null],[11,"iter_mut","","A mutable iterator for visiting all elements stored in the `Slab`",0,null],[11,"clear","","Empty the slab, by freeing all entries",0,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Slab`. Does nothing if the capacity is\nalready sufficient.",0,null],[11,"index","","",0,null],[11,"index_mut","","",0,null],[11,"fmt","","",0,null],[11,"replace","","Replace the value stored in the entry",1,null],[11,"replace_with","","Apply the function to the current value, replacing it with the result\nof the function.",1,null],[11,"remove","","Remove and return the value stored in the entry",1,null],[11,"get","","Get a reference to the value stored in the entry",1,null],[11,"get_mut","","Get a mutable reference to the value stored in the entry",1,null],[11,"into_mut","","Convert the entry handle to a mutable reference",1,null],[11,"index","","Return the entry index",1,null],[11,"insert","","Insert a value into the entry",2,null],[11,"index","","Returns the entry index",2,null],[11,"next","","",3,null],[11,"next","","",4,null]],"paths":[[3,"Slab"],[3,"Entry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled\n`Cell`, but with frozen contents.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with frozen contents.",null,null],[3,"AtomicLazyCell","","A lazily filled `Cell`, with frozen contents.",null,null],[11,"new","","Creates a new, empty, `LazyCell`.",0,{"inputs":[],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",0,null],[11,"filled","","Test whether this cell has been previously filled.",0,null],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",0,null],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,null],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,{"inputs":[],"output":{"name":"atomiclazycell"}}],[11,"fill","","Put a value into this cell.",1,null],[11,"filled","","Test whether this cell has been previously filled.",1,null],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",1,null],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,null]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["scoped_tls"] = {"doc":"Scoped thread-local storage","items":[[3,"ScopedKey","scoped_tls","Type representing a thread local storage key corresponding to a reference\nto the type parameter `T`.",null,null],[11,"set","","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",0,null],[11,"with","","Gets a value out of this scoped variable.",0,null],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",0,null],[14,"scoped_thread_local","","",null,null]],"paths":[[3,"ScopedKey"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","",null,null],[14,"_matches_tt_as_expr_hack","","Work around &quot;error: unexpected token: `an interpolated tt`&quot;, whatever that means.",null,null],[14,"assert_matches","","",null,null],[14,"debug_assert_matches","","",null,null]],"paths":[]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["take"] = {"doc":"Cell allowing the inner value to be consumed without a mutable reference.","items":[[3,"Take","take","Cell allowing the inner value to be consumed without a mutable reference.",null,null],[11,"new","","Create and return a new `Take` value containing the given inner value.",0,{"inputs":[{"name":"t"}],"output":{"name":"take"}}],[11,"take","","Consume and return the inner value.",0,null],[11,"fmt","","",0,null]],"paths":[[3,"Take"]]};
initSearch(searchIndex);
